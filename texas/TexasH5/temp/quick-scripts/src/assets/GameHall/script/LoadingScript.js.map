{"version":3,"sources":["assets\\GameHall\\script\\LoadingScript.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA2C,iCAAY;IAAvD;QAAA,qEAwCC;QAtCG,gBAAU,GAAY,IAAI,CAAC;QAE3B,cAAQ,GAAa,IAAI,CAAC;QAE1B,iBAAW,GAAmB,IAAI,CAAC;QAE5B,mBAAa,GAAa,IAAI,CAAC;;IAgC1C,CAAC;IA9BG,8BAAM,GAAN;QACI,IAAI,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QACrC,IAAI,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC9B,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAeC;QAdG,UAAU;QACV,IAAI,IAAI,GAAW,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG;YACjB,IAAI,IAAI,IAAI,CAAC;YACb,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,OAAO;aACV;YACD,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;YAC5C,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QACtE,CAAC,CAAA;QACD,IAAI,CAAC,QAAQ,CAAC;YACV,KAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAA;IACZ,CAAC;IAEM,qCAAa,GAApB;QACI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAClE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;IACnC,CAAC;IArCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACS;IAE3B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;mDACO;IAE1B;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;sDACU;IANlB,aAAa;QADjC,OAAO;OACa,aAAa,CAwCjC;IAAD,oBAAC;CAxCD,AAwCC,CAxC0C,EAAE,CAAC,SAAS,GAwCtD;kBAxCoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoadingScript extends cc.Component {\n    @property(cc.Node)\n    layoutNode: cc.Node = null;\n    @property(cc.Label)\n    tipLabel: cc.Label = null;\n    @property(cc.ProgressBar)\n    progressBar: cc.ProgressBar = null;\n\n    public progressBarCB: Function = null;\n\n    onLoad() {\n        let scaleW = cc.winSize.width / 1080;\n        let scaleH = cc.winSize.height / 2340;\n        this.node.scaleX = scaleW;\n        this.node.scaleY = scaleH;\n    }\n\n    onEnable() {\n        // loading\n        let time: number = 0;\n        this.progressBar.barSprite.fillRange = time;\n        this.progressBarCB = () => {\n            time += 0.08;\n            if (time >= 0.95) {\n                return;\n            }\n            this.progressBar.barSprite.fillRange = time;\n            this.tipLabel.string = \"Loading...\" + Math.ceil(time * 100) + \"%\";\n        }\n        this.schedule(() => {\n            this.progressBarCB();\n        }, 0.01)\n    }\n\n    public loadCompelete() {\n        this.progressBar.barSprite.fillRange = 0.99;\n        this.tipLabel.string = \"Loading...\" + Math.ceil(0.99 * 100) + \"%\";\n        this.unschedule(this.progressBarCB);\n        this.layoutNode.active = false;\n    }\n}\n"]}