{"version":3,"sources":["assets\\GameHall\\script\\Lobby\\share\\qrcode.ts"],"names":[],"mappings":"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X,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;KAC9B;IAED,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IAChF,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IAC7F,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IAEjE,cAAc,EAAE,UAAU,IAAI;QAC7B,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;QACnB,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACnE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9E;QACD,OAAO,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;IAC7C,CAAC;IAED,gBAAgB,EAAE,UAAU,IAAI;QAC/B,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;QACnB,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACnE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9E;QACD,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,WAAW,EAAE,UAAU,IAAI;QAE1B,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,OAAO,IAAI,IAAI,CAAC,EAAE;YACjB,KAAK,EAAE,CAAC;YACR,IAAI,MAAM,CAAC,CAAC;SACZ;QAED,OAAO,KAAK,CAAC;IACd,CAAC;IAED,kBAAkB,EAAE,UAAU,UAAU;QACvC,OAAO,MAAM,CAAC,sBAAsB,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,OAAO,EAAE,UAAU,WAAW,EAAE,CAAC,EAAE,CAAC;QAEnC,QAAQ,WAAW,EAAE;YAEpB,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACvD,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACvD,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACvF,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACrE,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC3E,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAE3E;gBACC,MAAM,IAAI,KAAK,CAAC,kBAAkB,GAAG,WAAW,CAAC,CAAC;SACnD;IACF,CAAC;IAED,yBAAyB,EAAE,UAAU,kBAAkB;QAEtD,IAAI,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,CAAC,EAAE,EAAE;YAC5C,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACzD;QAED,OAAO,CAAC,CAAC;IACV,CAAC;IAED,eAAe,EAAE,UAAU,IAAI,EAAE,IAAI;QAEpC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,EAAE;YAE3B,QAAQ;YAER,QAAQ,IAAI,EAAE;gBACb,KAAK,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;gBACnC,KAAK,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC;gBACrC,KAAK,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC;gBACrC,KAAK,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;gBACjC;oBACC,MAAM,IAAI,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;aACjC;SAED;aAAM,IAAI,IAAI,GAAG,EAAE,EAAE;YAErB,UAAU;YAEV,QAAQ,IAAI,EAAE;gBACb,KAAK,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;gBACnC,KAAK,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,CAAC;gBACtC,KAAK,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,CAAC;gBACtC,KAAK,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;gBAClC;oBACC,MAAM,IAAI,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;aACjC;SAED;aAAM,IAAI,IAAI,GAAG,EAAE,EAAE;YAErB,UAAU;YAEV,QAAQ,IAAI,EAAE;gBACb,KAAK,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;gBACnC,KAAK,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,CAAC;gBACtC,KAAK,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,CAAC;gBACtC,KAAK,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;gBAClC;oBACC,MAAM,IAAI,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;aACjC;SAED;aAAM;YACN,MAAM,IAAI,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;SAChC;IACF,CAAC;IAED,YAAY,EAAE,UAAU,MAAM;QAE7B,IAAI,WAAW,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;QAE1C,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,SAAS;QAET,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,EAAE,EAAE;YAE3C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,EAAE,EAAE;gBAE3C,IAAI,SAAS,GAAG,CAAC,CAAC;gBAClB,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;oBAE7B,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,WAAW,IAAI,GAAG,GAAG,CAAC,EAAE;wBAC1C,SAAS;qBACT;oBAED,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;wBAE7B,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,WAAW,IAAI,GAAG,GAAG,CAAC,EAAE;4BAC1C,SAAS;yBACT;wBAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;4BACrB,SAAS;yBACT;wBAED,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE;4BAC5C,SAAS,EAAE,CAAC;yBACZ;qBACD;iBACD;gBAED,IAAI,SAAS,GAAG,CAAC,EAAE;oBAClB,SAAS,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;iBACjC;aACD;SACD;QAED,SAAS;QAET,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;YAC/C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;gBAC/C,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;oBAAE,KAAK,EAAE,CAAC;gBACrC,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;oBAAE,KAAK,EAAE,CAAC;gBACzC,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;oBAAE,KAAK,EAAE,CAAC;gBACzC,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;oBAAE,KAAK,EAAE,CAAC;gBAC7C,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;oBAC7B,SAAS,IAAI,CAAC,CAAC;iBACf;aACD;SACD;QAED,SAAS;QAET,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,EAAE,EAAE;YAC3C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;gBAC/C,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;uBACvB,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;uBAC5B,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;uBAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;uBAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;uBAC3B,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;uBAC5B,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE;oBAChC,SAAS,IAAI,EAAE,CAAC;iBAChB;aACD;SACD;QAED,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,EAAE,EAAE;YAC3C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;gBAC/C,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;uBACvB,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;uBAC5B,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;uBAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;uBAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;uBAC3B,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;uBAC5B,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE;oBAChC,SAAS,IAAI,EAAE,CAAC;iBAChB;aACD;SACD;QAED,SAAS;QAET,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,EAAE,EAAE;YAC3C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,EAAE,EAAE;gBAC3C,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;oBAC5B,SAAS,EAAE,CAAC;iBACZ;aACD;SACD;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,SAAS,GAAG,WAAW,GAAG,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAC3E,SAAS,IAAI,KAAK,GAAG,EAAE,CAAC;QAExB,OAAO,SAAS,CAAC;IAClB,CAAC;CAED,CAAC;AAGF,uEAAuE;AACvE,SAAS;AACT,uEAAuE;AAEvE,IAAI,MAAM,GAAG;IAEZ,IAAI,EAAE,UAAU,CAAC;QAEhB,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,OAAO,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SACnC;QAED,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,IAAI,EAAE,UAAU,CAAC;QAEhB,OAAO,CAAC,GAAG,CAAC,EAAE;YACb,CAAC,IAAI,GAAG,CAAC;SACT;QAED,OAAO,CAAC,IAAI,GAAG,EAAE;YAChB,CAAC,IAAI,GAAG,CAAC;SACT;QAED,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,SAAS,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC;IAEzB,SAAS,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC;CAEzB,CAAC;AAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC3B,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;CAC7B;AACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC7B,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;UAC1C,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;UACvB,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;UACvB,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;CAC3B;AACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC7B,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CAC1C;AAED,uEAAuE;AACvE,eAAe;AACf,uEAAuE;AACvE;IAEC,sBAAmB,GAAG,EAAE,KAAK;QAC5B,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;SAC1C;QAED,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,OAAO,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAC/C,MAAM,EAAE,CAAC;SACT;QAED,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC;QAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;SAC9B;IACF,CAAC;IAED,0BAAG,GAAH,UAAI,KAAK;QACR,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IACD,gCAAS,GAAT;QACC,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;IACxB,CAAC;IACD,+BAAQ,GAAR,UAAS,CAAC;QACT,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;QAE1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE;YAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE;gBACvC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5E;SACD;QAED,OAAO,IAAI,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,0BAAG,GAAH,UAAI,CAAC;QAEJ,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE;YACzC,OAAO,IAAI,CAAC;SACZ;QAED,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE7D,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE;YAC1C,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACrB;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE;YACvC,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;SACrD;QAED,iBAAiB;QACjB,OAAO,IAAI,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IACF,mBAAC;AAAD,CA1DA,AA0DC,IAAA;AA1DY,oCAAY;AA2DzB,YAAY;AACZ,uEAAuE;AACvE;IAGC,mBAAmB,UAAU,EAAE,SAAS;QACvC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,CAAC;IA0PM,qBAAW,GAAlB,UAAmB,UAAU,EAAE,iBAAiB;QAC/C,IAAI,OAAO,GAAG,SAAS,CAAC,eAAe,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;QAEvE,IAAI,OAAO,IAAI,SAAS,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,UAAU,GAAG,qBAAqB,GAAG,iBAAiB,CAAC,CAAC;SACvG;QAED,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhC,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;QAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAEhC,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/B,IAAI,UAAU,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACpC,IAAI,SAAS,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;aAChD;SACD;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IACM,yBAAe,GAAtB,UAAuB,UAAU,EAAE,iBAAiB;QACnD,QAAQ,iBAAiB,EAAE;YAC1B,KAAK,mBAAmB,CAAC,CAAC;gBACzB,OAAO,SAAS,CAAC,cAAc,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3D,KAAK,mBAAmB,CAAC,CAAC;gBACzB,OAAO,SAAS,CAAC,cAAc,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3D,KAAK,mBAAmB,CAAC,CAAC;gBACzB,OAAO,SAAS,CAAC,cAAc,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3D,KAAK,mBAAmB,CAAC,CAAC;gBACzB,OAAO,SAAS,CAAC,cAAc,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3D;gBACC,OAAO,SAAS,CAAC;SAClB;IACF,CAAC;IA7RM,wBAAc,GAAG;QAEvB,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QAEJ,IAAI;QACJ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAEV,IAAI;QACJ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEX,IAAI;QACJ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEX,MAAM;QACN,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAEV,IAAI;QACJ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEtB,IAAI;QACJ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEX,MAAM;QACN,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEtB,IAAI;QACJ,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEtB,IAAI;QACJ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEtB,OAAO;QACP,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEtB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEtB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEtB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEZ,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA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","file":"","sourceRoot":"/","sourcesContent":["//---------------------------------------------------------------------\r\n// QRCode for JavaScript\r\n//\r\n// Copyright (c) 2009 Kazuhiko Arase\r\n//\r\n// URL: http://www.d-project.com/\r\n//\r\n// Licensed under the MIT license:\r\n//   http://www.opensource.org/licenses/mit-license.php\r\n//\r\n// The word \"QR Code\" is registered trademark of \r\n// DENSO WAVE INCORPORATED\r\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\r\n//\r\n//---------------------------------------------------------------------\r\n\r\n//---------------------------------------------------------------------\r\n// QR8bitByte\r\n//---------------------------------------------------------------------\r\nexport class QR8bitByte {\r\n\tpublic mode = QRMode.MODE_8BIT_BYTE;\r\n\tpublic data;\r\n\tpublic constructor(data) {\r\n\t\tthis.data = data;\r\n\t}\r\n\tpublic getLength() {\r\n\t\treturn this.data.length;\r\n\t}\r\n\tpublic write(buffer) {\r\n\t\tfor (let i = 0; i < this.data.length; i++) {\r\n\t\t\t// not JIS ...\r\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n//---------------------------------------------------------------------\r\n// QRCode\r\n//---------------------------------------------------------------------\r\nexport class QRCode {\r\n\tpublic typeNumber;\r\n\tpublic errorCorrectLevel;\r\n\tpublic modules;\r\n\tpublic moduleCount;\r\n\tpublic dataCache;\r\n\tpublic dataList;\r\n\tpublic constructor(typeNumber, errorCorrectLevel) {\r\n\t\tthis.typeNumber = typeNumber;\r\n\t\tthis.errorCorrectLevel = errorCorrectLevel;\r\n\t\tthis.modules = null;\r\n\t\tthis.moduleCount = 0;\r\n\t\tthis.dataCache = null;\r\n\t\tthis.dataList = new Array();\r\n\t}\r\n\taddData(data) {\r\n\t\tlet newData = new QR8bitByte(data);\r\n\t\tthis.dataList.push(newData);\r\n\t\tthis.dataCache = null;\r\n\t}\r\n\tisDark(row, col) {\r\n\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\r\n\t\t\tthrow new Error(row + \",\" + col);\r\n\t\t}\r\n\t\treturn this.modules[row][col];\r\n\t}\r\n\tgetModuleCount() {\r\n\t\treturn this.moduleCount;\r\n\t}\r\n\tmake() {\r\n\t\tif (this.typeNumber < 1) {\r\n\t\t\tlet typeNumber = 1;\r\n\t\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\r\n\t\t\t\tlet rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\r\n\r\n\t\t\t\tlet buffer = new QRBitBuffer();\r\n\t\t\t\tlet totalDataCount = 0;\r\n\t\t\t\tfor (let i = 0; i < rsBlocks.length; i++) {\r\n\t\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 0; i < this.dataList.length; i++) {\r\n\t\t\t\t\tlet data = this.dataList[i];\r\n\t\t\t\t\tbuffer.put(data.mode, 4);\r\n\t\t\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\r\n\t\t\t\t\tdata.write(buffer);\r\n\t\t\t\t}\r\n\t\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.typeNumber = typeNumber;\r\n\t\t}\r\n\t\tthis.makeImpl(false, this.getBestMaskPattern());\r\n\t}\r\n\r\n\tmakeImpl(test, maskPattern) {\r\n\t\tthis.moduleCount = this.typeNumber * 4 + 17;\r\n\t\tthis.modules = new Array(this.moduleCount);\r\n\r\n\t\tfor (let row = 0; row < this.moduleCount; row++) {\r\n\r\n\t\t\tthis.modules[row] = new Array(this.moduleCount);\r\n\r\n\t\t\tfor (let col = 0; col < this.moduleCount; col++) {\r\n\t\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setupPositionProbePattern(0, 0);\r\n\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\r\n\t\tthis.setupPositionAdjustPattern();\r\n\t\tthis.setupTimingPattern();\r\n\t\tthis.setupTypeInfo(test, maskPattern);\r\n\r\n\t\tif (this.typeNumber >= 7) {\r\n\t\t\tthis.setupTypeNumber(test);\r\n\t\t}\r\n\r\n\t\tif (this.dataCache == null) {\r\n\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\r\n\t\t}\r\n\r\n\t\tthis.mapData(this.dataCache, maskPattern);\r\n\t}\r\n\tsetupPositionProbePattern(row, col) {\r\n\t\tfor (let r = -1; r <= 7; r++) {\r\n\r\n\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n\r\n\t\t\tfor (let c = -1; c <= 7; c++) {\r\n\r\n\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n\r\n\t\t\t\tif ((0 <= r && r <= 6 && (c == 0 || c == 6))\r\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6))\r\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\r\n\t\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetBestMaskPattern() {\r\n\t\tlet minLostPoint = 0;\r\n\t\tlet pattern = 0;\r\n\r\n\t\tfor (let i = 0; i < 8; i++) {\r\n\r\n\t\t\tthis.makeImpl(true, i);\r\n\r\n\t\t\tlet lostPoint = QRUtil.getLostPoint(this);\r\n\r\n\t\t\tif (i == 0 || minLostPoint > lostPoint) {\r\n\t\t\t\tminLostPoint = lostPoint;\r\n\t\t\t\tpattern = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pattern;\r\n\t}\r\n\tcreateMovieClip(target_mc, instance_name, depth) {\r\n\r\n\t\tlet qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n\t\tlet cs = 1;\r\n\r\n\t\tthis.make();\r\n\r\n\t\tfor (let row = 0; row < this.modules.length; row++) {\r\n\r\n\t\t\tlet y = row * cs;\r\n\r\n\t\t\tfor (let col = 0; col < this.modules[row].length; col++) {\r\n\r\n\t\t\t\tlet x = col * cs;\r\n\t\t\t\tlet dark = this.modules[row][col];\r\n\r\n\t\t\t\tif (dark) {\r\n\t\t\t\t\tqr_mc.beginFill(0, 100);\r\n\t\t\t\t\tqr_mc.moveTo(x, y);\r\n\t\t\t\t\tqr_mc.lineTo(x + cs, y);\r\n\t\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\r\n\t\t\t\t\tqr_mc.lineTo(x, y + cs);\r\n\t\t\t\t\tqr_mc.endFill();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn qr_mc;\r\n\t}\r\n\r\n\tsetupTimingPattern() {\r\n\t\tfor (let r = 8; r < this.moduleCount - 8; r++) {\r\n\t\t\tif (this.modules[r][6] != null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.modules[r][6] = (r % 2 == 0);\r\n\t\t}\r\n\r\n\t\tfor (let c = 8; c < this.moduleCount - 8; c++) {\r\n\t\t\tif (this.modules[6][c] != null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.modules[6][c] = (c % 2 == 0);\r\n\t\t}\r\n\t}\r\n\tsetupPositionAdjustPattern() {\r\n\t\tlet pos = QRUtil.getPatternPosition(this.typeNumber);\r\n\r\n\t\tfor (let i = 0; i < pos.length; i++) {\r\n\r\n\t\t\tfor (let j = 0; j < pos.length; j++) {\r\n\r\n\t\t\t\tlet row = pos[i];\r\n\t\t\t\tlet col = pos[j];\r\n\r\n\t\t\t\tif (this.modules[row][col] != null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let r = -2; r <= 2; r++) {\r\n\r\n\t\t\t\t\tfor (let c = -2; c <= 2; c++) {\r\n\r\n\t\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\r\n\t\t\t\t\t\t\t|| (r == 0 && c == 0)) {\r\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetupTypeNumber(test) {\r\n\t\tlet bits = QRUtil.getBCHTypeNumber(this.typeNumber);\r\n\r\n\t\tfor (let i = 0; i < 18; i++) {\r\n\t\t\tlet mod = (!test && ((bits >> i) & 1) == 1);\r\n\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < 18; i++) {\r\n\t\t\tlet mod = (!test && ((bits >> i) & 1) == 1);\r\n\t\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n\t\t}\r\n\t}\r\n\r\n\tsetupTypeInfo(test, maskPattern) {\r\n\t\tlet data = (this.errorCorrectLevel << 3) | maskPattern;\r\n\t\tlet bits = QRUtil.getBCHTypeInfo(data);\r\n\r\n\t\t// vertical\t\t\r\n\t\tfor (let i = 0; i < 15; i++) {\r\n\r\n\t\t\tlet mod = (!test && ((bits >> i) & 1) == 1);\r\n\r\n\t\t\tif (i < 6) {\r\n\t\t\t\tthis.modules[i][8] = mod;\r\n\t\t\t} else if (i < 8) {\r\n\t\t\t\tthis.modules[i + 1][8] = mod;\r\n\t\t\t} else {\r\n\t\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// horizontal\r\n\t\tfor (let i = 0; i < 15; i++) {\r\n\r\n\t\t\tlet mod = (!test && ((bits >> i) & 1) == 1);\r\n\r\n\t\t\tif (i < 8) {\r\n\t\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\r\n\t\t\t} else if (i < 9) {\r\n\t\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\r\n\t\t\t} else {\r\n\t\t\t\tthis.modules[8][15 - i - 1] = mod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// fixed module\r\n\t\tthis.modules[this.moduleCount - 8][8] = (!test);\r\n\t}\r\n\r\n\tmapData(data, maskPattern) {\r\n\t\tlet inc = -1;\r\n\t\tlet row = this.moduleCount - 1;\r\n\t\tlet bitIndex = 7;\r\n\t\tlet byteIndex = 0;\r\n\r\n\t\tfor (let col = this.moduleCount - 1; col > 0; col -= 2) {\r\n\r\n\t\t\tif (col == 6) col--;\r\n\r\n\t\t\twhile (true) {\r\n\r\n\t\t\t\tfor (let c = 0; c < 2; c++) {\r\n\r\n\t\t\t\t\tif (this.modules[row][col - c] == null) {\r\n\r\n\t\t\t\t\t\tlet dark = false;\r\n\r\n\t\t\t\t\t\tif (byteIndex < data.length) {\r\n\t\t\t\t\t\t\tdark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet mask = QRUtil.getMask(maskPattern, row, col - c);\r\n\r\n\t\t\t\t\t\tif (mask) {\r\n\t\t\t\t\t\t\tdark = !dark;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.modules[row][col - c] = dark;\r\n\t\t\t\t\t\tbitIndex--;\r\n\r\n\t\t\t\t\t\tif (bitIndex == -1) {\r\n\t\t\t\t\t\t\tbyteIndex++;\r\n\t\t\t\t\t\t\tbitIndex = 7;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow += inc;\r\n\r\n\t\t\t\tif (row < 0 || this.moduleCount <= row) {\r\n\t\t\t\t\trow -= inc;\r\n\t\t\t\t\tinc = -inc;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static PAD0 = 0xEC;\r\n\tpublic static PAD1 = 0x11;\r\n\r\n\tstatic createData(typeNumber, errorCorrectLevel, dataList) {\r\n\t\tlet rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n\r\n\t\tlet buffer = new QRBitBuffer();\r\n\r\n\t\tfor (let i = 0; i < dataList.length; i++) {\r\n\t\t\tlet data = dataList[i];\r\n\t\t\tbuffer.put(data.mode, 4);\r\n\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\r\n\t\t\tdata.write(buffer);\r\n\t\t}\r\n\r\n\t\t// calc num max data.\r\n\t\tlet totalDataCount = 0;\r\n\t\tfor (let i = 0; i < rsBlocks.length; i++) {\r\n\t\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t\t}\r\n\r\n\t\tif (buffer.getLengthInBits() > totalDataCount * 8) {\r\n\t\t\tthrow new Error(\"code length overflow. (\"\r\n\t\t\t\t+ buffer.getLengthInBits()\r\n\t\t\t\t+ \">\"\r\n\t\t\t\t+ totalDataCount * 8\r\n\t\t\t\t+ \")\");\r\n\t\t}\r\n\r\n\t\t// end code\r\n\t\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n\t\t\tbuffer.put(0, 4);\r\n\t\t}\r\n\r\n\t\t// padding\r\n\t\twhile (buffer.getLengthInBits() % 8 != 0) {\r\n\t\t\tbuffer.putBit(false);\r\n\t\t}\r\n\r\n\t\t// padding\r\n\t\twhile (true) {\r\n\r\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tbuffer.put(QRCode.PAD0, 8);\r\n\r\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tbuffer.put(QRCode.PAD1, 8);\r\n\t\t}\r\n\r\n\t\treturn QRCode.createBytes(buffer, rsBlocks);\r\n\t}\r\n\r\n\tstatic createBytes(buffer, rsBlocks) {\r\n\r\n\t\tlet offset = 0;\r\n\r\n\t\tlet maxDcCount = 0;\r\n\t\tlet maxEcCount = 0;\r\n\r\n\t\tlet dcdata = new Array(rsBlocks.length);\r\n\t\tlet ecdata = new Array(rsBlocks.length);\r\n\r\n\t\tfor (let r = 0; r < rsBlocks.length; r++) {\r\n\r\n\t\t\tlet dcCount = rsBlocks[r].dataCount;\r\n\t\t\tlet ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n\t\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\r\n\t\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\r\n\r\n\t\t\tdcdata[r] = new Array(dcCount);\r\n\r\n\t\t\tfor (let i = 0; i < dcdata[r].length; i++) {\r\n\t\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n\t\t\t}\r\n\t\t\toffset += dcCount;\r\n\r\n\t\t\tlet rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\r\n\t\t\tlet rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\r\n\r\n\t\t\tlet modPoly = rawPoly.mod(rsPoly);\r\n\t\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\r\n\t\t\tfor (let i = 0; i < ecdata[r].length; i++) {\r\n\t\t\t\tlet modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n\t\t\t\tecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet totalCodeCount = 0;\r\n\t\tfor (let i = 0; i < rsBlocks.length; i++) {\r\n\t\t\ttotalCodeCount += rsBlocks[i].totalCount;\r\n\t\t}\r\n\r\n\t\tlet data = new Array(totalCodeCount);\r\n\t\tlet index = 0;\r\n\r\n\t\tfor (let i = 0; i < maxDcCount; i++) {\r\n\t\t\tfor (let r = 0; r < rsBlocks.length; r++) {\r\n\t\t\t\tif (i < dcdata[r].length) {\r\n\t\t\t\t\tdata[index++] = dcdata[r][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < maxEcCount; i++) {\r\n\t\t\tfor (let r = 0; r < rsBlocks.length; r++) {\r\n\t\t\t\tif (i < ecdata[r].length) {\r\n\t\t\t\t\tdata[index++] = ecdata[r][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n//---------------------------------------------------------------------\r\n// QRMode\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMode = {\r\n\tMODE_NUMBER: 1 << 0,\r\n\tMODE_ALPHA_NUM: 1 << 1,\r\n\tMODE_8BIT_BYTE: 1 << 2,\r\n\tMODE_KANJI: 1 << 3\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRErrorCorrectLevel\r\n//---------------------------------------------------------------------\r\n\r\nlet QRErrorCorrectLevel = {\r\n\tL: 1,\r\n\tM: 0,\r\n\tQ: 3,\r\n\tH: 2\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRMaskPattern\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMaskPattern = {\r\n\tPATTERN000: 0,\r\n\tPATTERN001: 1,\r\n\tPATTERN010: 2,\r\n\tPATTERN011: 3,\r\n\tPATTERN100: 4,\r\n\tPATTERN101: 5,\r\n\tPATTERN110: 6,\r\n\tPATTERN111: 7\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRUtil\r\n//---------------------------------------------------------------------\r\n\r\nlet QRUtil = {\r\n\tPATTERN_POSITION_TABLE: [\r\n\t\t[],\r\n\t\t[6, 18],\r\n\t\t[6, 22],\r\n\t\t[6, 26],\r\n\t\t[6, 30],\r\n\t\t[6, 34],\r\n\t\t[6, 22, 38],\r\n\t\t[6, 24, 42],\r\n\t\t[6, 26, 46],\r\n\t\t[6, 28, 50],\r\n\t\t[6, 30, 54],\r\n\t\t[6, 32, 58],\r\n\t\t[6, 34, 62],\r\n\t\t[6, 26, 46, 66],\r\n\t\t[6, 26, 48, 70],\r\n\t\t[6, 26, 50, 74],\r\n\t\t[6, 30, 54, 78],\r\n\t\t[6, 30, 56, 82],\r\n\t\t[6, 30, 58, 86],\r\n\t\t[6, 34, 62, 90],\r\n\t\t[6, 28, 50, 72, 94],\r\n\t\t[6, 26, 50, 74, 98],\r\n\t\t[6, 30, 54, 78, 102],\r\n\t\t[6, 28, 54, 80, 106],\r\n\t\t[6, 32, 58, 84, 110],\r\n\t\t[6, 30, 58, 86, 114],\r\n\t\t[6, 34, 62, 90, 118],\r\n\t\t[6, 26, 50, 74, 98, 122],\r\n\t\t[6, 30, 54, 78, 102, 126],\r\n\t\t[6, 26, 52, 78, 104, 130],\r\n\t\t[6, 30, 56, 82, 108, 134],\r\n\t\t[6, 34, 60, 86, 112, 138],\r\n\t\t[6, 30, 58, 86, 114, 142],\r\n\t\t[6, 34, 62, 90, 118, 146],\r\n\t\t[6, 30, 54, 78, 102, 126, 150],\r\n\t\t[6, 24, 50, 76, 102, 128, 154],\r\n\t\t[6, 28, 54, 80, 106, 132, 158],\r\n\t\t[6, 32, 58, 84, 110, 136, 162],\r\n\t\t[6, 26, 54, 82, 110, 138, 166],\r\n\t\t[6, 30, 58, 86, 114, 142, 170]\r\n\t],\r\n\r\n\tG15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n\tG18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n\tG15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\r\n\r\n\tgetBCHTypeInfo: function (data) {\r\n\t\tlet d = data << 10;\r\n\t\twhile (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n\t\t\td ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\r\n\t\t}\r\n\t\treturn ((data << 10) | d) ^ QRUtil.G15_MASK;\r\n\t},\r\n\r\n\tgetBCHTypeNumber: function (data) {\r\n\t\tlet d = data << 12;\r\n\t\twhile (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n\t\t\td ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\r\n\t\t}\r\n\t\treturn (data << 12) | d;\r\n\t},\r\n\r\n\tgetBCHDigit: function (data) {\r\n\r\n\t\tlet digit = 0;\r\n\r\n\t\twhile (data != 0) {\r\n\t\t\tdigit++;\r\n\t\t\tdata >>>= 1;\r\n\t\t}\r\n\r\n\t\treturn digit;\r\n\t},\r\n\r\n\tgetPatternPosition: function (typeNumber) {\r\n\t\treturn QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n\t},\r\n\r\n\tgetMask: function (maskPattern, i, j) {\r\n\r\n\t\tswitch (maskPattern) {\r\n\r\n\t\t\tcase QRMaskPattern.PATTERN000: return (i + j) % 2 == 0;\r\n\t\t\tcase QRMaskPattern.PATTERN001: return i % 2 == 0;\r\n\t\t\tcase QRMaskPattern.PATTERN010: return j % 3 == 0;\r\n\t\t\tcase QRMaskPattern.PATTERN011: return (i + j) % 3 == 0;\r\n\t\t\tcase QRMaskPattern.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\r\n\t\t\tcase QRMaskPattern.PATTERN101: return (i * j) % 2 + (i * j) % 3 == 0;\r\n\t\t\tcase QRMaskPattern.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n\t\t\tcase QRMaskPattern.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"bad maskPattern:\" + maskPattern);\r\n\t\t}\r\n\t},\r\n\r\n\tgetErrorCorrectPolynomial: function (errorCorrectLength) {\r\n\r\n\t\tlet a = new QRPolynomial([1], 0);\r\n\r\n\t\tfor (let i = 0; i < errorCorrectLength; i++) {\r\n\t\t\ta = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\t},\r\n\r\n\tgetLengthInBits: function (mode, type) {\r\n\r\n\t\tif (1 <= type && type < 10) {\r\n\r\n\t\t\t// 1 - 9\r\n\r\n\t\t\tswitch (mode) {\r\n\t\t\t\tcase QRMode.MODE_NUMBER: return 10;\r\n\t\t\t\tcase QRMode.MODE_ALPHA_NUM: return 9;\r\n\t\t\t\tcase QRMode.MODE_8BIT_BYTE: return 8;\r\n\t\t\t\tcase QRMode.MODE_KANJI: return 8;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"mode:\" + mode);\r\n\t\t\t}\r\n\r\n\t\t} else if (type < 27) {\r\n\r\n\t\t\t// 10 - 26\r\n\r\n\t\t\tswitch (mode) {\r\n\t\t\t\tcase QRMode.MODE_NUMBER: return 12;\r\n\t\t\t\tcase QRMode.MODE_ALPHA_NUM: return 11;\r\n\t\t\t\tcase QRMode.MODE_8BIT_BYTE: return 16;\r\n\t\t\t\tcase QRMode.MODE_KANJI: return 10;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"mode:\" + mode);\r\n\t\t\t}\r\n\r\n\t\t} else if (type < 41) {\r\n\r\n\t\t\t// 27 - 40\r\n\r\n\t\t\tswitch (mode) {\r\n\t\t\t\tcase QRMode.MODE_NUMBER: return 14;\r\n\t\t\t\tcase QRMode.MODE_ALPHA_NUM: return 13;\r\n\t\t\t\tcase QRMode.MODE_8BIT_BYTE: return 16;\r\n\t\t\t\tcase QRMode.MODE_KANJI: return 12;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"mode:\" + mode);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"type:\" + type);\r\n\t\t}\r\n\t},\r\n\r\n\tgetLostPoint: function (qrCode) {\r\n\r\n\t\tlet moduleCount = qrCode.getModuleCount();\r\n\r\n\t\tlet lostPoint = 0;\r\n\r\n\t\t// LEVEL1\r\n\r\n\t\tfor (let row = 0; row < moduleCount; row++) {\r\n\r\n\t\t\tfor (let col = 0; col < moduleCount; col++) {\r\n\r\n\t\t\t\tlet sameCount = 0;\r\n\t\t\t\tlet dark = qrCode.isDark(row, col);\r\n\r\n\t\t\t\tfor (let r = -1; r <= 1; r++) {\r\n\r\n\t\t\t\t\tif (row + r < 0 || moduleCount <= row + r) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let c = -1; c <= 1; c++) {\r\n\r\n\t\t\t\t\t\tif (col + c < 0 || moduleCount <= col + c) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (r == 0 && c == 0) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dark == qrCode.isDark(row + r, col + c)) {\r\n\t\t\t\t\t\t\tsameCount++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (sameCount > 5) {\r\n\t\t\t\t\tlostPoint += (3 + sameCount - 5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// LEVEL2\r\n\r\n\t\tfor (let row = 0; row < moduleCount - 1; row++) {\r\n\t\t\tfor (let col = 0; col < moduleCount - 1; col++) {\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\tif (qrCode.isDark(row, col)) count++;\r\n\t\t\t\tif (qrCode.isDark(row + 1, col)) count++;\r\n\t\t\t\tif (qrCode.isDark(row, col + 1)) count++;\r\n\t\t\t\tif (qrCode.isDark(row + 1, col + 1)) count++;\r\n\t\t\t\tif (count == 0 || count == 4) {\r\n\t\t\t\t\tlostPoint += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// LEVEL3\r\n\r\n\t\tfor (let row = 0; row < moduleCount; row++) {\r\n\t\t\tfor (let col = 0; col < moduleCount - 6; col++) {\r\n\t\t\t\tif (qrCode.isDark(row, col)\r\n\t\t\t\t\t&& !qrCode.isDark(row, col + 1)\r\n\t\t\t\t\t&& qrCode.isDark(row, col + 2)\r\n\t\t\t\t\t&& qrCode.isDark(row, col + 3)\r\n\t\t\t\t\t&& qrCode.isDark(row, col + 4)\r\n\t\t\t\t\t&& !qrCode.isDark(row, col + 5)\r\n\t\t\t\t\t&& qrCode.isDark(row, col + 6)) {\r\n\t\t\t\t\tlostPoint += 40;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let col = 0; col < moduleCount; col++) {\r\n\t\t\tfor (let row = 0; row < moduleCount - 6; row++) {\r\n\t\t\t\tif (qrCode.isDark(row, col)\r\n\t\t\t\t\t&& !qrCode.isDark(row + 1, col)\r\n\t\t\t\t\t&& qrCode.isDark(row + 2, col)\r\n\t\t\t\t\t&& qrCode.isDark(row + 3, col)\r\n\t\t\t\t\t&& qrCode.isDark(row + 4, col)\r\n\t\t\t\t\t&& !qrCode.isDark(row + 5, col)\r\n\t\t\t\t\t&& qrCode.isDark(row + 6, col)) {\r\n\t\t\t\t\tlostPoint += 40;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// LEVEL4\r\n\r\n\t\tlet darkCount = 0;\r\n\r\n\t\tfor (let col = 0; col < moduleCount; col++) {\r\n\t\t\tfor (let row = 0; row < moduleCount; row++) {\r\n\t\t\t\tif (qrCode.isDark(row, col)) {\r\n\t\t\t\t\tdarkCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n\t\tlostPoint += ratio * 10;\r\n\r\n\t\treturn lostPoint;\r\n\t}\r\n\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\n// QRMath\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMath = {\r\n\r\n\tglog: function (n) {\r\n\r\n\t\tif (n < 1) {\r\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\r\n\t\t}\r\n\r\n\t\treturn QRMath.LOG_TABLE[n];\r\n\t},\r\n\r\n\tgexp: function (n) {\r\n\r\n\t\twhile (n < 0) {\r\n\t\t\tn += 255;\r\n\t\t}\r\n\r\n\t\twhile (n >= 256) {\r\n\t\t\tn -= 255;\r\n\t\t}\r\n\r\n\t\treturn QRMath.EXP_TABLE[n];\r\n\t},\r\n\r\n\tEXP_TABLE: new Array(256),\r\n\r\n\tLOG_TABLE: new Array(256)\r\n\r\n};\r\n\r\nfor (let i = 0; i < 8; i++) {\r\n\tQRMath.EXP_TABLE[i] = 1 << i;\r\n}\r\nfor (let i = 8; i < 256; i++) {\r\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\r\n\t\t^ QRMath.EXP_TABLE[i - 5]\r\n\t\t^ QRMath.EXP_TABLE[i - 6]\r\n\t\t^ QRMath.EXP_TABLE[i - 8];\r\n}\r\nfor (let i = 0; i < 255; i++) {\r\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRPolynomial\r\n//---------------------------------------------------------------------\r\nexport class QRPolynomial {\r\n\tpublic num;\r\n\tpublic constructor(num, shift) {\r\n\t\tif (num.length == undefined) {\r\n\t\t\tthrow new Error(num.length + \"/\" + shift);\r\n\t\t}\r\n\r\n\t\tlet offset = 0;\r\n\r\n\t\twhile (offset < num.length && num[offset] == 0) {\r\n\t\t\toffset++;\r\n\t\t}\r\n\r\n\t\tthis.num = new Array(num.length - offset + shift);\r\n\t\tfor (let i = 0; i < num.length - offset; i++) {\r\n\t\t\tthis.num[i] = num[i + offset];\r\n\t\t}\r\n\t}\r\n\r\n\tget(index) {\r\n\t\treturn this.num[index];\r\n\t}\r\n\tgetLength() {\r\n\t\treturn this.num.length;\r\n\t}\r\n\tmultiply(e) {\r\n\t\tlet num = new Array(this.getLength() + e.getLength() - 1);\r\n\r\n\t\tfor (let i = 0; i < this.getLength(); i++) {\r\n\t\t\tfor (let j = 0; j < e.getLength(); j++) {\r\n\t\t\t\tnum[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new QRPolynomial(num, 0);\r\n\t}\r\n\r\n\tmod(e) {\r\n\r\n\t\tif (this.getLength() - e.getLength() < 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlet ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\r\n\r\n\t\tlet num = new Array(this.getLength());\r\n\r\n\t\tfor (let i = 0; i < this.getLength(); i++) {\r\n\t\t\tnum[i] = this.get(i);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < e.getLength(); i++) {\r\n\t\t\tnum[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\r\n\t\t}\r\n\r\n\t\t// recursive call\r\n\t\treturn new QRPolynomial(num, 0).mod(e);\r\n\t}\r\n}\r\n// QRRSBlock\r\n//---------------------------------------------------------------------\r\nexport class QRRSBlock {\r\n\tpublic totalCount;\r\n\tpublic dataCount;\r\n\tpublic constructor(totalCount, dataCount) {\r\n\t\tthis.totalCount = totalCount;\r\n\t\tthis.dataCount = dataCount;\r\n\t}\r\n\r\n\tstatic RS_BLOCK_TABLE = [\r\n\r\n\t\t// L\r\n\t\t// M\r\n\t\t// Q\r\n\t\t// H\r\n\r\n\t\t// 1\r\n\t\t[1, 26, 19],\r\n\t\t[1, 26, 16],\r\n\t\t[1, 26, 13],\r\n\t\t[1, 26, 9],\r\n\r\n\t\t// 2\r\n\t\t[1, 44, 34],\r\n\t\t[1, 44, 28],\r\n\t\t[1, 44, 22],\r\n\t\t[1, 44, 16],\r\n\r\n\t\t// 3\r\n\t\t[1, 70, 55],\r\n\t\t[1, 70, 44],\r\n\t\t[2, 35, 17],\r\n\t\t[2, 35, 13],\r\n\r\n\t\t// 4\t\t\r\n\t\t[1, 100, 80],\r\n\t\t[2, 50, 32],\r\n\t\t[2, 50, 24],\r\n\t\t[4, 25, 9],\r\n\r\n\t\t// 5\r\n\t\t[1, 134, 108],\r\n\t\t[2, 67, 43],\r\n\t\t[2, 33, 15, 2, 34, 16],\r\n\t\t[2, 33, 11, 2, 34, 12],\r\n\r\n\t\t// 6\r\n\t\t[2, 86, 68],\r\n\t\t[4, 43, 27],\r\n\t\t[4, 43, 19],\r\n\t\t[4, 43, 15],\r\n\r\n\t\t// 7\t\t\r\n\t\t[2, 98, 78],\r\n\t\t[4, 49, 31],\r\n\t\t[2, 32, 14, 4, 33, 15],\r\n\t\t[4, 39, 13, 1, 40, 14],\r\n\r\n\t\t// 8\r\n\t\t[2, 121, 97],\r\n\t\t[2, 60, 38, 2, 61, 39],\r\n\t\t[4, 40, 18, 2, 41, 19],\r\n\t\t[4, 40, 14, 2, 41, 15],\r\n\r\n\t\t// 9\r\n\t\t[2, 146, 116],\r\n\t\t[3, 58, 36, 2, 59, 37],\r\n\t\t[4, 36, 16, 4, 37, 17],\r\n\t\t[4, 36, 12, 4, 37, 13],\r\n\r\n\t\t// 10\t\t\r\n\t\t[2, 86, 68, 2, 87, 69],\r\n\t\t[4, 69, 43, 1, 70, 44],\r\n\t\t[6, 43, 19, 2, 44, 20],\r\n\t\t[6, 43, 15, 2, 44, 16],\r\n\r\n\t\t// 11\r\n\t\t[4, 101, 81],\r\n\t\t[1, 80, 50, 4, 81, 51],\r\n\t\t[4, 50, 22, 4, 51, 23],\r\n\t\t[3, 36, 12, 8, 37, 13],\r\n\r\n\t\t// 12\r\n\t\t[2, 116, 92, 2, 117, 93],\r\n\t\t[6, 58, 36, 2, 59, 37],\r\n\t\t[4, 46, 20, 6, 47, 21],\r\n\t\t[7, 42, 14, 4, 43, 15],\r\n\r\n\t\t// 13\r\n\t\t[4, 133, 107],\r\n\t\t[8, 59, 37, 1, 60, 38],\r\n\t\t[8, 44, 20, 4, 45, 21],\r\n\t\t[12, 33, 11, 4, 34, 12],\r\n\r\n\t\t// 14\r\n\t\t[3, 145, 115, 1, 146, 116],\r\n\t\t[4, 64, 40, 5, 65, 41],\r\n\t\t[11, 36, 16, 5, 37, 17],\r\n\t\t[11, 36, 12, 5, 37, 13],\r\n\r\n\t\t// 15\r\n\t\t[5, 109, 87, 1, 110, 88],\r\n\t\t[5, 65, 41, 5, 66, 42],\r\n\t\t[5, 54, 24, 7, 55, 25],\r\n\t\t[11, 36, 12],\r\n\r\n\t\t// 16\r\n\t\t[5, 122, 98, 1, 123, 99],\r\n\t\t[7, 73, 45, 3, 74, 46],\r\n\t\t[15, 43, 19, 2, 44, 20],\r\n\t\t[3, 45, 15, 13, 46, 16],\r\n\r\n\t\t// 17\r\n\t\t[1, 135, 107, 5, 136, 108],\r\n\t\t[10, 74, 46, 1, 75, 47],\r\n\t\t[1, 50, 22, 15, 51, 23],\r\n\t\t[2, 42, 14, 17, 43, 15],\r\n\r\n\t\t// 18\r\n\t\t[5, 150, 120, 1, 151, 121],\r\n\t\t[9, 69, 43, 4, 70, 44],\r\n\t\t[17, 50, 22, 1, 51, 23],\r\n\t\t[2, 42, 14, 19, 43, 15],\r\n\r\n\t\t// 19\r\n\t\t[3, 141, 113, 4, 142, 114],\r\n\t\t[3, 70, 44, 11, 71, 45],\r\n\t\t[17, 47, 21, 4, 48, 22],\r\n\t\t[9, 39, 13, 16, 40, 14],\r\n\r\n\t\t// 20\r\n\t\t[3, 135, 107, 5, 136, 108],\r\n\t\t[3, 67, 41, 13, 68, 42],\r\n\t\t[15, 54, 24, 5, 55, 25],\r\n\t\t[15, 43, 15, 10, 44, 16],\r\n\r\n\t\t// 21\r\n\t\t[4, 144, 116, 4, 145, 117],\r\n\t\t[17, 68, 42],\r\n\t\t[17, 50, 22, 6, 51, 23],\r\n\t\t[19, 46, 16, 6, 47, 17],\r\n\r\n\t\t// 22\r\n\t\t[2, 139, 111, 7, 140, 112],\r\n\t\t[17, 74, 46],\r\n\t\t[7, 54, 24, 16, 55, 25],\r\n\t\t[34, 37, 13],\r\n\r\n\t\t// 23\r\n\t\t[4, 151, 121, 5, 152, 122],\r\n\t\t[4, 75, 47, 14, 76, 48],\r\n\t\t[11, 54, 24, 14, 55, 25],\r\n\t\t[16, 45, 15, 14, 46, 16],\r\n\r\n\t\t// 24\r\n\t\t[6, 147, 117, 4, 148, 118],\r\n\t\t[6, 73, 45, 14, 74, 46],\r\n\t\t[11, 54, 24, 16, 55, 25],\r\n\t\t[30, 46, 16, 2, 47, 17],\r\n\r\n\t\t// 25\r\n\t\t[8, 132, 106, 4, 133, 107],\r\n\t\t[8, 75, 47, 13, 76, 48],\r\n\t\t[7, 54, 24, 22, 55, 25],\r\n\t\t[22, 45, 15, 13, 46, 16],\r\n\r\n\t\t// 26\r\n\t\t[10, 142, 114, 2, 143, 115],\r\n\t\t[19, 74, 46, 4, 75, 47],\r\n\t\t[28, 50, 22, 6, 51, 23],\r\n\t\t[33, 46, 16, 4, 47, 17],\r\n\r\n\t\t// 27\r\n\t\t[8, 152, 122, 4, 153, 123],\r\n\t\t[22, 73, 45, 3, 74, 46],\r\n\t\t[8, 53, 23, 26, 54, 24],\r\n\t\t[12, 45, 15, 28, 46, 16],\r\n\r\n\t\t// 28\r\n\t\t[3, 147, 117, 10, 148, 118],\r\n\t\t[3, 73, 45, 23, 74, 46],\r\n\t\t[4, 54, 24, 31, 55, 25],\r\n\t\t[11, 45, 15, 31, 46, 16],\r\n\r\n\t\t// 29\r\n\t\t[7, 146, 116, 7, 147, 117],\r\n\t\t[21, 73, 45, 7, 74, 46],\r\n\t\t[1, 53, 23, 37, 54, 24],\r\n\t\t[19, 45, 15, 26, 46, 16],\r\n\r\n\t\t// 30\r\n\t\t[5, 145, 115, 10, 146, 116],\r\n\t\t[19, 75, 47, 10, 76, 48],\r\n\t\t[15, 54, 24, 25, 55, 25],\r\n\t\t[23, 45, 15, 25, 46, 16],\r\n\r\n\t\t// 31\r\n\t\t[13, 145, 115, 3, 146, 116],\r\n\t\t[2, 74, 46, 29, 75, 47],\r\n\t\t[42, 54, 24, 1, 55, 25],\r\n\t\t[23, 45, 15, 28, 46, 16],\r\n\r\n\t\t// 32\r\n\t\t[17, 145, 115],\r\n\t\t[10, 74, 46, 23, 75, 47],\r\n\t\t[10, 54, 24, 35, 55, 25],\r\n\t\t[19, 45, 15, 35, 46, 16],\r\n\r\n\t\t// 33\r\n\t\t[17, 145, 115, 1, 146, 116],\r\n\t\t[14, 74, 46, 21, 75, 47],\r\n\t\t[29, 54, 24, 19, 55, 25],\r\n\t\t[11, 45, 15, 46, 46, 16],\r\n\r\n\t\t// 34\r\n\t\t[13, 145, 115, 6, 146, 116],\r\n\t\t[14, 74, 46, 23, 75, 47],\r\n\t\t[44, 54, 24, 7, 55, 25],\r\n\t\t[59, 46, 16, 1, 47, 17],\r\n\r\n\t\t// 35\r\n\t\t[12, 151, 121, 7, 152, 122],\r\n\t\t[12, 75, 47, 26, 76, 48],\r\n\t\t[39, 54, 24, 14, 55, 25],\r\n\t\t[22, 45, 15, 41, 46, 16],\r\n\r\n\t\t// 36\r\n\t\t[6, 151, 121, 14, 152, 122],\r\n\t\t[6, 75, 47, 34, 76, 48],\r\n\t\t[46, 54, 24, 10, 55, 25],\r\n\t\t[2, 45, 15, 64, 46, 16],\r\n\r\n\t\t// 37\r\n\t\t[17, 152, 122, 4, 153, 123],\r\n\t\t[29, 74, 46, 14, 75, 47],\r\n\t\t[49, 54, 24, 10, 55, 25],\r\n\t\t[24, 45, 15, 46, 46, 16],\r\n\r\n\t\t// 38\r\n\t\t[4, 152, 122, 18, 153, 123],\r\n\t\t[13, 74, 46, 32, 75, 47],\r\n\t\t[48, 54, 24, 14, 55, 25],\r\n\t\t[42, 45, 15, 32, 46, 16],\r\n\r\n\t\t// 39\r\n\t\t[20, 147, 117, 4, 148, 118],\r\n\t\t[40, 75, 47, 7, 76, 48],\r\n\t\t[43, 54, 24, 22, 55, 25],\r\n\t\t[10, 45, 15, 67, 46, 16],\r\n\r\n\t\t// 40\r\n\t\t[19, 148, 118, 6, 149, 119],\r\n\t\t[18, 75, 47, 31, 76, 48],\r\n\t\t[34, 54, 24, 34, 55, 25],\r\n\t\t[20, 45, 15, 61, 46, 16]\r\n\t];\r\n\r\n\tstatic getRSBlocks(typeNumber, errorCorrectLevel) {\r\n\t\tlet rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\r\n\r\n\t\tif (rsBlock == undefined) {\r\n\t\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\r\n\t\t}\r\n\r\n\t\tlet length = rsBlock.length / 3;\r\n\r\n\t\tlet list = new Array();\r\n\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\r\n\t\t\tlet count = rsBlock[i * 3 + 0];\r\n\t\t\tlet totalCount = rsBlock[i * 3 + 1];\r\n\t\t\tlet dataCount = rsBlock[i * 3 + 2];\r\n\r\n\t\t\tfor (let j = 0; j < count; j++) {\r\n\t\t\t\tlist.push(new QRRSBlock(totalCount, dataCount));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn list;\r\n\t}\r\n\tstatic getRsBlockTable(typeNumber, errorCorrectLevel) {\r\n\t\tswitch (errorCorrectLevel) {\r\n\t\t\tcase QRErrorCorrectLevel.L:\r\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\r\n\t\t\tcase QRErrorCorrectLevel.M:\r\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\r\n\t\t\tcase QRErrorCorrectLevel.Q:\r\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\r\n\t\t\tcase QRErrorCorrectLevel.H:\r\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\r\n\t\t\tdefault:\r\n\t\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRBitBuffer\r\n//---------------------------------------------------------------------\r\nexport class QRBitBuffer {\r\n\tpublic buffer;\r\n\tpublic length;\r\n\tconstructor() {\r\n\t\tthis.buffer = new Array();\r\n\t\tthis.length = 0;\r\n\t}\r\n\tget(index) {\r\n\t\tlet bufIndex = Math.floor(index / 8);\r\n\t\treturn ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\r\n\t}\r\n\tput(num, length) {\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tthis.putBit(((num >>> (length - i - 1)) & 1) == 1);\r\n\t\t}\r\n\t}\r\n\tgetLengthInBits() {\r\n\t\treturn this.length;\r\n\t}\r\n\tputBit(bit) {\r\n\t\tlet bufIndex = Math.floor(this.length / 8);\r\n\t\tif (this.buffer.length <= bufIndex) {\r\n\t\t\tthis.buffer.push(0);\r\n\t\t}\r\n\r\n\t\tif (bit) {\r\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\r\n\t\t}\r\n\r\n\t\tthis.length++;\r\n\t}\r\n}\r\n"]}