{"version":3,"sources":["assets\\GameHall\\script\\GameCommon.ts"],"names":[],"mappings":";;;;;;;AAEA;IAAA;IA+CA,CAAC;IA1CU,oBAAS,GAAhB,UAAiB,MAAc,EAAE,SAAiB;QAC9C,IAAI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,MAAM;gBAC3C,IAAI,GAAG,EAAE;oBACL,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC,CAAC;oBACtC,OAAO;iBACV;gBACD,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,MAAM,CAAC,CAAC;gBACxD,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,UAAU;oBACxC,IAAI,GAAG,EAAE;wBACL,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,GAAG,SAAS,CAAC,CAAC;wBAClD,OAAO;qBACV;oBACD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,aAAa,GAAG,SAAS,CAAC,CAAC;oBACpD,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACN;aACI;YACD,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,UAAU;gBACvC,IAAI,GAAG,EAAE;oBACL,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,GAAG,SAAS,CAAC,CAAC;oBAClD,OAAO;iBACV;gBACD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,aAAa,GAAG,SAAS,CAAC,CAAC;gBACpD,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,SAAS;IACF,0BAAe,GAAtB,UAAuB,SAAiB;QACpC,IAAI,YAAY,GAAa,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACvD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACtD,IAAI,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,IAAI,IAAI,SAAS,EAAE;gBACnB,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IA7CM,qBAAU,GAAQ,IAAI,CAAC;IACvB,oBAAS,GAAc,IAAI,CAAC;IAC5B,sBAAW,GAAY,IAAI,CAAC;IA4CvC,iBAAC;CA/CD,AA+CC,IAAA;AA/CY,gCAAU","file":"","sourceRoot":"/","sourcesContent":["import { vipConfig } from \"./Lobby/LobbyNetData\";\n\nexport class GameCommon {\n    static allSmsCode: any = null;\n    static vipConfig: vipConfig = null;\n    static isAutoLogin: boolean = true;\n\n    static loadScene(abname: string, scenename: string): void {\n        let oldab = cc.assetManager.getBundle(abname);\n        if (oldab == null) {\n            cc.assetManager.loadBundle(abname, (err, bundle) => {\n                if (err) {\n                    console.error(abname + \" load fail.\");\n                    return;\n                }\n                console.log(\"loadSubpackage success name == \" + abname);\n                bundle.loadScene(scenename, (err, sceneAsset) => {\n                    if (err) {\n                        console.error(abname + \" load fail.\" + scenename);\n                        return;\n                    }\n                    console.log(sceneAsset + \" sceneName:\" + scenename);\n                    cc.director.runScene(sceneAsset);\n                });\n            });\n        }\n        else {\n            oldab.loadScene(scenename, (err, sceneAsset) => {\n                if (err) {\n                    console.error(abname + \" load fail.\" + scenename);\n                    return;\n                }\n                console.log(sceneAsset + \" sceneName:\" + scenename);\n                cc.director.runScene(sceneAsset);\n            });\n        }\n    }\n\n    // 是否需要重连\n    static isNeedReconnect(sceneName: string): boolean {\n        let notSceneName: string[] = [\"dlc\", \"login\", \"lobby\"];\n        for (let index = 0; index < notSceneName.length; index++) {\n            let name = notSceneName[index];\n            if (name == sceneName) {\n                return false;\n            }\n        }\n        return true;\n    }\n}"]}