{"version":3,"sources":["assets\\Games\\texas\\script\\View\\TurnCellComp.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ViewBase from \"../../../../Script/BaseFrame/ViewBase\";\nimport { UIUtil, PlayerPrefs } from \"../../../../Script/Common/UIUtil\";\nimport { TexasTurnActionEnum, Texas, TexasTurnEnum } from \"../Model/Texas\";\nimport { TexActionSD, PInfoSD, TexUserInfoSD } from \"../Model/TexasNetData\";\nimport CardRedbetComp from \"./CardRedbetComp\";\nimport TexasHistoryComp from \"./TexasHistoryComp\";\n\n\n\nexport class TurnCellComp extends ViewBase {\n    public historyComp: TexasHistoryComp = null;\n    public ui_turnTitle: fgui.GComponent = null;\n\n    public ui_turnInfoList: fgui.GList = null;\n    // public Transform ui_turnInfoCell;\n    private dataList: TexActionSD[];\n    private users: PInfoSD[];\n    private addCounts: number;\n    private bpos: number;\n    private tuInfo: TexUserInfoSD[];\n\n    private _Cards: number[] = [];\n    private _turn: number;\n    private _lastTotalDizhu: number;\n    private onLoadEnd = false;\n    OnLoadCompleted() {\n        // super.AutoSetGoProperty();\n\n        this.onLoadEnd = true;\n        if (this.mystart) this.MyStartEx();\n    }\n\n    public MyStart(infoData: TexActionSD[], plist: PInfoSD[], cards: number[], turn: number, lastTotalDizhu: number, bPos: number, tInfo: TexUserInfoSD[]) {\n\n\n        this.mystart = true;\n        this.dataList = infoData;\n        this.users = plist;\n        this.bpos = bPos;\n        this.tuInfo = tInfo;\n        this._Cards = cards;\n        this._turn = turn;\n        this._lastTotalDizhu = lastTotalDizhu;\n        if (this.onLoadEnd) this.MyStartEx();\n\n    }\n\n    AutoSetGoProperty() { }\n\n    MyStartEx() {\n        console.log(\"getChild : \" + this.fguiComponent.name);\n        this.ui_turnTitle = this.fguiComponent.getChild(\"turnTitle\").asCom;\n        this.ui_turnInfoList = this.fguiComponent.getChild(\"turnInfoList\").asList;\n        this.fguiHeight = 122;\n        this.DisplayTurnInfo();\n        this.DisplayTitle(this._Cards, this._turn, this._lastTotalDizhu);\n    }\n\n    public DisplayTitle(cards: number[], curTurn: number, dizhu: number) {\n        let comp: TurnTitleComp = this.ui_turnTitle.node.getComponent(TurnTitleComp);\n        if (comp == null) {\n            comp = this.ui_turnTitle.node.addComponent(TurnTitleComp);\n            comp.fguiComponent = this.ui_turnTitle;\n            comp.historyComp = this.historyComp;\n            // this.ui_turnTitle.node.active = true;\n        }\n        comp.MyStart1(this.dataList, cards, curTurn, dizhu);\n    }\n    public DisplayTurnInfo() {\n        this.ui_turnInfoList.removeChildrenToPool();\n\n        if (this.dataList == null || this.dataList.length == 0) return;\n        let go: fgui.GObject = null;\n        let folders = 0;\n        this.addCounts = 0;\n        this.fguiHeight = 122;\n        for (var i = 0; i < this.dataList.length; i++)\n        // for (var i = 0; i < 10; i++)\n        {\n            let curData: TexActionSD = this.dataList[i];\n            let type: TexasTurnActionEnum = curData.at;\n            //连续两个及其以上不显示玩家直接显示文本几个folds\n            if (type == TexasTurnActionEnum.fold && i < this.dataList.length - 1) {\n                folders += 1;\n                let nextData: TexActionSD = this.dataList[i + 1];\n                let nexttype: TexasTurnActionEnum = nextData.at;\n                if (nexttype == TexasTurnActionEnum.fold) {\n                    continue;\n                }\n            }\n            go = this.ui_turnInfoList.addItemFromPool();\n            this.historyComp.ui_turnContent.height += 51 + 22;\n            this.fguiHeight += 51 + 22;\n            // this.historyComp.ui_historyGroup.node.height += 51+51+20;\n            this.SetTurnCellInfo(go.asCom, curData, folders);\n            folders = 0;\n        }\n        // console.log(\"======DisplayTurnInfo == ui_turnInfoList.numItems:\"+ this.ui_turnInfoList.numItems+\", ui_turnContent.height:\"+this.historyComp.ui_turnContent.height );\n        // LayoutRebuilder.ForceRebuildLayoutImmediate(ui_turnInfoList.gameObject.GetComponent<RectTransform>());\n        // LayoutRebuilder.ForceRebuildLayoutImmediate(gameObject.GetComponent<RectTransform>());\n    }\n    public SetTurnCellInfo(cellItem: fgui.GComponent, infoSD: TexActionSD, folds = 0) {\n        let infoPanel: fgui.GGroup = cellItem.getChild(\"turnInfoCellPanel\").asGroup;\n        let foldPanel: fgui.GTextField = cellItem.getChild(\"turnFlodTxt\").asTextField;\n        infoPanel.visible = (folds <= 1);\n        foldPanel.visible = (folds >= 2);\n        if (folds <= 1) {\n            let posName: fgui.GTextField = cellItem.getChild(\"curPosName\").asTextField;\n            let playerName: fgui.GTextField = cellItem.getChild(\"txtName\").asTextField;\n            let handleBg: fgui.GLoader = cellItem.getChild(\"handleBg\").asLoader;\n            let handleTitle: fgui.GTextField = cellItem.getChild(\"handleTitle\").asTextField;\n            let handleValue: fgui.GTextField = cellItem.getChild(\"handleValue\").asTextField;\n            let turnFlodTxt: fgui.GTextField = cellItem.getChild(\"txtCurGamble\").asTextField;\n            let userInfo: PInfoSD = this.GetUser(infoSD.id);\n            UIUtil.SetLimitTxt(playerName, userInfo.wName, 6);\n            handleValue.text = Texas.formatNumber100(infoSD.g) + \"\";\n            posName.text = Texas.getPlayerPosType(infoSD.pos, this.bpos, this.tuInfo);\n            turnFlodTxt.text = \"\";//infoSD.turn == 1 ? UIUtil.formatNumber100(infoSD.jg) + \"\" : \"P:\" + UIUtil.formatNumber100(infoSD.jg);\n            let type: TexasTurnActionEnum = infoSD.at;\n\n            if (type == TexasTurnActionEnum.B) {\n                this.addCounts += 1;\n            }\n            this.SetHandleBytType(type, handleTitle, handleBg, infoSD.turn);\n            posName.color = type == TexasTurnActionEnum.fold ? cc.Color.GRAY : cc.Color.WHITE;\n            playerName.color = type == TexasTurnActionEnum.fold ? cc.Color.GRAY : cc.Color.WHITE;\n            handleValue.color = type == TexasTurnActionEnum.fold ? cc.Color.GRAY : cc.Color.WHITE;\n            turnFlodTxt.color = type == TexasTurnActionEnum.fold ? cc.Color.GRAY : cc.Color.WHITE;\n        }\n        else {\n            foldPanel.text = folds + \"folds\";\n        }\n    }\n\n    public SetHandleBytType(type: TexasTurnActionEnum, txt: fgui.GTextField, img: fgui.GLoader, curTurn: number) {\n        let str = \"\";\n        let imgStr = \"hanlde_red\";\n        UIUtil.ImageGreyToggle(img, false);\n        switch (type) {\n            case TexasTurnActionEnum.allin:\n                imgStr = \"hanlde_red\";\n                str = \"A\";\n                break;\n            case TexasTurnActionEnum.B1:\n                imgStr = \"hanlde_red\";\n                str = \"R\";\n                break;\n            case TexasTurnActionEnum.B1_2:\n                imgStr = \"hanlde_red\";\n                str = \"B\";\n                break;\n            case TexasTurnActionEnum.B2_3:\n                imgStr = \"hanlde_red\";\n                str = \"3B\";\n                break;\n            case TexasTurnActionEnum.bb:\n                str = \"BB\";\n                imgStr = \"handlle_green\";\n                break;\n            case TexasTurnActionEnum.call:\n                str = \"C\";\n                imgStr = \"handlle_green\";\n                break;\n            case TexasTurnActionEnum.Check:\n                str = \"X\";\n                imgStr = \"handlle_green\";\n                break;\n            case TexasTurnActionEnum.fold:\n                UIUtil.ImageGreyToggle(img, true);\n                str = \"F\";\n                break;\n            case TexasTurnActionEnum.sb:\n                str = \"SB\";\n                imgStr = \"handlle_green\";\n                break;\n            case TexasTurnActionEnum.stradlle:\n                imgStr = \"hanlde_red\";\n                str = \"S\";\n                break;\n            case TexasTurnActionEnum.B:\n                imgStr = \"hanlde_red\";\n                if (curTurn == 1) {\n                    str = (2 + this.addCounts) + \"B\";\n                }\n                else {\n                    str = this.addCounts > 1 ? \"R\" : \"B\";\n                }\n                break;\n            case TexasTurnActionEnum.Ins:\n                imgStr = \"hanlde_red\";\n                str = \"i\";\n                break;\n        }\n        txt.text = str;\n        UIUtil.loadImage(img, imgStr, \"Texas\")\n    }\n    public GetUser(id: number): PInfoSD {\n        if (this.users == null) { return null; }\n        return this.users.find(user => user.uid == id);\n    }\n}\n\nexport class TurnTitleComp extends ViewBase {\n    public historyComp: TexasHistoryComp = null;\n    public ui_turnName: fgui.GTextField = null;\n    public ui_turnCardsList: fgui.GList = null;\n    // public Transform ui_turnCardCell;\n    public ui_playerCount: fgui.GTextField = null;\n    public ui_lastTurnGamble: fgui.GTextField = null;\n\n    private _dataList: TexActionSD[];\n    private _playerNum: number\n    private _cards: number[]\n    private _turn: number\n    private _lastDizhu: number\n\n    private onLoadEnd = false;\n    public MyStart1(dataList: TexActionSD[], cards: number[], turn: number, lastDizhu: number) {\n        this.mystart = true;\n        this._dataList = dataList;\n        this._cards = cards;\n        this._turn = turn;\n        this._lastDizhu = lastDizhu;\n        if (this.onLoadEnd) {\n            this.AutoSetGoPropertyEx();\n            this.setData1(this._dataList, this._cards, this._turn, this._lastDizhu);\n        }\n    }\n\n    public MyStart2(playerNum: number, cards: number[], turn: number, lastDizhu: number) {\n        this.mystart = true;\n        this._playerNum = playerNum;\n        this._cards = cards;\n        this._turn = turn;\n        this._lastDizhu = lastDizhu;\n        if (this.onLoadEnd) {\n            this.AutoSetGoPropertyEx();\n            this.setData2(this._playerNum, this._cards, this._turn, this._lastDizhu);\n        }\n    }\n\n    OnLoadCompleted() {\n        this.onLoadEnd = true;\n        if (this.mystart) {\n            this.AutoSetGoPropertyEx();\n            if (this._dataList) {\n                this.setData1(this._dataList, this._cards, this._turn, this._lastDizhu);\n            } else {\n                this.setData2(this._playerNum, this._cards, this._turn, this._lastDizhu);\n            }\n        }\n    }\n\n    AutoSetGoProperty() {\n\n    }\n\n    AutoSetGoPropertyEx() {\n        console.log(\"getChild : \" + this.fguiComponent.name);\n        this.ui_turnName = this.fguiComponent.getChild(\"turnName\").asTextField;\n        this.ui_turnCardsList = this.fguiComponent.getChild(\"turnCardsList\").asList;\n        this.ui_playerCount = this.fguiComponent.getChild(\"playerCount\").asTextField;\n        this.ui_lastTurnGamble = this.fguiComponent.getChild(\"lastTurnGamble\").asTextField;\n    }\n\n\n\n    private setData1(dataList: TexActionSD[], cards: number[], turn: number, lastDizhu: number) {\n        let newList: TexActionSD[] = [];\n        let list = \"{\";\n        dataList.forEach((value) => { list += value.id + \",\" })\n        console.log(\"去重前： \" + list + \" }\")\n        const obj: { [key: number]: boolean; } = {};\n        newList = dataList.reduce<TexActionSD[]>((item, next) => {\n            if (!obj[next.id]) {\n                item.push(next);\n                obj[next.id] = true;\n            }\n            return item;\n        }, []);\n        let list2 = \"{\";\n        newList.forEach((value) => { list2 += value.id + \",\" })\n        console.log(\"去重后：\" + list2 + \" }\")\n        this.DisplayTitle(newList.length, cards, turn, lastDizhu);\n    }\n    private setData2(playerNum: number, cards: number[], turn: number, lastDizhu: number) {\n        this.DisplayTitle(playerNum, cards, turn, lastDizhu);\n    }\n    public DisplayTitle(playerNum: number, cards: number[], turn: number, lastDizhu: number) {\n        this.ui_turnName.text = this.getTurnName(turn);\n        this.ui_playerCount.text = playerNum + \"\";\n        this.ui_lastTurnGamble.text = Texas.formatNumber100(lastDizhu) + \"\";\n        let go: fgui.GObject = null;\n\n        this.ui_turnCardsList.removeChildrenToPool();\n        if (cards == null || cards.length == 0) return;\n        let cardsNum = this.displayCardsNum(turn, cards.length);\n        for (var i = 0; i < cards.length && i < cardsNum; i++) {\n            let cardId = cards[i];\n            go = this.ui_turnCardsList.addItemFromPool();\n            UIUtil.loadImage(go.asCom.getChild(\"turnCardCell\").asLoader, cardId == 0 ? CardRedbetComp.cardTypeName : cardId + \"_\" + PlayerPrefs.GetInt(\"key_cards_index\", 1), \"Texas\");\n        }\n    }\n    public displayCardsNum(turn: number, cards: number) {\n        let cardsNum = 0;\n        switch (turn) {\n            case -1:\n                cardsNum = 5;\n                break;\n            case 1:\n                cardsNum = 0;\n                break;\n            case 2:\n                cardsNum = 3;\n                break;\n            case 3:\n                cardsNum = 4;\n                break;\n            case 4:\n                cardsNum = 5;\n                break;\n            case 5:\n                cardsNum = cards;\n                break;\n        }\n        return cardsNum;\n    }\n\n    public getTurnName(turn: number): string {\n        let str = \"\";\n        let type: TexasTurnEnum = turn;\n        switch (type) {\n            case TexasTurnEnum.Init:\n                str = \"牌谱\"\n                break;\n            case TexasTurnEnum.Turn1_0:\n                str = \"Preflop\";\n                break;\n            case TexasTurnEnum.Turn2_3:\n                str = \"Flop\";\n                break;\n            case TexasTurnEnum.Turn3_4:\n                str = \"Turn\";\n                break;\n            case TexasTurnEnum.Turn4_5:\n                str = \"River\";\n                break;\n            case TexasTurnEnum.TrunCompare:\n                str = \"Showdown\";\n                break;\n        }\n        return str;\n    }\n}"]}