{"version":3,"sources":["assets\\Games\\texas\\script\\Model\\F_TexasModel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { CommonPosValSD, PlayerInfoSD, OtherUserInfoSD, CommonPosValListSD, RoomInfoSD } from \"../../../../Script/BaseFrame/cs_base\";\nimport { UIUtil } from \"../../../../Script/Common/UIUtil\";\nimport LobbyViewCtr from \"../../../../GameHall/script/Lobby/LobbyViewCtr\";\nimport { TableRoomInfoTex, SuperClub, Cards, sc_entertablenum_tex, TableRecoverTexasSD } from \"./TexasNetData\";\n\n\n\nexport class F_TexasModel {\n    //比赛相关\n    public AOF_Times: number;\n    public level: number;\n    public min_level: number;\n    public max_level: number;\n    public competeid: number;\n    public matchName: string;\n    public bigblind: number;\n\n    public _tablePlayerList: string;\n    public _pos2Gold: CommonPosValSD[] = [];\n    public mPlayerModel: PlayerInfoSD;\n    public tableApply = 0;\n    public minStartGamble: number = 0; //开始的最低下注\n    public tableLockGold: number = 0; //当前桌子锁定的金币\n    public curTableOverCount: number = 0;//一共玩了多少局\n    public isGamestart = false;//是否可以倒计时\n    public jubaoType = 0;//举报类型，0:玩家，1:牌局\n\n    public curMsgId: number = 0;\n    public gameid: number;\n    public levelid: number;\n    public tableid: number;\n    public room: TableRoomInfoTex;\n    public Room_tnumber: string;\n    public Room_name: string;\n    /// <summary>\n    /// 人数  几人房显示\n    /// </summary>\n    public manNum: number;\n    /// <summary>\n    /// 人数  最低多少人开启游戏\n    /// </summary>\n    public minPC: number = 0;\n    /// <summary>\n    /// 1开启\n    /// </summary>\n    public ins: number;\n    public openV: number;\n    public pas: string = \"\";\n    /// <summary>\n    /// 此桌面的玩有数据 所有带POS值 是从1开始， \n    /// </summary>\n    public palyerlist: OtherUserInfoSD[];\n    /// <summary>\n    /// 只有位置的人申请才能看到\n    /// </summary>\n    public pos2apply: CommonPosValSD[];\n    public MyEndMoney; //记录我剩余的钱，用于结束的时候判断是否需要弹出加钱界面\n    public _CommonCard: number[];\n    public _OpenCount;\n\n    /// <summary>\n    /// 所有人的公开显示手牌，弃牌的人不显示 \n    /// </summary>\n    public _pos2openPai: CommonPosValListSD[];\n    public _ShouPai: number[];\n    public BankerPos: number;\n    public _posServer: number; //我在服务器的位置\n    /// <summary>\n    /// 是否正在排队\n    /// </summary>\n    public isline: boolean;\n    /// <summary>\n    /// 排队人数\n    /// </summary>\n    public onlinenumber;\n    public isGaming: boolean; //牌局是否结束\n    public isShowPersonRemind: boolean = true;\n    public isselfontable: boolean; //自己是否在桌子上比牌失败，放弃都可以离开，这里要通知服务器发送退出消息\n    public delayCount: number; //延迟次数\n    /// <summary>\n    /// 点击看公牌次数\n    /// </summary>\n    public clicknum: number;\n    /// <summary>\n    /// 强制看牌次数\n    /// </summary>\n    public fshownum: number;\n    /// <summary>\n    /// 已存在club gold\n    /// </summary>\n    public cgold: number;\n    /// <summary>\n    /// 是否超级联盟房间\n    /// </summary>\n    public IsSupper: boolean;\n    /// <summary>\n    /// 是否结算离桌\n    /// </summary>\n    public IsSettle: boolean;\n    /// <summary>\n    /// 俱乐部id\n    /// </summary>\n    public clubid: number;\n    /// <summary>\n    /// 房主id\n    /// </summary>\n    public ownnerid: number;\n    /// <summary>\n    /// 每一轮只有一只看牌机会\n    /// </summary>\n    public get showcard(): boolean {\n        return this._curGambleLimitMin == 0;\n    }\n\n    /// <summary>\n    /// 当前允许下注的最小值 为0表示可以看牌\n    /// </summary>\n    public _curGambleLimitMin: number = 0; //当前单次下注值\n    public _curMaxGamble: number = 0; //封顶下注\n    public _CurTurnCount: number = 0; //当前轮数\n    public firstTurnStart: boolean = false;//当前是否是第一个操作\n    public _jackpot: number; //当前的奖池数\n    public _jpot: number; //当前的底皮\n    public _lastjpot: number; //上一轮的底皮,只有进入房间服务器传值，游戏中都是客户端自己处理\n    public _mangoOfTable: number; //当前奖池\n    public _mingamble: number; //当前的允许的最小下注 Allin除外\n    public _emaxg: number;\n    public endDelay: boolean;\n    public _gamble: number = 0;\n    public turnGamble: number = 0; // 当前轮的最大下注allin除外\n    /// <summary>\n    /// 同超级联盟的俱乐部\n    /// </summary>\n    public clubslist: SuperClub[];\n    /// <summary>\n    /// 当前选中的加入超级联盟的俱乐部\n    /// </summary>\n    public curSClub: SuperClub;\n    /// <summary>\n    /// 超级联盟  玩家带入俱乐部的id    初始为0\n    /// </summary>\n    public intoCid: number;\n    /// <summary>\n    /// 主池边池默认第一个为主池\n    /// </summary>\n    public potlist: number[];\n    public MatchCode = \"\"; //牌局号\n    /// <summary>\n    /// 自己的秀牌集合\n    /// </summary>\n    public _scards: Cards[];\n    public brate: number;\n    public intorate_min: number;\n    public intorate_max: number;\n    public pregamble: number;\n    public gps: number;\n    public ip: number;\n    /// <summary>\n    /// 如果有自己的操作更新最新的倒计时\n    /// </summary>\n    public lefttime: number;\n    /// <summary>\n    /// 房主同意开局 \n    /// 默认都为true\n    /// </summary>\n    public openplay: boolean = true;\n    /// <summary>\n    /// 房主同意开局开关打开后，当前房间房主是否已经点开开启牌局状态\n    /// 默认都为true\n    /// </summary>\n    public isopen: boolean;\n    /// <summary>\n    /// 是否限制ios\n    /// </summary>\n    public ios: boolean;\n    /// <summary>\n    /// 限制入池率\n    /// </summary>\n    public Inflow: number;\n    public gametype: number;\n    public delay: number;\n    public showCard: number;\n    /// <summary>\n    /// 是否控制带入\n    /// </summary>\n    public cinto: boolean;\n    //public int bmango;\n    public table: sc_entertablenum_tex;\n    public recover: TableRecoverTexasSD;\n    public endTime: number;\n\n    public isTurnOver: boolean; //当前手结束\n\n    public isLastStepStart: boolean = false;\n\n    public muteUsers: Map<number, boolean> = new Map<number, boolean>();\n\n    public PlayingUsers: CommonPosValSD[]; //当前局正在玩的玩家\n    public BigSmallPlayingUser: CommonPosValSD[]; //当前局大小盲玩家\n\n    //public List<int> insList; //可选保额列表\n    //public List<int> outs; //补牌\n    ////public double rate; //赔率\n    //public int curJiangchi; //当前自己的奖池\n    public insList32: number[]; //可选保额列表\n    public outs32: number[]; //补牌\n    public rate32: number; //赔率\n    public curJiangchi32: number; //当前自己的奖池分池\n    public curJiangchi31: number;//当前自己的奖池主池\n    public insList31: number[];\n    public outs31: number[]; //补牌\n    public inOrder: number;//已投保\n    public insIpos: CommonPosValSD[];//val:0可购买主池和分池，1主池，2分池；\n\n    public id2keep: CommonPosValSD[] = [];\n    public isinsurance: boolean; //是否正在保险模式\n    public F_TexasModel() {\n        this._CommonCard = [];\n        this._ShouPai = [];\n        this._pos2openPai = [];\n        this.Reset();\n    }\n    public Init() {\n        this._CommonCard = [];\n        this._ShouPai = [];\n        this._pos2openPai = [];\n        this.palyerlist = [];\n        this.Reset();\n    }\n    public SetbaseDataId(gid: number, tid: number, lvid: number) {\n        this.gameid = gid;\n        this.tableid = tid;\n        this.levelid = lvid;\n        this.SetTalbeInfo(tid, lvid);\n    }\n    public SetTalbeInfo(tid: number, lvid: number) {\n        this.tableid = tid;\n        this.levelid = lvid;\n        if (LobbyViewCtr.instance.Model.tableList == null) { return null; }\n        LobbyViewCtr.instance.Model.tableList.forEach(item => {\n            if (item.tid == this.tableid && item.lvid == this.levelid) {\n                this.room = item;\n            }\n        });\n    }\n\n    public RemovePlayerList(userID: number): boolean {\n        let b = false;\n        if (this.palyerlist == null) return b;\n        this.palyerlist.forEach((_ousd, key) => {\n            if (_ousd.py.userid == userID) {\n                this.palyerlist.splice(key, 1);\n                if (userID == this.mPlayerModel.userid) {\n                    this.SetMyServerPos(0);\n                }\n                b = true;\n            }\n        });\n\n        console.log(\"this.palyerlist === \", this.palyerlist);\n        return b;\n    }\n    public RemovePos2Apply(pos: number): boolean {\n        let b = false;\n        if (this.pos2apply == null) return false;\n        this.pos2apply.forEach((_ousd, key) => {\n            if (_ousd.pos == pos) {\n                this.pos2apply.splice(key, 1);\n                b = true;\n\n            }\n        });\n        return b;\n    }\n    public GetUserInfo(userId: number): OtherUserInfoSD {\n        let user: OtherUserInfoSD = null;\n        if (this.palyerlist != null) {\n            this.palyerlist.forEach(_ousd => {\n                if (_ousd.py.userid == userId) {\n                    user = _ousd;\n                }\n\n            });\n        }\n        return user;\n    }\n    public GetUserInfoByPos(pos: number): OtherUserInfoSD {\n        let user: OtherUserInfoSD = null;\n        if (this.palyerlist != null) {\n            this.palyerlist.forEach(_ousd => {\n                if (_ousd.pos == pos) {\n                    user = _ousd;\n                }\n            });\n        }\n        return user;\n    }\n    public SetUserData_isW_pos(userId: number, isW: number) {\n        let user: OtherUserInfoSD = this.GetUserInfo(userId);\n        if (user != null) {\n            user.isW = isW;\n        }\n    }\n    public SetUserData_isW(userId: number, isW: number) {\n        this.SetUserData_nnn(userId, 1, isW);\n    }\n\n    public SetUserData_isK(userId: number, keepTime: number) {\n        this.SetUserData_nnn(userId, 2, keepTime);\n    }\n\n    //统一修改数据 枚举方便调用\n    // public SetUserData (userId:number, key:UserInfoKey, value:number) {\n    //     this.SetUserData_nnn (userId, UIUtil.NumberToInt(key), value);\n    // }\n\n    //统一修改数据 1.key:isW(观众状态) 2. key:isK 留座状态 3.\n    public SetUserData_nnn(userId: number, key: number, value: number) {\n        let user: OtherUserInfoSD = this.GetUserInfo(userId);\n        if (user != null) {\n            switch (key) {\n                case 1:\n                    user.isW = value;\n                    break;\n                case 2:\n                    user.isK = value;\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    public GetReadyCount(): number {\n        let count = 0;\n        if (this.palyerlist != null) {\n            this.palyerlist.forEach(item => {\n                if (item.isW != 1 && item.isW != 2 && item.isK <= 0) {\n                    count++;\n                }\n            });\n        }\n\n        return count;\n    }\n\n    public GetMinPlayerCount(): number {\n        return this.minPC;\n    }\n\n    public AddPlayerList(user: OtherUserInfoSD) {\n        for (var i = 0; i < this.palyerlist.length; i++) {\n            var _ousd = this.palyerlist[i];\n            if (_ousd.py.userid == user.py.userid) {\n                this.palyerlist.splice(i, 1);\n            }\n        }\n        this.palyerlist.push(user);\n        console.log(this.palyerlist);\n    }\n    public AddPos2ApplyList(user: CommonPosValSD) {\n        for (var i = 0; i < this.pos2apply.length; i++) {\n            var _ousd = this.pos2apply[i];\n            if (_ousd.pos == user.pos) {\n                this.pos2apply.splice(i, 1);\n            }\n        }\n        this.pos2apply.push(user);\n    }\n    /// <summary>\n    /// 清理数据准备下一次游戏\n    /// </summary>\n    public Reset() {\n        this.SetMinStartGamble(0);\n        this.SetLockGold(0);\n        this.room = null;\n        this.levelid = 0;\n        this.tableid = 0;\n        this.SetMyServerPos(0);\n        this.palyerlist = null;\n        this.MatchCode = \"\";\n        this._posServer = 0;\n        //_curRoomInfo = null;\n        this.isline = false;\n        this._CurTurnCount = 0;\n        this.isGaming = false;\n        this.isselfontable = false;\n        this._curMaxGamble = 0;\n        this._pos2openPai = [];\n        console.log(\"清空手牌 个数:\");\n        this.isselfontable = false;\n        this._curGambleLimitMin = 0;\n        this._CommonCard = [];\n        this._jackpot = 0;\n        if (this._ShouPai != null) {\n            this._ShouPai = [];\n        }\n        this._jpot = 0;\n        this._lastjpot = 0;\n        this.isTurnOver = false;\n        this.isinsurance = false;\n    }\n    public GetSelfServerCards(): number[] {\n        let allCards: number[] = [];\n        if (this._ShouPai == null || this._ShouPai.length <= 0) {\n            console.log(\"展示分牌: 手牌不能为空\");\n            return allCards;\n        }\n\n        UIUtil.Concat(allCards, this._ShouPai);\n\n        if (this._pos2openPai == null || this._pos2openPai.length <= 0) {\n            console.log(\"展示分牌: 公开牌玩家为空\");\n        }\n        this._pos2openPai.forEach(item => {\n            if (item.pos == this._posServer) {\n                UIUtil.Concat(allCards, item.vallist);\n            }\n        });\n\n        return allCards;\n\n    }\n    //判断某个位置是不是观众\n    public IsPosWatch(serverPos: number): boolean {\n        let isWatch = true;\n        if (this.palyerlist != null) {\n            this.palyerlist.forEach(item => {\n                if (item.pos == serverPos) {\n                    // console.log(\"pos:item.isW\" + item.isW);\n                    isWatch = item.isW == 1;\n                }\n            });\n        }\n\n        //游戏未开始，不能是观众状态 .(游戏中才能显示观众状态)    \n        return isWatch;\n    }\n    /// <summary>\n    /// 占座等待中\n    /// </summary>\n    /// <param name=\"serverPos\"></param>\n    /// <returns></returns>\n    public IsPosWaitToTakeIn(serverPos: number): boolean {\n        let isWait = true;\n        if (this.palyerlist != null) {\n            this.palyerlist.forEach(item => {\n                if (item.pos == serverPos) {\n                    // console.log(\"pos:22222222\" + item.isW);\n                    isWait = item.isW == 2;\n                }\n            });\n        }\n\n        //占座中\n        return isWait;\n    }\n    //玩家是否在正在游戏中\n    public IsInPlaying(userId: number): boolean {\n        let isPlaying = false;\n        if (this.PlayingUsers != null) {\n            this.PlayingUsers.forEach(item => {\n                if (item.pos == userId) {\n                    isPlaying = true;\n                }\n            });\n        }\n        return isPlaying;\n    }\n    public SetMyServerPos(pos: number) {\n        this._posServer = pos;\n        // console.log(\"设置 My serverPos:\" + pos);\n    }\n    public EnableMuteUser(userId: number, isMute: boolean) {\n        this.muteUsers.set(userId, isMute);\n    }\n    public GetUserIsMute(userId: number): boolean {\n        let isMute = false;\n        if (this.muteUsers != null && this.muteUsers.has(userId)) {\n\n            isMute = this.muteUsers.get(userId);\n        }\n\n        return isMute;\n    }\n    public SetCurSClub(sclubId: number) {\n        if (sclubId > 0 && this.clubslist != null)\n            this.curSClub = this.clubslist.find(item => { return item.cid == sclubId });\n        else\n            this.curSClub = null;\n    }\n    public SetRemainTime(remainTime: number) {\n        this.endTime = remainTime;//UIUtil.NumberToInt(cc.director.getTotalTime()/1000 + remainTime);\n    }\n    public SetLockGold(lockGold: number) {\n        this.tableLockGold = lockGold;\n    }\n    public SetMinStartGamble(minGold: number) {\n        this.minStartGamble = minGold;\n    }\n    private CheckHasMe(lists: OtherUserInfoSD[]): boolean {\n        let hasme = false;\n        lists.find(\n            a => {\n                if (a.py.userid == this.mPlayerModel.userid) {\n                    hasme = true;\n                    return true;\n                }\n                return false;\n            }\n        );\n        return hasme;\n    }\n\n    public gamelevel: RoomInfoSD;\n    /// <summary>\n    /// 检查是不是输了\n    /// </summary>\n    public CheckIsLose(gold: number): boolean {\n        // if (LobbyViewCtr.instance.Model.LastEnterRoomData == null) return false;\n        let data: RoomInfoSD = this.gamelevel;\n        if (data != null && gold < data._min) {\n            return true;\n        }\n        return false;\n    }\n\n\n\n}\n"]}