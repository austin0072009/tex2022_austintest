{"version":3,"sources":["assets\\Script\\BaseFrame\\TimeInfoMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["class TimeInfoServerEx\n{\n    public tick:number = 0;// CD开始计时          \n\n}\n\n/// <summary>\n/// 时间事件结构\n/// </summary>\nclass TimeFuncStruct\n{\n    /// <summary>\n    /// 用于时间事件唯一ID 会自动增加 不需要手动赋值\n    /// </summary>\n    public  id:any;\n    /// <summary>\n    /// 时间事件触发的开始时间点 是Unity中的帧时间\n    /// </summary>\n    public  fStart:number;\n    /// <summary>\n    /// 时间事件执行的次数\n    /// </summary>\n    public  count:number;\n    /// <summary>\n    /// 防止不同场景后，延时函数的异常处理\n    /// </summary>\n    public  scene_name:string;\n    /// <summary>\n    /// 单个时间系统返回唯一ID\n    /// </summary>\n    public systemID:any;\n}\n\nexport class Res\n{\n\n    private static _instance: Res; //类型为这个类\n    private  ID:number;\n\n    /// <summary>\n    /// 同步服务器时间\n    /// </summary>\n    private  fTimeServer:number;\n    private _dateServer:TimeInfoServerEx;\n    /// <summary>\n    /// 事件列表\n    /// </summary>   \n    private listTimer:TimeFuncStruct[] = [];\n\n    private constructor()\n    {\n        this.fTimeServer = 0;\n        this.ID = 5000; \n    }\n\n    //单例\n    static get Singleton() \n    {\n      if (!this._instance) {\n        this._instance = new Res();\n      }\n      return this._instance;\n    }\n    \n\n    public get dateServer():TimeInfoServerEx\n    {\n        if (this._dateServer == null) this._dateServer = new TimeInfoServerEx();//初始化\n        return this._dateServer;\n    }\n\n    public set dateServer(value:TimeInfoServerEx)\n    {\n        this._dateServer = value;\n    }\n\n    /// <summary>\n    /// 心跳返回同步 服务器时间\n    /// </summary>\n    /// <param name=\"unixTime\">服务器时间</param>\n    public  OnServerTime( unixTime:number)\n    { \n        if (unixTime > 0)\n        {\n            this.dateServer.tick = unixTime; //同步服务器时间 \n        }\n        this.fTimeServer = unixTime;\n    }\n\n    /// <summary>\n    /// 取消 指定的时间事件 \n    /// </summary>\n    /// <param name=\"id\"></param>\n    public StopTimer( id:any)\n    {\n        let timer = this.listTimer.splice(this.listTimer.findIndex(item => item.id == id),1)\n        if(timer == null)\n        {\n            return;\n        }\n        clearTimeout(timer[0].systemID)\n    }\n\n    public StopTimerScene( scenename:string)\n    {\n        for (let i = this.listTimer.length - 1; i >= 0; i--)\n        {\n            let timer:TimeFuncStruct = this.listTimer[i];\n            if(timer == null)\n            {\n                continue;\n            }\n            if (timer.scene_name == scenename) \n            {  \n                clearTimeout(timer[0].systemID)\n                this.listTimer.splice(i,1);\n            }\n        }\n    }\n\n    /// <summary>\n    /// 计时器\n    /// </summary>\n    /// <param name=\"tick\">时间：毫秒计单位</param>\n    /// <param name=\"action\">时间回调函数</param>\n    /// <param name=\"count\">出发次数，-1无限制</param>\n    /// <returns></returns>\n    public AddTimer( tick:number,  action:Function, count:number =1,  scenename:string = \"\"):number\n    {   \n        this.ID++;\n        let timer:TimeFuncStruct = new TimeFuncStruct();\n        timer.id = this.ID;\n        timer.count = count;\n        timer.fStart = 0;\n        timer.scene_name = scenename;\n        let id = this.AddInterval(this.ID,tick,action,count);\n        timer.systemID = id;\n        \n        this.listTimer.push(timer);\n        return this.ID;\n    }\n\n    public AddInterval(ID:number,tick:number,  action:Function,count:number):any\n    {\n        var that = this;\n        let sysID = setTimeout(()=>{\n            action();\n            let index:number =  this.listTimer.findIndex((item)=>{item.id == ID})\n            if(count == -1)\n            {\n\n            }\n            else if(count == 0)\n            {\n                this.listTimer.splice(this.listTimer.findIndex(item => item.id == ID),1)\n                return;\n            }\n            else\n            {\n                count = count - 1\n                this.listTimer[index].count = count;\n            }\n            let sysID = that.AddInterval(ID,tick,action,count)\n            this.listTimer[index].systemID = sysID;\n        },tick)\n        return sysID;\n    }\n}"]}