{"version":3,"sources":["assets\\Script\\modules\\@slotsmaster\\ui-common\\lib\\Coin\\Coin.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport FguiComponentBase from \"../../../../@mogafa/fairygui-component/lib/FguiComponentBase\";\nimport CoinSpread from \"./CoinSpread\";\nexport class Coin extends FguiComponentBase {\n    protected get packageResourceName(): string {\n        return \"GameCommon\";\n    }\n    protected get packageName(): string {\n        return \"Common\";\n    }\n    protected get componentName(): string {\n        return \"Coin\";\n    }\n\n    private _coinSpread: CoinSpread;\n\n    //* 抛物线顶点最小y坐标\n    private targetNodeMinY: number = -300;\n\n    //* 抛物线顶点最大y坐标\n    private targetNodeMaxY: number = 0;\n\n    private leftTargetNode: cc.Vec2;\n\n    //* 金币最小速度\n    private minspeed: number = 120;\n\n    //* 金币最大速度\n    private maxspeed: number = 200;\n    private _coinNode: cc.Node;\n    private _isCoinSpred: boolean = false;\n\n    protected createChildComponents() {\n        super.createChildComponents();\n        this._coinSpread = new CoinSpread(this.fguiComponent.node);\n        this._coinNode = this.fguiComponent.node;\n    }\n\n    update(dt: number) {\n        if (this._isCoinSpred) {\n            this._coinSpread.update(dt);\n        }\n    }\n\n    onDestroy() {\n        console.log(\"has been destroyed.\");\n    }\n\n    /**\n     * 金币飞行动画\n     * @param startPos\n     * @param endPos\n     */\n    coinFly(startPos: cc.Vec2, endPos: cc.Vec2) {\n        this._isCoinSpred = false;\n        this._coinNode.zIndex = 2000;\n        this._coinNode.scale = 0.4;\n        this._coinNode.position = cc.v3(startPos.x, startPos.y, 0);\n\n        let randomx1 = endPos.x - startPos.x;\n\n        let randomx2 = startPos.x - endPos.x;\n\n        let randomy1 = endPos.y - startPos.y;\n\n        let randomy2 = startPos.y - endPos.y;\n\n        let q1 = cc.v2(0, 0);\n        let q2 = cc.v2(0, 0);\n        let romx = cc.misc.lerp(-100, 100, Math.random());\n\n        let romy = cc.misc.lerp(-100, 100, Math.random());\n\n        if (romx > 0) {\n            q1.x = startPos.x + romx + 100;\n        } else {\n            q1.x = startPos.x + romx - 100;\n        }\n\n        if (romy > 0) {\n            q1.y = startPos.y + romy + 100;\n        } else {\n            q1.y = startPos.y + romy - 100;\n        }\n\n        if (endPos.x > startPos.x) {\n            q2.x = q1.x + randomx1 * Math.random();\n        } else {\n            q2.x = q1.x - randomx2 * Math.random();\n        }\n\n        if (endPos.y > startPos.y) {\n            q2.y = q1.y - randomy1 * Math.random();\n        } else {\n            q2.y = q1.y + randomy2 * Math.random();\n        }\n        this._coinNode.runAction(cc.sequence(cc.delayTime(1), cc.fadeOut(1 / 30)));\n        this._coinNode.runAction(\n            cc.sequence(\n                cc.bezierTo(1, [q1, q2, endPos]),\n                cc.callFunc(() => {\n                    if (this.fguiComponent.node.isValid) {\n                        this.fguiComponent.node.destroy();\n                    }\n                })\n            )\n        );\n    }\n\n    coinFlyByCurve(coins: number, startPos: cc.Vec2, endPos: cc.Vec2) {\n        if (coins % 2 !== 0) {\n            if (this.fguiComponent.node.isValid) {\n                this.fguiComponent.node.destroy();\n            }\n            return;\n        }\n        this._coinNode.position = cc.v3(startPos.x, startPos.y, 0);\n        let radius: number = (endPos.y - startPos.y) / 2;\n        let distance: number = Math.abs(endPos.y - startPos.y);\n        let peak1: cc.Vec2 = cc.v2(\n            startPos.x + radius * Math.tan(((Math.PI * 2) / 360) * 30),\n            distance * (1 / 4) + startPos.y\n        );\n        let trough1: cc.Vec2 = cc.v2(startPos.x, startPos.y + distance / 2);\n        let bezierPeak1: cc.Vec2[] = [startPos, peak1, trough1];\n        let peak2: cc.Vec2 = cc.v2(\n            startPos.x - radius * Math.tan(((Math.PI * 2) / 360) * 30),\n            distance * (3 / 4) + startPos.y\n        );\n        let trough2: cc.Vec2 = endPos;\n        let bezierPeak2: cc.Vec2[] = [trough1, peak2, trough2];\n        this._coinNode.runAction(\n            cc.sequence(\n                cc.bezierTo(0.5, bezierPeak1),\n                cc.bezierTo(0.5, bezierPeak2),\n                cc.callFunc(() => {\n                    if (this.fguiComponent.node.isValid) {\n                        this.fguiComponent.node.destroy();\n                    }\n                })\n            )\n        );\n    }\n\n    /**\n     * 金币挥洒动画\n     */\n    coinSpread() {\n        this._isCoinSpred = true;\n        let startX: number = -300;\n        let startY: number = 600;\n        let endX: number = 800;\n        let endY: number = 100;\n\n        if (Math.random() * 100 > 65) {\n            this._coinNode.zIndex = 100;\n        } else {\n            this._coinNode.zIndex = 10;\n        }\n        let startpos: cc.Vec2;\n        if (Math.floor(Math.random() * 10) % 2 == 0) {\n            this.leftTargetNode = cc.v2(\n                cc.misc.lerp(-endX, -endY, Math.random()),\n                cc.misc.lerp(this.targetNodeMinY, this.targetNodeMaxY, Math.random())\n            );\n            startpos = cc.v2(cc.misc.lerp(-startX, 0, Math.random()), -startY);\n        } else {\n            this.leftTargetNode = cc.v2(\n                cc.misc.lerp(endY, endX, Math.random()),\n                cc.misc.lerp(this.targetNodeMaxY, this.targetNodeMinY, Math.random())\n            );\n            startpos = cc.v2(cc.misc.lerp(0, startX, Math.random()), -startY);\n        }\n        let coinspeed = cc.misc.lerp(this.minspeed, this.maxspeed, Math.random());\n        this._coinSpread.coinSpread(startpos, this.leftTargetNode, coinspeed, this.coinSpreadCallback.bind(this));\n    }\n\n    /**\n     * 金币挥洒动画回调\n     */\n    private coinSpreadCallback(): void {\n        if (this.fguiComponent.node.isValid) {\n            this.fguiComponent.node.destroy();\n            this._isCoinSpred = false;\n        }\n    }\n\n    /**\n     * 底部栏getCoin金币收集动画\n     * @param startPos\n     * @param endPos\n     * @param flyTime\n     */\n    public getCoinCollect(startPos: cc.Vec2, endPos: cc.Vec2, flyTime: number = 1): void {\n        this._coinNode.scale = 0.4;\n        this._coinNode.position = cc.v3(startPos.x, startPos.y, 0);\n\n        let randomx1 = endPos.x - startPos.x;\n\n        let randomx2 = startPos.x - endPos.x;\n\n        let randomy1 = endPos.y - startPos.y;\n\n        let randomy2 = startPos.y - endPos.y;\n\n        let q1 = cc.v2(0, 0);\n        let q2 = cc.v2(0, 0);\n        let romx = cc.misc.lerp(-100, 100, Math.random());\n\n        let romy = cc.misc.lerp(-100, 100, Math.random());\n\n        if (romx > 0) {\n            q1.x = startPos.x + romx + 160;\n        } else {\n            q1.x = startPos.x + romx - 100;\n        }\n\n        if (romy > 0) {\n            q1.y = startPos.y + romy + 400;\n        } else {\n            q1.y = startPos.y + romy + 300;\n        }\n\n        if (endPos.x > startPos.x) {\n            q2.x = q1.x + randomx1 * Math.random();\n        } else {\n            q2.x = q1.x - randomx2 * Math.random();\n        }\n\n        if (endPos.y > startPos.y) {\n            q2.y = q1.y - randomy1 * Math.random();\n        } else {\n            q2.y = q1.y + randomy2 * Math.random();\n        }\n        this._coinNode.runAction(cc.sequence(cc.delayTime(flyTime), cc.fadeOut(1 / 30)));\n        this._coinNode.runAction(\n            cc\n                .sequence(\n                    cc.bezierTo(flyTime, [q1, q2, endPos]),\n                    cc.callFunc(() => {\n                        if (this.fguiComponent.node.isValid) {\n                            this.fguiComponent.node.destroy();\n                        }\n                    })\n                )\n                .easing(cc.easeOut(1))\n        );\n    }\n}\n"]}