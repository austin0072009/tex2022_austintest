{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\fairygui-component\\lib\\FguiComponentBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport EventReporter, { EventReporterIocContainerName } from \"./analytics/EventReporter\";\nimport IocContainer from \"./IocContainer\";\nimport EmptyLogEventReporter from \"./analytics/EmptyLogEventReporter\";\nimport MessageBase from \"./MessageBase\";\nimport { AppConst } from \"../../../@slotsmaster/ui-common/lib/AppConst\";\nconst { ccclass } = cc._decorator;\n\n@ccclass\nexport default abstract class FguiComponentBase extends cc.Component {\n    protected abstract get packageResourceName(): string;\n    protected abstract get packageName(): string;\n    protected abstract get componentName(): string;\n    public _children: FguiComponentBase[] = [];\n    protected _created: boolean = false;\n    private _parent: FguiComponentBase;\n    private _allChildCreatedExecuted: boolean = false;\n    private _expectLoads: number;\n    private _currentLoads: number;\n    private _loadProcess: number;\n    private loadProcessTimer: number;\n    protected get needProcess(): boolean {\n        return false;\n    }\n    public get parent(): FguiComponentBase {\n        return this._parent;\n    }\n    public $message: MessageBase;\n    protected _fguiComponent: fgui.GComponent;\n    private _fguiX: number;\n    private _fguiY: number;\n    private _fguiWidth: number;\n    private _fguiHeight: number;\n    private _active: boolean;\n    private _fguiComponentList: FguiComponentBase[] = [];\n\n    public get active(): boolean {\n        return this._active;\n    }\n    public set active(bool: boolean) {\n        this._active = bool;\n    }\n\n    public get fguiComponentList(): FguiComponentBase[] {\n        return this._fguiComponentList;\n    }\n    public set fguiComponentList(component: FguiComponentBase[]) {\n        this._fguiComponentList = component;\n    }\n\n    public get fguiX(): number {\n        if (this._fguiComponent) {\n            this._fguiX = this._fguiComponent.x;\n        }\n        return this._fguiX;\n    }\n    public set fguiX(x: number) {\n        if (x || x == 0) {\n            if (this._fguiComponent) {\n                this._fguiComponent.x = x;\n            }\n            this._fguiX = x;\n        }\n    }\n    public get fguiY(): number {\n        if (this._fguiComponent) {\n            this._fguiY = this._fguiComponent.y;\n        }\n        return this._fguiY;\n    }\n    public set fguiY(y: number) {\n        if (y || y == 0) {\n            if (this._fguiComponent) {\n                this._fguiComponent.y = y;\n            }\n            this._fguiY = y;\n        }\n    }\n    public get fguiWidth(): number {\n        if (this._fguiComponent) {\n            this._fguiWidth = this._fguiComponent.width;\n        }\n        return this._fguiWidth;\n    }\n    public set fguiWidth(width: number) {\n        if (width || width == 0) {\n            if (this._fguiComponent) {\n                this._fguiComponent.width = width;\n            }\n            this._fguiWidth = width;\n        }\n    }\n    public get fguiHeight(): number {\n        if (this._fguiComponent) {\n            this._fguiHeight = this._fguiComponent.height;\n        }\n        return this._fguiHeight;\n    }\n    public set fguiHeight(height: number) {\n        if (height || height == 0) {\n            if (this._fguiComponent) {\n                this._fguiComponent.height = height;\n            }\n            this._fguiHeight = height;\n        }\n    }\n    public addChild(child: FguiComponentBase) {\n        if (child) {\n            child._parent = this;\n            const oldChild = this._children.find((c) => c == child);\n            if (!oldChild) {\n                this._children.push(child);\n            }\n            if (this.fguiComponent && child.fguiComponent) {\n                this.fguiComponent.addChild(child.fguiComponent);\n            }\n        }\n    }\n    public addFguiComponent<T extends FguiComponentBase>(type: { new(): T }, changeSize: boolean = true): T {\n        this._expectLoads++;\n        let component = this.node.addComponent(type);\n        this.addChild(component);\n        if (changeSize) {\n            component.fguiHeight = this.fguiHeight;\n            component.fguiWidth = this.fguiWidth;\n        }\n        let list = this.fguiComponentList;\n        list.push(component);\n        this.fguiComponentList = list;\n        return component;\n    }\n    onLoad() {\n        let self = this;\n        this._expectLoads = 0;\n        this._currentLoads = 0;\n        this._loadProcess = 0;\n        if (this.needProcess) {\n            this.schedule(this.loadProcessInternal, 0);\n        }\n\n        if (self.beforeLoadPackage(self.packageResourceName)) {//http://106.13.222.130:84/dlc/games_common/games_common\n            let bundle = cc.assetManager.getBundle(self.packageResourceName);\n            if (bundle) {\n                fgui.UIPackage.loadPackage(bundle, self.packageName, self.createComponent.bind(self));\n            }\n            else {\n                let resUrl = self.packageResourceName;\n                if (!AppConst.isEditor) {\n                    resUrl = AppConst.resUrl + self.packageResourceName\n                }\n                cc.assetManager.loadBundle(resUrl, ((err, bundle) => {\n                    fgui.UIPackage.loadPackage(bundle, self.packageName, self.createComponent.bind(self));\n                }));\n            }\n        }\n        else {\n            self.createComponent();\n        }\n    }\n    protected beforeLoadPackage(pacakgeSourceName: string): boolean {\n        return !!pacakgeSourceName;\n    }\n\n    /**\n     * Creates component\n     * @returns component\n     */\n    private createComponent(error?: any): void {\n        if (error) {\n            cc.error(`fairygui 包${this.packageResourceName}不存在 :` + error.message);\n            return;\n        }\n        if (this.beforeCreateComponent(this.packageName, this.componentName)) {\n            let obj = fgui.UIPackage.createObject(this.packageName, this.componentName);\n            if (!obj) {\n                cc.error(`包名：${this.packageName},或组件名：${this.componentName}不存在`);\n                return;\n            }\n            this.fguiComponent = obj.asCom;\n            if (this.parent) {\n                let child = this.parent.fguiComponent.getChildById(this.fguiComponent._id);\n                if (!child) {\n                    this.parent.addChild(this);\n                }\n            }\n        }\n        fgui.GRoot.inst.center();\n        this.createChildComponents();\n        this.checkAllChildCreated();\n    }\n    protected beforeCreateComponent(packageName: string, componentName: string): boolean {\n        return !!packageName && !!componentName;\n    }\n    //createChildComponents()\n    protected createChildComponents(): void { }\n\n    protected checkAllChildCreated(): void {\n        let notCreatedChild = this._children.find((c) => c._created === false);\n        if (!notCreatedChild) {\n            this._created = true;\n            if (!this._allChildCreatedExecuted) {\n                this.unschedule(this.loadProcessInternal);\n                this.allChildCreated();\n                this._allChildCreatedExecuted = true;\n                if (this.allChildCreatedCallback) {\n                    this.allChildCreatedCallback();\n                }\n            }\n            if (this.parent) {\n                this.parent.childCreatedInternal(this);\n            }\n        }\n    }\n    private childCreatedInternal(child: FguiComponentBase): void {\n        this._currentLoads++;\n        this.childCreated(child);\n        this.checkAllChildCreated();\n    }\n    protected childCreated(child: FguiComponentBase): void { }\n    protected allChildCreated(): void { }\n    private allChildCreatedCallback: Function;\n    onAllChildCreated(callback: Function): void {\n        if (this._allChildCreatedExecuted) {\n            if (callback) {\n                callback();\n            }\n        } else {\n            this.allChildCreatedCallback = callback;\n        }\n    }\n    private loadProcessInternal(): void {\n        const nextValue = Math.round(((this._currentLoads + 1) / this._expectLoads) * 100);\n        let processValue = Math.round((this._currentLoads / this._expectLoads) * 100);\n        if (processValue < this._loadProcess) {\n            processValue = this._loadProcess;\n        } else {\n            processValue += 10;\n        }\n        if (processValue >= nextValue) {\n            processValue -= 10;\n        }\n        if (processValue > this._loadProcess) {\n            this._loadProcess = processValue;\n        }\n        if (this._loadProcess >= 100) {\n            this._loadProcess = 99;\n        }\n        this.loadProcess(100, this._loadProcess, this._loadProcess);\n    }\n    protected loadProcess(expectValue: number, currentValue: number, process: number): void { }\n    public get fguiComponent(): fgui.GComponent {\n        return this._fguiComponent;\n    }\n    public set fguiComponent(value: fgui.GComponent) {\n        this._fguiComponent = value;\n        if (value) {\n            if (this._fguiX) {\n                this.fguiX = this._fguiX;\n            }\n            if (this._fguiY) {\n                this.fguiY = this._fguiY;\n            }\n            if (this._fguiWidth) {\n                this.fguiWidth = this._fguiWidth;\n            }\n            if (this._fguiHeight) {\n                this.fguiHeight = this._fguiHeight;\n            }\n        }\n    }\n    /**\n     * 根据名称获取子组件\n     * @param name 属性名称,比如\"a.b.c\",其中a可以是fgui.GComponent\n     */\n    public getChildAdvance(name: string): fgui.GComponent | cc.Node {\n        let names = name.split(\".\");\n        let parent: fgui.GComponent | cc.Node = this._fguiComponent;\n        let child: fgui.GComponent | cc.Node;\n        let isFgui: boolean = true;\n        for (let i = 0; i < names.length; i++) {\n            let childName = names[i];\n            if (isFgui) {\n                const childObject = ((parent as any) as fgui.GComponent).getChild(childName);\n                if (childObject) {\n                    child = childObject.asCom;\n                } else {\n                    parent = ((parent as any) as fgui.GComponent).node;\n                    isFgui = false;\n                }\n            }\n            if (!isFgui) {\n                child = ((parent as any) as cc.Node).getChildByName(childName);\n                if (!child) {\n                    cc.error(`属性${childName}不存在`);\n                    return null;\n                }\n            }\n            parent = child;\n        }\n        return child;\n    }\n    public getCCChild(node: cc.Node, name: string): cc.Node {\n        let names = name.split(\".\");\n        let child = node;\n        for (let i = 0; i < names.length; i++) {\n            const childName = names[i];\n            child = child.getChildByName(childName);\n            if (!child) {\n                cc.error(`cc组件不存在${childName}`);\n                return null;\n            }\n        }\n        return child;\n    }\n    public getChild(name: string): fgui.GComponent {\n        let names = name.split(\".\");\n        let child = this._fguiComponent;\n        for (let i = 0; i < names.length; i++) {\n            let childName = names[i];\n            const component = child.getChild(childName);\n            if (!component) {\n                cc.error(`属性${childName}不存在`);\n                return null;\n            }\n            child = component.asCom;\n        }\n        return child;\n    }\n    public setControllerProperty(name: string, value: number) {\n        if (!this._fguiComponent) {\n            return;\n        }\n        let names = name.split(\".\");\n        const propertyName = names[names.length - 1];\n        let child = this._fguiComponent;\n        if (names.length > 1) {\n            const theNameWithoutPropertyName = name.replace(\".\" + propertyName, \"\");\n            child = this.getChild(theNameWithoutPropertyName);\n            if (!child) {\n                cc.error(`属性${name}不存在`);\n            }\n        }\n        const controller = child.controllers.find((c) => c.name == propertyName);\n        if (!controller) {\n            cc.error(`控制器${propertyName}不存在`);\n            return;\n        }\n        controller.selectedIndex = value;\n    }\n    public getControllerProperty(name: string): number {\n        if (!this._fguiComponent) {\n            return null;\n        }\n        let names = name.split(\".\");\n        const propertyName = names[names.length - 1];\n        let child = this._fguiComponent;\n        if (names.length > 1) {\n            const theNameWithoutPropertyName = name.replace(\".\" + propertyName, \"\");\n            child = this.getChild(theNameWithoutPropertyName);\n            if (!child) {\n                cc.error(`属性${name}不存在`);\n            }\n        }\n        const controller = child.controllers.find((c) => c.name == propertyName);\n        if (!controller) {\n            cc.error(`控制器${propertyName}不存在`);\n            return;\n        }\n        return controller.selectedIndex;\n    }\n    protected isSubclassOf(source: any, target: any): boolean {\n        if (!source || !target) {\n            return false;\n        }\n        if (target.name == source.name) {\n            return true;\n        }\n        let targetAny = target as any;\n        targetAny = targetAny.$super;\n        let result: boolean = false;\n        while (targetAny) {\n            result = targetAny.name == source.name;\n            if (result) {\n                break;\n            }\n            targetAny = targetAny.$super;\n        }\n        return result;\n    }\n    //#region 埋点\n    private _logEventReporter: EventReporter;\n    protected get logEventReporter(): EventReporter {\n        if (this._logEventReporter == null && IocContainer.container.isBound(EventReporterIocContainerName)) {\n            this._logEventReporter = IocContainer.container.get<EventReporter>(EventReporterIocContainerName);\n        }\n        if (this._logEventReporter == null) {\n            return EmptyLogEventReporter.instance;\n        }\n        return this._logEventReporter;\n    }\n    //#endregion\n}\n\nexport abstract class FguiWindow extends FguiComponentBase {\n    private _window: fgui.Window;\n    protected createChildComponents(): void {\n        this.fguiComponent.makeFullScreen();\n        this._window = new fgui.Window();\n        this._window.contentPane = this.fguiComponent;\n    }\n    get window(): fgui.Window {\n        return this._window;\n    }\n}\n"]}