{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\TurningWaitingResultsConfig.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SymbolSpinType } from \"./SymbolSpinType\";\nimport { IResilienceMove } from \"./IResilienceMove\";\n\nexport default class TurningWaitingResultsConfig {\n    /**\n     * 正常转动时的棋子转动方式\n     */\n    private _spinType: SymbolSpinType = SymbolSpinType.Column;\n    /**\n     * respin时棋子的转动方式\n     */\n    private _respinType: SymbolSpinType = SymbolSpinType.Cell;\n    /**\n     * 启动回弹开始\n     */\n    private _startUpResilience: IResilienceMove = null;\n    /**\n     * 启动回弹\n     */\n    private _startDownResilience: IResilienceMove = null;\n    /**\n     * 结束回弹开始\n     */\n    private _endDownResilience: IResilienceMove = null;\n    /**\n     * 结束回弹结束\n     */\n    private _endUpResilience: IResilienceMove = null;\n    /**\n     * 定时间隔时长，单位毫秒\n     */\n    private _interval: number = 0;\n    /**\n     * 转动速度\n     */\n    private _step: number = 20;\n    /**\n     * holdwin转动速度\n     */\n    private _holdWinStep: number = 40;\n    /**\n     * 停止转动的速度\n     */\n    private _stopStep: number = 30;\n    /**\n     * 人工停止转动的速度，如果为0则表示立即停止\n     */\n    private _manualStopStep: number = 120;\n    /**\n     * 如果没有主动按stop，自动停止的时长\n     */\n    private _autoStopTimeout: number = 3000;\n    /**\n     * holdWin时没有主动按stop，自动停止的时长\n     */\n    private _holdWinStopTimeout: number = 1000;\n    /**\n     * Skip hold win of turning waiting results config\n     * 手动停止的时候是否跳过后面的holdwin\n     */\n    private _skipHoldWin: boolean = true;\n    /**\n     * 每列棋子数（注意包含用于转动的隐藏棋子）\n     */\n    private _cellAmountInColumns: number[] = [];\n    /**\n     * 每列之间的启动间隔时长，如果为空则表示同时启动\n     */\n    private _startIntervalEachColumn: number[] = [];\n    /**\n     * 每列之间的停止间隔时长，如果为空则表示同时停止\n     */\n    private _stopIntervalEachColumn: number[] = [];\n    /**\n     * 手工停止时每列之间的停止间隔时长，如果为空则表示同时停止\n     */\n    private _manualStopIntervalEachColumn: number[] = [];\n    /**\n     * Stop interval each cell of turning waiting results config\n     * respin时，每个格子停止的间隔时长，这个时长是相对于第一个格子的\n     */\n    private _stopIntervalEachCell: number[] = [];\n    /**\n     * Stop interval in respin cell of turning waiting results config\n     * 在respin中每个格子停止需要的时长\n     */\n    private _stopIntervalInRespinCell: number;\n    constructor() {}\n\n    public get startUpResilience(): IResilienceMove {\n        return this._startUpResilience;\n    }\n    public set startUpResilience(value: IResilienceMove) {\n        this._startUpResilience = value;\n    }\n    public get startDownResilience(): IResilienceMove {\n        return this._startDownResilience;\n    }\n    public set startDownResilience(value: IResilienceMove) {\n        this._startDownResilience = value;\n    }\n    public get endDownResilience(): IResilienceMove {\n        return this._endDownResilience;\n    }\n    public set endDownResilience(value: IResilienceMove) {\n        this._endDownResilience = value;\n    }\n    public get endUpResilience(): IResilienceMove {\n        return this._endUpResilience;\n    }\n    public set endUpResilience(value: IResilienceMove) {\n        this._endUpResilience = value;\n    }\n    public get interval(): number {\n        return this._interval;\n    }\n    public set interval(value: number) {\n        this._interval = value;\n    }\n    public get cellAmountInColumns(): number[] {\n        return this._cellAmountInColumns;\n    }\n    public set cellAmountInColumns(value: number[]) {\n        this._cellAmountInColumns = value;\n    }\n    public get spinType(): SymbolSpinType {\n        return this._spinType;\n    }\n    public set spinType(value: SymbolSpinType) {\n        this._spinType = value;\n    }\n    public get respinType(): SymbolSpinType {\n        return this._respinType;\n    }\n    public set respinType(value: SymbolSpinType) {\n        this._respinType = value;\n    }\n    public get startIntervalEachColumn(): number[] {\n        return this._startIntervalEachColumn;\n    }\n    public set startIntervalEachColumn(value: number[]) {\n        this._startIntervalEachColumn = value;\n    }\n    public get stopIntervalEachColumn(): number[] {\n        return this._stopIntervalEachColumn;\n    }\n    public set stopIntervalEachColumn(value: number[]) {\n        this._stopIntervalEachColumn = value;\n        if (!this._stopIntervalEachColumn) {\n            this._stopIntervalEachColumn = [];\n        }\n    }\n    public get manualStopIntervalEachColumn(): number[] {\n        return this._manualStopIntervalEachColumn;\n    }\n    public set manualStopIntervalEachColumn(value: number[]) {\n        this._manualStopIntervalEachColumn = value;\n        if (!this._manualStopIntervalEachColumn) {\n            this._manualStopIntervalEachColumn = [];\n        }\n    }\n    public get stopIntervalEachCell(): number[] {\n        return this._stopIntervalEachCell;\n    }\n    public set stopIntervalEachCell(value: number[]) {\n        this._stopIntervalEachCell = value;\n    }\n    public get stopIntervalInRespinCell(): number {\n        return this._stopIntervalInRespinCell;\n    }\n    public set stopIntervalInRespinCell(value: number) {\n        this._stopIntervalInRespinCell = value;\n    }\n    public get step(): number {\n        return this._step;\n    }\n    public set step(value: number) {\n        this._step = value;\n    }\n    public get holdWinStep(): number {\n        return this._holdWinStep;\n    }\n    public set holdWinStep(value: number) {\n        this._holdWinStep = value;\n    }\n    public get stopStep(): number {\n        return this._stopStep;\n    }\n    public set stopStep(value: number) {\n        this._stopStep = value;\n    }\n    public get manualStopStep(): number {\n        return this._manualStopStep;\n    }\n    public set manualStopStep(value: number) {\n        this._manualStopStep = value;\n    }\n    public get autoStopTimeout(): number {\n        return this._autoStopTimeout;\n    }\n    public set autoStopTimeout(value: number) {\n        this._autoStopTimeout = value;\n    }\n    public get holdWinStopTimeout(): number {\n        return this._holdWinStopTimeout;\n    }\n    public set holdWinStopTimeout(value: number) {\n        this._holdWinStopTimeout = value;\n    }\n    public get skipHoldWin(): boolean {\n        return this._skipHoldWin;\n    }\n    public set skipHoldWin(value: boolean) {\n        this._skipHoldWin = value;\n    }\n}\n"]}