{"version":3,"sources":["assets\\Script\\modules\\spin-result\\SpinResultsSlot.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","__importDefault","mod","__esModule","exports","value","SpinResultsColumn_1","require","SpinResultsSymbol_1","SpinResultsEvent_1","class_transformer_1","SpinResultsGameMode_1","SpinResultsWheel_1","SpinResultsConst_1","SpinResultsCell_1","class_transformer_2","SpinResultsSlot","columns","matchedLines","ofAKind","_columns","_matchedLines","_ofAKind","_events","_extraChesses","_replaceCodes","_symbolEvents","_gameMode","SpinResultsGameMode","Normal","_nextGameMode","getReplaceCodes","times","replaceCodes","codes","maxCount","col","reel","row","cells","replaceCode","NO_MOCK_CODE","cell","mockCodes","push","updateCell","column","code","assets","fixed","extraCode","extraAssets","extraPosition","wheel","events","updateCellAssets","updateCellFixed","updateCellExtraCode","updateCellWheel","values","finalValue","updateCellEvents","updateChangeCodeMockCodes","hand","columnSize","rowSize","Math","floor","curCode","preCode","updateMockCodes","currentHand","previousHand","Array","isArray","currentCode","previousCode","mockCode","updateColumnHoldWin","isHoldWin","updateCells","init","reels","position","_wheels","Type","prototype","Expose","Number","Exclude"],"mappings":"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","sourceRoot":"/","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SpinResultsColumn_1 = __importDefault(require(\"./SpinResultsColumn\"));\nconst SpinResultsSymbol_1 = __importDefault(require(\"./SpinResultsSymbol\"));\nconst SpinResultsEvent_1 = __importDefault(require(\"./SpinResultsEvent\"));\nconst class_transformer_1 = require(\"class-transformer\");\nconst SpinResultsGameMode_1 = require(\"./SpinResultsGameMode\");\nconst SpinResultsWheel_1 = __importDefault(require(\"./SpinResultsWheel\"));\nconst SpinResultsConst_1 = __importDefault(require(\"./SpinResultsConst\"));\nconst SpinResultsCell_1 = __importDefault(require(\"./SpinResultsCell\"));\nconst class_transformer_2 = require(\"class-transformer\");\nlet SpinResultsSlot = class SpinResultsSlot {\n    constructor(columns, matchedLines, ofAKind) {\n        this._columns = [];\n        this._matchedLines = [];\n        this._ofAKind = 0;\n        this._events = [];\n        this._extraChesses = [];\n        this._replaceCodes = [];\n        this._symbolEvents = [];\n        this.columns = columns;\n        this.ofAKind = ofAKind;\n        this._gameMode = SpinResultsGameMode_1.SpinResultsGameMode.Normal;\n        this._nextGameMode = SpinResultsGameMode_1.SpinResultsGameMode.Normal;\n    }\n    /**\n     * 获取列结果集\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * 设置列结果集\n     */\n    set columns(value) {\n        if (!value) {\n            this._columns = [];\n            return;\n        }\n        this._columns = value;\n        this._replaceCodes = this.getReplaceCodes();\n    }\n    /**\n     * 获取连线数据\n     */\n    get matchedLines() {\n        return this._matchedLines;\n    }\n    /**\n     * 设置连线数据\n     */\n    set matchedLines(value) {\n        this._matchedLines = value;\n        if (!this._matchedLines) {\n            this._matchedLines = [];\n        }\n    }\n    /**\n     * 获取5、6、7连\n     */\n    get ofAKind() {\n        return this._ofAKind;\n    }\n    /**\n     * 设置5、6、7连\n     */\n    set ofAKind(value) {\n        this._ofAKind = value;\n    }\n    get extraChesses() {\n        return this._extraChesses;\n    }\n    set extraChesses(value) {\n        this._extraChesses = value;\n        if (!this._extraChesses) {\n            this._extraChesses = [];\n        }\n    }\n    get events() {\n        return this._events;\n    }\n    set events(value) {\n        this._events = value;\n        if (!this._events) {\n            this._events = [];\n        }\n    }\n    get gameMode() {\n        return this._gameMode;\n    }\n    set gameMode(value) {\n        this._gameMode = value;\n    }\n    get nextGameMode() {\n        return this._nextGameMode;\n    }\n    set nextGameMode(value) {\n        this._nextGameMode = value;\n    }\n    get wheels() {\n        return this._wheels;\n    }\n    set wheels(value) {\n        this._wheels = value;\n        if (!this._wheels) {\n            this._wheels = [];\n        }\n    }\n    get replaceCodes() {\n        return this._replaceCodes;\n    }\n    /**\n     * Gets whether has matched lines\n     * 是否有连线\n     */\n    get hasMatchedLines() {\n        return this.matchedLines && this.matchedLines.length > 0;\n    }\n    get hasReplaceCodes() {\n        return (this.replaceCodes && this.replaceCodes.length > 0 && this.replaceCodes[0] && this.replaceCodes[0].length > 0);\n    }\n    getReplaceCodes() {\n        let times = 1;\n        const replaceCodes = [];\n        while (true) {\n            let codes = [];\n            let maxCount = 0;\n            for (let col = 0; col < this.columns.length; col++) {\n                const reel = this.columns[col];\n                for (let row = 0; row < reel.cells.length; row++) {\n                    let replaceCode = SpinResultsConst_1.default.NO_MOCK_CODE;\n                    let replaceCodes = reel.replaceCodes[row];\n                    if (!replaceCodes || replaceCodes.length == 0) {\n                        replaceCode = SpinResultsConst_1.default.NO_MOCK_CODE;\n                    }\n                    else {\n                        replaceCode = replaceCodes[times - 1];\n                        if (replaceCode == null) {\n                            replaceCode = SpinResultsConst_1.default.NO_MOCK_CODE;\n                        }\n                    }\n                    const cell = reel.cells[row];\n                    if (cell.mockCodes) {\n                        if (maxCount < cell.mockCodes.length) {\n                            maxCount = cell.mockCodes.length;\n                        }\n                    }\n                    codes.push(replaceCode);\n                }\n            }\n            if (maxCount < times) {\n                break;\n            }\n            times++;\n            replaceCodes.push(codes);\n        }\n        return replaceCodes;\n    }\n    /**\n     * 更新cell数据\n     *\n     * @param {number} column 列号\n     * @param {number} row 行号\n     * @param {number} code 棋子编码\n     * @param {number} [assets=0] 资产值\n     * @param {boolean} [fixed=false] 是否固定\n     * @param {number} [extraCode=-1] 额外棋子编码\n     * @param {number} [extraAssets=-1] 额外棋子资产\n     * @param {number} [extraPosition=-1] 额外棋子位置\n     * @param {SpinResultsWheel} [wheel=null] 转盘数据，比如大章鱼选择框\n     * @param {SpinResultsEvent[]} [events=[]] 事件\n     * @memberof SpinResults\n     */\n    updateCell(column, row, code, assets = 0, mockCodes = [], fixed = false, extraCode = -1, extraAssets = -1, extraPosition = -1, wheel = null, events = []) {\n        this._columns[column].cells[row] = new SpinResultsCell_1.default(code, fixed, mockCodes, assets, extraCode, extraAssets, extraPosition, wheel, events);\n    }\n    /**\n     * 更新格子资产\n     *\n     * @param {number} column 列号\n     * @param {number} row 行号\n     * @param {number} assets 资产值\n     * @memberof SpinResultsSlot\n     */\n    updateCellAssets(column, row, assets) {\n        this._columns[column].cells[row].assets = assets;\n    }\n    /**\n     * 更新格子固定标记\n     *\n     * @param {number} column 列号\n     * @param {number} row 行号\n     * @param {boolean} fixed 是否固定\n     * @memberof SpinResultsSlot\n     */\n    updateCellFixed(column, row, fixed) {\n        this._columns[column].cells[row].fixed = fixed;\n    }\n    /**\n     * 更新格子额外棋子相关数据\n     *\n     * @param {number} column 列号\n     * @param {number} row 行号\n     * @param {number} extraCode 额外棋子编码\n     * @param {number} [extraAssets=-1] 额外棋子资产\n     * @param {number} [extraPosition=-1] 额外棋子位置\n     * @memberof SpinResultsSlot\n     */\n    updateCellExtraCode(column, row, extraCode, extraAssets = -1, extraPosition = -1) {\n        this._columns[column].cells[row].extraCode = extraCode;\n        this._columns[column].cells[row].extraAssets = extraAssets;\n        this._columns[column].cells[row].extraPosition = extraPosition;\n    }\n    /**\n     * 更新格子转盘数据\n     * - 比如海洋关的大章鱼棋子，让用户选择，结果已经预定，相当于转盘\n     *\n     * @param {number} column 列号\n     * @param {number} row 行号\n     * @param {SpinResultsWheel} wheel 转盘数据\n     * @memberof SpinResultsSlot\n     */\n    updateCellWheel(column, row, values, finalValue) {\n        this._columns[column].cells[row].wheel = new SpinResultsWheel_1.default(values, finalValue);\n    }\n    /**\n     * 更新格子事件\n     *\n     * @param {number} column 列号\n     * @param {number} row 行号\n     * @param {SpinResultsEvent[]} events 事件\n     * @memberof SpinResultsSlot\n     */\n    updateCellEvents(column, row, events) {\n        this._columns[column].cells[row].events = events;\n    }\n    /**\n     * 更新发生变化的棋子的mockCodes值，同时更新code值\n     *\n     * @param {number[]} hand 更新的手牌数据，变化的棋子位置才有值，没变化的棋子值为-1\n     * @param {number} columnSize 列数\n     * @param {number} rowSize 行数\n     * @memberof SpinResults\n     */\n    updateChangeCodeMockCodes(hand, columnSize, rowSize) {\n        for (let i = 0; i < hand.length; ++i) {\n            const code = hand[i];\n            const column = Math.floor(i / rowSize);\n            const row = i % rowSize;\n            let curCode = code === -1 ? this._columns[column].cells[row].code : code;\n            let preCode = code === -1 ? code : this._columns[column].cells[row].code;\n            this._columns[column].cells[row].mockCodes.push(preCode);\n            this._columns[column].cells[row].code = curCode;\n        }\n    }\n    /**\n     * 更新mockCodes值，同时更新code值\n     *\n     * @param {number[]} currentHand 当前手牌数据\n     * @param {number[]} previousHand 之前的手牌数据\n     * @param {number} columnSize 列数\n     * @param {number} rowSize 行数\n     * @memberof SpinResults\n     */\n    updateMockCodes(currentHand, previousHand, columnSize, rowSize) {\n        // 判断参数合法性\n        if (!Array.isArray(currentHand) || !Array.isArray(previousHand) || currentHand.length !== previousHand.length) {\n            return;\n        }\n        // 比较手牌中每个值，如果相同，填-1；如果不同，填previousHand中对应的值\n        for (let i = 0; i < currentHand.length; ++i) {\n            const currentCode = currentHand[i];\n            const previousCode = previousHand[i];\n            const mockCode = currentCode !== previousCode ? previousCode : -1;\n            const column = Math.floor(i / rowSize);\n            const row = i % rowSize;\n            this._columns[column].cells[row].mockCodes.push(mockCode);\n            this._columns[column].cells[row].code = currentCode;\n        }\n    }\n    /**\n     * 更新列的isHoldWin\n     *\n     * @param {number} column 列号\n     * @param {boolean} isHoldWin 是否hold win\n     * @memberof SpinResults\n     */\n    updateColumnHoldWin(column, isHoldWin) {\n        this._columns[column].isHoldWin = isHoldWin;\n    }\n    /**\n     * 更新格子code\n     *\n     * @param {number[]} hand 手牌数据\n     * @param {number} rowSize 棋盘行数\n     * @memberof SpinResultsSlot\n     */\n    updateCells(hand, rowSize) {\n        for (let i = 0; i < hand.length; ++i) {\n            const code = hand[i];\n            const column = Math.floor(i / rowSize);\n            const row = i % rowSize;\n            this._columns[column].cells[row].code = code;\n        }\n    }\n    /**\n     * 初始化SpinResultSlot\n     *\n     * @param {number[]} hand 手牌\n     * @param {number} columnSize 列数\n     * @param {number} rowSize 行数\n     * @memberof SpinResultsSlot\n     */\n    init(hand, columnSize, rowSize) {\n        let reels = [];\n        for (let col = 0; col < columnSize; ++col) {\n            let cells = [];\n            for (let row = 0; row < rowSize; ++row) {\n                const position = col * rowSize + row;\n                const code = hand[position];\n                const cell = new SpinResultsCell_1.default(code, false, [], 0, -1, -1, -1, null, []);\n                cells.push(cell);\n            }\n            const reel = new SpinResultsColumn_1.default(cells, false);\n            reels.push(reel);\n        }\n        this.columns = reels;\n    }\n};\n__decorate([\n    class_transformer_1.Type(() => SpinResultsColumn_1.default),\n    __metadata(\"design:type\", Array)\n], SpinResultsSlot.prototype, \"_columns\", void 0);\n__decorate([\n    class_transformer_1.Type(() => SpinResultsEvent_1.default),\n    __metadata(\"design:type\", Array)\n], SpinResultsSlot.prototype, \"_events\", void 0);\n__decorate([\n    class_transformer_1.Type(() => SpinResultsSymbol_1.default),\n    __metadata(\"design:type\", Array)\n], SpinResultsSlot.prototype, \"_extraChesses\", void 0);\n__decorate([\n    class_transformer_1.Type(() => SpinResultsWheel_1.default),\n    __metadata(\"design:type\", Array)\n], SpinResultsSlot.prototype, \"_wheels\", void 0);\n__decorate([\n    class_transformer_1.Type(() => SpinResultsColumn_1.default),\n    class_transformer_2.Expose(),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [Array])\n], SpinResultsSlot.prototype, \"columns\", null);\n__decorate([\n    class_transformer_2.Expose(),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [Array])\n], SpinResultsSlot.prototype, \"matchedLines\", null);\n__decorate([\n    class_transformer_2.Expose(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Number])\n], SpinResultsSlot.prototype, \"ofAKind\", null);\n__decorate([\n    class_transformer_1.Type(() => SpinResultsSymbol_1.default),\n    class_transformer_2.Expose(),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [Array])\n], SpinResultsSlot.prototype, \"extraChesses\", null);\n__decorate([\n    class_transformer_1.Type(() => SpinResultsEvent_1.default),\n    class_transformer_2.Expose(),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [Array])\n], SpinResultsSlot.prototype, \"events\", null);\n__decorate([\n    class_transformer_2.Expose(),\n    class_transformer_1.Type(() => SpinResultsWheel_1.default),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [Array])\n], SpinResultsSlot.prototype, \"wheels\", null);\nSpinResultsSlot = __decorate([\n    class_transformer_2.Exclude(),\n    __metadata(\"design:paramtypes\", [Array, Array, Number])\n], SpinResultsSlot);\nexports.default = SpinResultsSlot;\n"]}