{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\SymbolBoard\\SymbolBoardBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ReelBase from \"./ReelBase\";\nimport MaskBase from \"../MaskBase\";\nimport HoldWinBase from \"./HoldWinBase\";\nimport IWaitingResultsStrategy from \"../IWaitingResultsStrategy\";\nimport SymbolBoard from \"./SymbolBoard\";\nimport { SymbolBoardEvent } from \"./SymbolBoardEvent\";\nimport ReplaceSymbol from \"./ReplaceSymbol\";\nimport IPrizeShowStrategy from \"../IPrizeShowStrategy\";\nimport IPrizeShowSymbolBoard from \"../IPrizeShowSymbolBoard\";\n\nimport SlotGameStageBase from \"../GameStage/SlotGameStageBase\";\nimport { PrizeShowStatus } from \"../PrizeShowStatus\";\nimport { MogafaSlots } from \"../MogafaSlots\";\nimport { SymbolBoardStatus } from \"./SymbolBoardStatus\";\nimport { SlotGameStageStatus } from \"../GameStage/SlotGameStageStatus\";\nimport NumberOfKindBase from \"../Common/NumberOfKindBase\";\nimport { IResilienceMove } from \"../IResilienceMove\";\nimport FguiFullScreenBase from \"../../../fairygui-component/lib/FguiFullScreenBase\";\nimport FguiComponentBase from \"../../../fairygui-component/lib/FguiComponentBase\";\nimport NumberUtils from \"../../../utils/lib/NumberUtils\";\nimport SpinResultsSlot from \"../../../../spin-result/SpinResultsSlot\";\nimport { SpinResultsGameMode } from \"../../../../spin-result/SpinResultsGameMode\";\nimport SpinResultsEvent from \"../../../../spin-result/SpinResultsEvent\";\nimport SpinResultsSymbol from \"../../../../spin-result/SpinResultsSymbol\";\nimport SpinResultsWheel from \"../../../../spin-result/SpinResultsWheel\";\nimport SpinResultConst from \"../../../../spin-result/SpinResultsConst\";\nimport { SpinResultsEventCode } from \"../../../../spin-result/SpinResultsEventCode\";\nimport ViewBase from \"../../../../../BaseFrame/ViewBase\";\n\n//#region prizeshow相关类\nclass PrizeShowSymbol {\n    private _position: number;\n    private _finishedTimes: number;\n    private _expectedTimes: number;\n    constructor(position: number, expectedTimes: number) {\n        this._position = position;\n        this._expectedTimes = expectedTimes;\n        this._finishedTimes = 0;\n    }\n    public get position(): number {\n        return this._position;\n    }\n    public get expectedTimes(): number {\n        return this._expectedTimes;\n    }\n    public get finishedTimes(): number {\n        return this._finishedTimes;\n    }\n    public finishedOnce(): boolean {\n        this._finishedTimes++;\n        return this._finishedTimes >= this._expectedTimes;\n    }\n}\nclass PrizeShowLine {\n    private _symbols: PrizeShowSymbol[] = [];\n    private _positions: number[] = [];\n    private _finishedTimes: number;\n    private _expectedTimes: number;\n    constructor(symbol: PrizeShowSymbol[], expectedTimes: number) {\n        this._symbols = symbol;\n        this._expectedTimes = expectedTimes;\n        this._finishedTimes = 0;\n        if (!this._symbols) {\n            this._symbols = [];\n        }\n        this._positions = [];\n        for (let i = 0; i < this._symbols.length; i++) {\n            const symbol = this._symbols[i];\n            this._positions.push(symbol.position);\n        }\n    }\n    public get symbol(): PrizeShowSymbol[] {\n        return this._symbols;\n    }\n    public get positions(): number[] {\n        return this._positions;\n    }\n    public get expectedTimes(): number {\n        return this._expectedTimes;\n    }\n    public get finishedTimes(): number {\n        return this._finishedTimes;\n    }\n    public finishedOnce(): boolean {\n        this._finishedTimes++;\n        return this._finishedTimes >= this._expectedTimes;\n    }\n}\nclass PrizeShowCellReward {\n    private _position: number;\n    private _symbolCode: number;\n    private _assets: number;\n    private _finished: boolean = false;\n    constructor(position: number, symbolCode: number, assets: number) {\n        this._position = position;\n        this._symbolCode = symbolCode;\n    }\n    public get position(): number {\n        return this._position;\n    }\n    public get symbolCode(): number {\n        return this._symbolCode;\n    }\n    public get assets(): number {\n        return this._assets;\n    }\n    public finish(): void {\n        this._finished = true;\n    }\n}\nclass PrizeShow {\n    private _lines: PrizeShowLine[] = [];\n    private _chipAssets: PrizeShowCellReward[] = [];\n    private _jackpotAssets: PrizeShowCellReward[] = [];\n\n    constructor(lines: PrizeShowLine[], chipAssets: PrizeShowCellReward[], jackpotAssets: PrizeShowCellReward[]) {\n        this._lines = lines;\n        if (!this._lines) {\n            this._lines = [];\n        }\n        this._chipAssets = chipAssets;\n        if (!this._chipAssets) {\n            this._chipAssets = [];\n        }\n        this._jackpotAssets = jackpotAssets;\n        if (!this._jackpotAssets) {\n            this._jackpotAssets = [];\n        }\n    }\n\n    public get lines(): PrizeShowLine[] {\n        return this._lines;\n    }\n\n    public get chipAssets(): PrizeShowCellReward[] {\n        return this._chipAssets;\n    }\n    public get jackpotAssets(): PrizeShowCellReward[] {\n        return this._jackpotAssets;\n    }\n    public getAllSymbols(): PrizeShowSymbol[] {\n        const symbols: PrizeShowSymbol[] = [];\n        if (!this._lines || this._lines.length == 0) {\n            return symbols;\n        }\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            for (let j = 0; j < line.symbol.length; j++) {\n                const showSymbol = line.symbol[j];\n                const symbol = symbols.find((c) => c.position == showSymbol.position);\n                if (!symbol) {\n                    symbols.push(showSymbol);\n                }\n            }\n        }\n        return symbols;\n    }\n}\n//#endregion\nexport default abstract class SymbolBoardBase extends FguiFullScreenBase\n    implements SymbolBoard, IPrizeShowSymbolBoard, MogafaSlots {\n    public static className: string = \"SymbolBoardBase\";\n    public lineIndex = 0\n    /**\n     * 关卡编码\n     */\n    private $stageCode: string;\n    /**\n     * ofKind连线弹框\n     */\n    protected ofKind: NumberOfKindBase;\n    /**\n     * ofKind连线数字\n     */\n    private _ofKindNumber: number;\n    /**\n     * 获取关卡编码\n     */\n    get stageCode(): string {\n        return this.$stageCode;\n    }\n    /**\n     * 设置关卡编码\n     */\n    set stageCode(value: string) {\n        console.log(\"set stageCode\")\n        this.$stageCode = value;\n        for (let i = 0; i < this._reels.length; i++) {\n            this._reels[i].stageCode = value;\n        }\n        for (let i = 0; i < this._holdWins.length; i++) {\n            this._holdWins[i].stageCode = value;\n        }\n    }\n\n    private $defaultSlot: SpinResultsSlot;\n    get defaultSlot(): SpinResultsSlot {\n        return this.$defaultSlot;\n    }\n    set defaultSlot(val: SpinResultsSlot) {\n        this.$defaultSlot = val;\n        let codes: number[][] = this.$defaultSlot.columns.map((item, index) => {\n            return item.cells\n                .map((item1) => {\n                    return item1.code;\n                })\n                .reverse();\n        });\n        let assets: number[][] = this.$defaultSlot.columns.map((item, index) => {\n            return item.cells\n                .map((item1) => {\n                    return item1.assets;\n                })\n                .reverse();\n        });\n        for (let i = 0; i < codes.length; i++) {\n            this.setFinalResultsImmediately(i, codes[i], assets[i]);\n        }\n    }\n\n    /**\n     * Status  of symbol base\n     * 棋子状态\n     */\n    public $status: SymbolBoardStatus;\n    get status(): SymbolBoardStatus {\n        return this.$status;\n    }\n    set status(value: SymbolBoardStatus) {\n       // console.log(\"SymbolBoardStatus===status==\", value)\n        this.$status = value;\n        for (let i = 0; i < this._reels.length; i++) {\n            this._reels[i].boardStatus = value;\n        }\n        for (let i = 0; i < this._holdWins.length; i++) {\n            this._holdWins[i].boardStatus = value;\n        }\n        if (value == SymbolBoardStatus.Stopped || value == SymbolBoardStatus.Replacing) {\n            if (this.needProcessEvents) {\n                this.$status = SymbolBoardStatus.Replacing;\n                this.replaceMockCodesInternal();\n            } else if (this.hasMatchedLines) {\n                this.$status = SymbolBoardStatus.PrizeShowing;\n                this.startPrizeShow();\n            } else if (\n                (this.hasChipCellRewards || this.hasJackpotCellRewards) &&\n                SlotGameStageBase.spinResults.gameMode == SpinResultsGameMode.Respin &&\n                SlotGameStageBase.spinResults.nextGameMode != SpinResultsGameMode.Respin\n            ) {\n                this.$status = SymbolBoardStatus.Settling;\n                this.startPrizeSettle();\n            } else {\n                this.$status = SymbolBoardStatus.Ready;\n            }\n        }\n        if (value == SymbolBoardStatus.PrizeShowing) {\n            if (this.hasMatchedLines) {\n                this.$status = SymbolBoardStatus.PrizeShowing;\n                this.startPrizeShow();\n            } else if (\n                (this.hasChipCellRewards || this.hasJackpotCellRewards) &&\n                SlotGameStageBase.spinResults.gameMode == SpinResultsGameMode.Respin &&\n                SlotGameStageBase.spinResults.nextGameMode != SpinResultsGameMode.Respin\n            ) {\n                this.$status = SymbolBoardStatus.Settling;\n                this.startPrizeSettle();\n            } else {\n                this.$status = SymbolBoardStatus.Ready;\n            }\n        }\n        if (value == SymbolBoardStatus.Settling) {\n            if (this.hasChipCellRewards || this.hasJackpotCellRewards) {\n                if (SlotGameStageBase.spinResults.gameMode == SpinResultsGameMode.Normal) {\n                    this.$status = SymbolBoardStatus.Ready;\n                } else {\n                    this.startPrizeSettle();\n                }\n            } else {\n                this.$status = SymbolBoardStatus.Ready;\n            }\n        }\n        if (this.$status == SymbolBoardStatus.Ready) {\n            //this.reset();\n        }\n        this.StatusChanged()\n        // this.gameStage.receiveSymbolBoardStatusChanged(this._index, this.$status);\n    }\n    protected StatusChanged() { }\n    canBeNextStatus(gameStageStatus: SlotGameStageStatus): boolean {\n        let yes: boolean = true;\n        switch (gameStageStatus) {\n            case SlotGameStageStatus.Ready:\n            case SlotGameStageStatus.RequestingServer:\n            case SlotGameStageStatus.WaitingServerResults:\n                yes = false;\n                break;\n            case SlotGameStageStatus.ServerResultsReceived: //下一状态为replacing\n                yes = this.status > SymbolBoardStatus.Spinning || this.status == SymbolBoardStatus.Ready;\n                break;\n            case SlotGameStageStatus.BoardsSpinning:\n                yes = this.status > SymbolBoardStatus.Stopped || this.status == SymbolBoardStatus.Ready;\n                break;\n            case SlotGameStageStatus.BoardsReplacing: //下一状态为prizeshowing\n                yes = this.status > SymbolBoardStatus.Replacing || this.status == SymbolBoardStatus.Ready;\n                break;\n            case SlotGameStageStatus.BoardsPrizeShowing: //下一状态为setting\n                yes = this.status > SymbolBoardStatus.PrizeShowing || this.status == SymbolBoardStatus.Ready;\n                break;\n            case SlotGameStageStatus.BoardsSettling:\n                yes = this.status == SymbolBoardStatus.Ready;\n                break;\n        }\n        return yes;\n    }\n    /**\n     * 获取最大棋子编码\n     */\n    public abstract get maxCode(): number;\n    /**\n     * 是否自定义棋子替换流程\n     */\n    public get hasCustomReplaceCode(): boolean {\n        return false;\n    }\n    /**\n     * 转动时需要排除的棋子，其中key为gameMode\n     * @example\n     * 比如有些游戏在freespin中不允许再次触发freespin,\n     * 那么在freespin转动中就需要排除scatter棋子\n     * ```ts\n     * protecte get excludeSymbols():{[key:number]:number[]}{\n     *     return {SpinResultsGameType.FreeSpin:[Symbols.Scatter]};\n     * }\n     * ```ts\n     */\n    protected abstract get excludeChesses(): {\n        [key: number]: number[];\n    };\n    /**\n     * Gets chip symbol codes\n     * 筹码棋子编号，如果没有返回空数组\n     */\n    protected abstract get chipSymbolCodes(): number[];\n    /**\n     * Gets jackpot symbol codes\n     * jackpot棋子编号，如果没有返回空数组\n     */\n    protected abstract get jackpotSymbolCodes(): number[];\n    finalCodes: number[][];\n\n    /**\n     * 轴列表\n     */\n    private _reels: ReelBase[] = [];\n    protected _holdWins: HoldWinBase[] = [];\n    protected _masks: MaskBase;\n    protected _slotResults: SpinResultsSlot;\n    private $waitingResultsStrategy: IWaitingResultsStrategy;\n    private $fastWaitingResultsStrategy: IWaitingResultsStrategy;\n    /**\n     * 是否快速模式\n     */\n    private $isFast: boolean;\n    private $symbolReplaced: ReplaceSymbol[] = [];\n    private $customSymbolReplaced: ReplaceSymbol[] = [];\n    private customReplacedCallback: Function;\n    private replaceCodesOneByOne: boolean = false;\n    private oneByOneCodes: { position: number; code: number }[] = [];\n    private oneByOnePoisition: number = 0;\n    /**\n     *\n     */\n    public _index: number;\n    //private _canBeSpinRequestWhenPrizeShow: boolean;\n    private $chipCellRewards: { position: number; symbolCode: number; rewards: number }[] = [];\n    private $jackpotCellRewards: { position: number; symbolCode: number; rewards: number }[] = [];\n    private $replaceCodes: number[][] = [];\n\n    /**\n     * Next game mode of symbol board base\n     * 下一局游戏模式\n     */\n    private nextGameMode: SpinResultsGameMode;\n    /**\n     * 最终格子位置映射\n     */\n    protected _finalCellPosition: {\n        [key: number]: { x: number; y: number };\n    } = {};\n    protected _prizeShow: PrizeShow;\n    protected _prizeShowChesses: PrizeShowSymbol[] = [];\n    protected _prizeShowStrategy: IPrizeShowStrategy;\n    protected _prizeShowStatus: PrizeShowStatus = PrizeShowStatus.Ready;\n    private _matchedLines: number[][];\n    private _gameStage: ViewBase;\n    //#region  属性\n\n    get gameStage(): ViewBase {\n        return this._gameStage;\n    }\n    set gameStage(value: ViewBase) {\n        this._gameStage = value;\n    }\n    public addFguiComponent<T extends FguiComponentBase>(type: { new(): T }, changeSize: boolean = true): T {\n        let child = super.addFguiComponent(type, changeSize);\n\n        if (child instanceof ReelBase) {\n            const column = <ReelBase>(<any>child);\n            column.index = this._reels.length;\n            column.stageCode = this.stageCode;\n            column.symbolBoard = this;\n            this._reels.push(column);\n        }\n        if (child instanceof HoldWinBase) {\n            const holdWin = <HoldWinBase>(<any>child);\n            holdWin.index = this._holdWins.length;\n            holdWin.stageCode = this.stageCode;\n            holdWin.symbolBoard = this;\n            this._holdWins.push(holdWin);\n        }\n        return child;\n    }\n\n    //#region  spin结果操作\n    /**\n     * 获取spin结果\n     */\n    public get slotResults(): SpinResultsSlot {\n        return this._slotResults;\n    }\n    /**\n     * 设置spin结果\n     */\n    public set slotResults(value: SpinResultsSlot) {\n        console.log(\"set slotResults\")\n        this._slotResults = value;\n        if (value) {\n            this._ofKindNumber = value.ofAKind;\n            for (let i = 0; i < value.columns.length; i++) {\n                let resultColumn = value.columns[i];\n                let column = this.getColumn(i);\n                column.finalCodes = Object.assign([], resultColumn.codes);\n                column.mockCodes = Object.assign([], resultColumn.replaceCodes);\n                for (let j = 0; j < resultColumn.replaceCodes.length; j++) {\n                    const mockCode = resultColumn.replaceCodes[j];\n                    if (mockCode.length !== 0) {\n                        this.$symbolReplaced.push(new ReplaceSymbol(i, j, mockCode.length));\n                    }\n                }\n                const reel = this.getColumn(i);\n                reel.spinResults = resultColumn;\n            }\n            this.$chipCellRewards = this.getChipCellRewards();\n            this.$jackpotCellRewards = this.getJackpotCellRewards();\n            this.$replaceCodes = value.replaceCodes; //this.getReplaceCodes();\n            this.nextGameMode = value.nextGameMode;\n            if (value.extraChesses && value.extraChesses.length > 0) {\n                this.processExtraChesses(value.extraChesses);\n            }\n            if (value.events && value.events.length > 0) {\n                this.processEvents(value.events);\n            }\n            const symbolEvents = this.getSymbolEvents();\n            if (symbolEvents && symbolEvents.length > 0) {\n                this.processSymbolEvents(this.getSymbolEvents());\n            }\n            this.fguiComponent.node.emit(SymbolBoardEvent.RESULTS_RECEIVED, value);\n        }\n    }\n    public get matchedLines(): number[][] {\n        if (this.slotResults) {\n            this._matchedLines = this.slotResults.matchedLines;\n        }\n        if (!this._matchedLines) {\n            this._matchedLines = [];\n        }\n\n        return this._matchedLines;\n    }\n    public get hasMatchedLines(): boolean {\n        return this.matchedLines && this.matchedLines.length > 0;\n    }\n    public get replaceCodes(): number[][] {\n        return this.$replaceCodes;\n    }\n    public get hasReplaceCodes(): boolean {\n        return this.replaceCodes && this.replaceCodes.length > 0;\n    }\n    public get hasChipCellRewards(): boolean {\n        return this.$chipCellRewards && this.$chipCellRewards.length > 0;\n    }\n    public get hasJackpotCellRewards(): boolean {\n        return this.$jackpotCellRewards && this.$jackpotCellRewards.length > 0;\n    }\n    /**\n     * 处理额外棋子，当收到服务器返回结果就会调用，\n     * 收到后就开始处理额外棋子（比如海盗开始飞藏宝图）\n     * 有些游戏这些棋子是表示无效的棋子（比如熊猫掉落到棋盘外面的棋子）\n     * 掉落在棋盘内的额外棋子是在棋盘的棋子里面定义的\n     * @param extraChesses 额外棋子，棋子的定义见各关卡数据结构说明\n     */\n    protected processExtraChesses(extraChesses: SpinResultsSymbol[]): void { }\n    /**\n     * 处理事件，当收到服务器返回结果时调用\n     * （比如野牛冲刺事件）\n     * @param events 事件列表，事件的定义见各关卡数据结构说明\n     */\n    protected processEvents(events: SpinResultsEvent[]): void { }\n    /**\n     * 处理棋子事件\n     *\n     * @param events 棋子事件列表，事件的定义见各关卡数据结构说明\n     */\n    protected processSymbolEvents(events: SymbolEvent[]): void { }\n\n    protected get needProcessEvents(): boolean {\n        return (\n            this.hasReplaceCodes ||\n            this.getSymbolEvents().length > 0 ||\n            (this.getWeels() && this.getWeels().length > 0) ||\n            (this.slotResults.extraChesses && this.slotResults.extraChesses.length > 0) ||\n            (this.slotResults.events && this.slotResults.events.length > 0)\n        );\n    }\n    /**\n     * 获取事件\n     */\n    protected getEvents(): SpinResultsEvent[] {\n        return this.slotResults.events;\n    }\n    /**\n     * 获取额外棋子\n     */\n    protected getExtraChesses(): SpinResultsSymbol[] {\n        return this.slotResults.extraChesses;\n    }\n    /**\n     * 获取转盘，比如熊猫的转盘\n     */\n    protected getWeels(): SpinResultsWheel[] {\n        return this.slotResults.wheels;\n    }\n    /**\n     * 获取替换棋子列表\n     *\n     */\n    protected getReplaceCodes(): number[][] {\n        return this.slotResults.replaceCodes;\n    }\n    /**\n     * 获取棋子事件\n     */\n    protected getSymbolEvents(): SymbolEvent[] {\n        const events: SymbolEvent[] = [];\n        let position: number = 0;\n        for (let col = 0; col < this.slotResults.columns.length; col++) {\n            const reel = this.slotResults.columns[col];\n            for (let row = 0; row < reel.cells.length; row++) {\n                const cell = reel.cells[row];\n                if (cell.events && cell.events.length > 0) {\n                    events.push(new SymbolEvent(cell.code, cell.assets, position, cell.events, cell.wheel));\n                }\n                position++;\n            }\n        }\n        return events;\n    }\n    /**\n     * 获取筹码棋子奖励\n     */\n    protected getChipCellRewards(): { position: number; symbolCode: number; rewards: number }[] {\n        const rewards: { position: number; symbolCode: number; rewards: number }[] = [];\n        let position: number = 0;\n        for (let col = 0; col < this.slotResults.columns.length; col++) {\n            const reel = this.slotResults.columns[col];\n            for (let row = 0; row < reel.cells.length; row++) {\n                const cell = reel.cells[row];\n                if (this.isChipCode(cell.code)) {\n                    rewards.push({ position: position, symbolCode: cell.code, rewards: cell.assets });\n                }\n                position++;\n            }\n        }\n        return rewards;\n    }\n    /**\n     * 获取jp棋子奖励\n     */\n    protected getJackpotCellRewards(): { position: number; symbolCode: number; rewards: number }[] {\n        const rewards: { position: number; symbolCode: number; rewards: number }[] = [];\n        let position: number = 0;\n        for (let col = 0; col < this.slotResults.columns.length; col++) {\n            const reel = this.slotResults.columns[col];\n            for (let row = 0; row < reel.cells.length; row++) {\n                const cell = reel.cells[row];\n                if (this.isJackpotCode(cell.code)) {\n                    rewards.push({ position: position, symbolCode: cell.code, rewards: cell.assets });\n                }\n                position++;\n            }\n        }\n        return rewards;\n    }\n    private isChipCode(code: number): boolean {\n        return this.chipSymbolCodes.indexOf(code) !== -1;\n    }\n    private isJackpotCode(code: number): boolean {\n        return this.jackpotSymbolCodes.indexOf(code) !== -1;\n    }\n    //#endregion\n\n    //#region 转动相关\n    reelStartResilienceConfig(columnIndex: number, up: IResilienceMove, down: IResilienceMove): void {\n        let column = this.getColumn(columnIndex);\n        if (column) {\n            column.setReelStartResilience(up, down);\n        }\n    }\n    reelEndResilienceConfig(columnIndex: number, down: IResilienceMove, up: IResilienceMove): void {\n        let column = this.getColumn(columnIndex);\n        if (column) {\n            column.setReelEndResilience(down, up);\n        }\n    }\n    columnMoveY(columnIndex: number, step: number, code?: number): boolean {\n        let column = this.getColumn(columnIndex);\n        if (!column) {\n            return false;\n        }\n        let parent = (this.parent as unknown) as SlotGameStageBase;\n        return column.moveY(step, code);\n    }\n    cellMoveY(columnIndex: number, cellIndex: number, step: number, code?: number): boolean {\n        const column = this.getColumn(columnIndex);\n        if (!column) {\n            return false;\n        }\n        return column.cellMoveY(cellIndex, step, code);\n    }\n    receiveCellStopped(reelIndex: number, cellIndex: number): void {\n        this.fguiComponent.node.emit(SymbolBoardEvent.CELL_STOPPED, reelIndex, cellIndex);\n    }\n    receiveReelStopped(reelIndex: number): void {\n        let allStopped: boolean = true;\n        let reelCount = this._reels.length;\n        if (reelCount === 0) {\n            reelCount = this._holdWins.length;\n        }\n        for (let i = 0; i < reelCount; i++) {\n            const reel = this.getColumn(i);\n            //if (!reel.moveEnd) {\n            if (reel.status != SymbolBoardStatus.Stopped) {\n                allStopped = false;\n                break;\n            }\n        }\n        this.fguiComponent.node.emit(SymbolBoardEvent.COLUMN_STOPPED, reelIndex);\n        if (allStopped) {\n            this.afterChessboardStopped();\n            this.status = SymbolBoardStatus.Stopped;\n        }\n    }\n    //#endregion 转动相关\n\n    //#region 棋子替换\n    protected get symbolReplaced(): ReplaceSymbol[] {\n        if (this.hasCustomReplaceCode) {\n            return this.$customSymbolReplaced;\n        }\n        return this.$symbolReplaced;\n    }\n    protected set symbolReplaced(value: ReplaceSymbol[]) {\n        if (this.hasCustomReplaceCode) {\n            this.$customSymbolReplaced = value;\n        } else {\n            this.$symbolReplaced = value;\n        }\n    }\n    private replaceMockCodesInternal(): void {\n        if (this.hasCustomReplaceCode) {\n            if (this.needProcessEvents) {\n                this.replaceMockCodes(this.replaceCodes);\n            } else {\n                this.notifyMockCodesReplaced();\n            }\n        } else {\n            this.replaceCodesOneByOne = false;\n            let columns: number = this._reels.length;\n            if (columns === 0) {\n                columns = this._holdWins.length;\n            }\n            for (let i = 0; i < columns; i++) {\n                const column = this.getColumn(i);\n                column.replaceMockCodes();\n            }\n        }\n    }\n\n    /**\n     * 替换棋子方法，关卡可以重写\n     */\n    protected replaceMockCodes(replaceCodes: number[][]): void { }\n    /**\n     * 替换指定的棋子\n     * @remark\n     * 所有棋子替换完成后，需要调用notifyMockCodesReplaced\n     *\n     * @param codes 需要替换的棋子列表，不需要替换的位置填-1\n     * @param replacedCallback 替换完成后回调\n     */\n    protected replaceCustomMockeCodes(codes: number[], replacedCallback?: Function): void {\n        if (!codes || codes.length == 0) {\n            if (replacedCallback) {\n                replacedCallback();\n            }\n            return;\n        }\n        this.replaceCodesOneByOne = false;\n        this.customReplacedCallback = replacedCallback;\n        this.symbolReplaced = [];\n        for (let i = 0; i < codes.length; i++) {\n            const code = codes[i];\n            if (code !== SpinResultConst.NO_MOCK_CODE) {\n                const cell = this.getCellByFinalPosition(i);\n                this.symbolReplaced.push(new ReplaceSymbol(cell.x, cell.y, 1));\n            }\n        }\n        if (this.symbolReplaced.length == 0) {\n            if (replacedCallback) {\n                replacedCallback();\n            }\n        }\n        for (let i = 0; i < codes.length; i++) {\n            const code = codes[i];\n            if (code !== SpinResultConst.NO_MOCK_CODE) {\n                const cell = this.getCellByFinalPosition(i);\n                const reel = this.getColumn(cell.x);\n                reel.replaceMockCodes(cell.y, code);\n            }\n        }\n    }\n    /**\n     * 一个接一个替换棋子\n     *\n     * @param codes 替换棋子列表，不需要替换的位置填SpinResultConst.NO_MOCK_CODE\n     * @param isRandom 是否随机替换\n     * @param replacedCallback 替换完成后的回调\n     */\n    protected customReplaceCodesOneByOne(\n        codes: number[],\n        isRandom: boolean = true,\n        replacedCallback: Function = null\n    ): void {\n        if (!codes || codes.length == 0) {\n            if (replacedCallback) {\n                replacedCallback();\n            }\n            return;\n        }\n        this.customReplacedCallback = replacedCallback;\n        this.replaceCodesOneByOne = true;\n        this.symbolReplaced = [];\n        for (let i = 0; i < codes.length; i++) {\n            const code = codes[i];\n            if (code !== SpinResultConst.NO_MOCK_CODE) {\n                const cell = this.getCellByFinalPosition(i);\n                this.symbolReplaced.push(new ReplaceSymbol(cell.x, cell.y, 1));\n            }\n        }\n        if (this.symbolReplaced.length == 0) {\n            if (replacedCallback) {\n                replacedCallback();\n            }\n        }\n        this.oneByOnePoisition = 0;\n        this.oneByOneCodes = [];\n        if (isRandom) {\n            for (let i = 0; i < codes.length; i++) {\n                this.oneByOneCodes.push({ position: i, code: codes[i] });\n            }\n        } else {\n            const randomNumbers: number[] = [];\n            while (randomNumbers.length < codes.length) {\n                const number = NumberUtils.random(0, codes.length - 1);\n                if (randomNumbers.indexOf(number) === -1) {\n                    randomNumbers.push(number);\n                }\n            }\n            for (let i = 0; i < randomNumbers.length; i++) {\n                const position = randomNumbers[i];\n                this.oneByOneCodes.push({ position: position, code: codes[position] });\n            }\n        }\n        this.replaceNextCode();\n    }\n    private replaceNextCode(): void {\n        if (this.oneByOnePoisition >= this.oneByOneCodes.length) {\n            this.checkAllCodesReplaced();\n            return;\n        }\n        const nextCode = this.oneByOneCodes[this.oneByOnePoisition];\n        this.oneByOnePoisition++;\n        if (nextCode.code !== SpinResultConst.NO_MOCK_CODE) {\n            const cell = this.getCellByFinalPosition(nextCode.position);\n            const reel = this.getColumn(cell.x);\n            reel.replaceMockCodes(cell.y, nextCode.code);\n        } else {\n            this.replaceNextCode();\n        }\n    }\n    private checkAllCodesReplaced(): void {\n        let mockChess = this.symbolReplaced.find((c) => c.replaced === false);\n        if (!mockChess) {\n            if (this.hasCustomReplaceCode) {\n                if (this.customReplacedCallback) {\n                    this.customReplacedCallback();\n                }\n            } else {\n                this.notifyMockCodesReplaced();\n            }\n        }\n    }\n\n    receiveMockCodesReplaced(reelIndex: number, cellIndex: number): void {\n        let replaceSymbol = this.symbolReplaced.find((c) => c.reel == reelIndex && c.cell == cellIndex);\n        if (replaceSymbol) {\n            replaceSymbol.replaceOnce();\n        }\n        if (this.replaceCodesOneByOne) {\n            this.replaceNextCode();\n        } else {\n            this.checkAllCodesReplaced();\n        }\n    }\n    protected notifyMockCodesReplaced() {\n        this.symbolReplaced = [];\n        this.status = SymbolBoardStatus.PrizeShowing;\n        this.node.emit(SymbolBoardEvent.MOCK_CODE_REPLACED, this._index);\n    }\n\n    //#endregion\n\n    public get waitingResultsStrategy(): IWaitingResultsStrategy {\n        return this.$waitingResultsStrategy;\n    }\n    public set waitingResultsStrategy(waitingResultsStrategy: IWaitingResultsStrategy) {\n        this.$waitingResultsStrategy = waitingResultsStrategy;\n    }\n    public get fastWaitingResultsStrategy(): IWaitingResultsStrategy {\n        return this.$fastWaitingResultsStrategy;\n    }\n    public set fastWaitingResultsStrategy(waitingResultsStrategy: IWaitingResultsStrategy) {\n        this.$fastWaitingResultsStrategy = waitingResultsStrategy;\n    }\n    public get isFast(): boolean {\n        return this.$isFast;\n    }\n    public set isFast(isFast: boolean) {\n        if (this.status != SymbolBoardStatus.Ready && this._prizeShowStatus != PrizeShowStatus.Ready) {\n            cc.error(`只有在停止状态才能修改fast`);\n            return;\n        }\n        this.$isFast = isFast;\n    }\n\n    public get index(): number {\n        return this._index;\n    }\n    public set index(value: number) {\n        this._index = value;\n    }\n    public get prizeShowStatus(): PrizeShowStatus {\n        return this._prizeShowStatus;\n    }\n    public set prizeShowStatus(value: PrizeShowStatus) {\n        this._prizeShowStatus = value;\n    }\n    //#endregion\n    public reset() {\n        this.unscheduleAllCallbacks();\n        let columnCount = this._reels.length;\n        if (columnCount === 0) {\n            columnCount = this._holdWins.length;\n            for (let i = 0; i < columnCount; i++) {\n                const holdWin = this.getHoldWin(i);\n                holdWin.reset();\n            }\n        }\n        for (let i = 0; i < columnCount; i++) {\n            const column = this.getColumn(i);\n            column.reset();\n        }\n        //this._waitingResultsStatus = WaitingResultsStatus.Ready;\n        this.$status = SymbolBoardStatus.Ready;\n        this.prizeShowStatus = PrizeShowStatus.Ready;\n        this.prizeLineShowFirst = true;\n        this.slotResults = null;\n        if (this.$waitingResultsStrategy) {\n            this.$waitingResultsStrategy.reset();\n        }\n        if (this.$fastWaitingResultsStrategy) {\n            this.$fastWaitingResultsStrategy.reset();\n        }\n        if (this._prizeShowStrategy) {\n            this._prizeShowStrategy.reset();\n        }\n    }\n\n    private processOfAKind(): void { }\n\n    private onCellStopped(event: cc.Event.EventCustom): void { }\n    /**\n     * 棋盘转动结束后调用,可\n     */\n    protected afterChessboardStopped(): void {\n        let parent = (this.parent as unknown) as SlotGameStageBase;\n        let reelCount = this._reels.length;\n        if (reelCount === 0) {\n            reelCount = this._holdWins.length;\n        }\n        for (let i = 0; i < reelCount; i++) {\n            const reel = this.getColumn(i);\n            reel.notifyShowDoubleAssets();\n        }\n        this.executeNumberOfKind();\n    }\n\n    protected setAssetsAfterChessboardStopped(): void {\n        this._reels.map((reel) => {\n            reel.setAssetsAfterChessboardStopped();\n        });\n    }\n\n    /**\n     * 执行ofKind动画\n     */\n    protected executeNumberOfKind() {\n        // this.ofKind.executeNumberOfKind(this._ofKindNumber);\n    }\n\n    /**\n     * 开始等待结果\n     */\n    public startWaitingResults(): void {\n        // if (\n        //     this._waitingResultsStatus != WaitingResultsStatus.Ready &&\n        //     this._waitingResultsStatus != WaitingResultsStatus.Stopped\n        // ) {\n        if (this.status != SymbolBoardStatus.Ready && this.status != SymbolBoardStatus.Spinning) {\n            cc.error(\"只有在停止状态才能开始\");\n            return;\n        }\n\n        if (!this.waitingResultsStrategy) {\n            cc.error(\"未设置转动策略\");\n            return;\n        }\n        this.reset();\n        this.status = SymbolBoardStatus.Spinning;\n        this.symbolBoardStart();\n        this.beforeStartWaitingResults();\n        const excludeCodes = this.excludeChesses[this.nextGameMode];\n        if (this.isFast) {\n            if (!this.fastWaitingResultsStrategy) {\n                cc.warn(\"未设置快速转动策略，使用普通转动策略\");\n                this.fastWaitingResultsStrategy = this.waitingResultsStrategy;\n            }\n            this.fastWaitingResultsStrategy.startWaiting(excludeCodes);\n        } else {\n            this.waitingResultsStrategy.startWaiting(excludeCodes);\n        }\n    }\n    /**\n     * 棋盘开始自定义事件\n     */\n    public symbolBoardStart(): void {\n        //* 播放棋盘开始音效\n        // SoundMgr.getInstance().playEffect(\"symbol_board_start\", false);\n    }\n    public beforeStartWaitingResults(): void {\n        for (let column of this._reels) {\n            column.beforeStartWaitingResults();\n        }\n        for (let holdWin of this._holdWins) {\n            holdWin.beforeStartWaitingResults();\n        }\n        this.status = SymbolBoardStatus.Spinning;\n    }\n    beforeStopWaitingResults(): void {\n        // this.status = SymbolBoardStatus.;\n        // for (let column of this._reels) {\n        //     column.beforeStopWaitingResults();\n        // }\n        // for (let holdWin of this._holdWins) {\n        //     holdWin.beforeStopWaitingResults();\n        // }\n    }\n    canStop(): boolean {\n        return true;\n    }\n    public stopWaitingResults(): void {\n        if (this.status != SymbolBoardStatus.Spinning) {\n            cc.error(\"只有在等待状态才能停止\");\n            return;\n        }\n        if (this.canStop()) {\n            if (this.isFast) {\n                this.fastWaitingResultsStrategy.stopWaiting(true);\n            } else {\n                this.waitingResultsStrategy.stopWaiting(true);\n            }\n        }\n    }\n    private getHoldWin(columnIndex: number): HoldWinBase {\n        if (!this._holdWins || this._holdWins.length == 0) {\n            return null;\n        }\n        if (columnIndex < 0 || columnIndex >= this._holdWins.length) {\n            cc.error(`索引${columnIndex}超出范围了`);\n            return null;\n        }\n        return this._holdWins[columnIndex];\n    }\n    protected getColumn(columnIndex: number): ReelBase {\n        const holdWin = this.getHoldWin(columnIndex);\n        let column: ReelBase = null;\n        if (holdWin) {\n            column = holdWin.column;\n        }\n        if (!column) {\n            if (columnIndex < 0 || columnIndex >= this._reels.length) {\n                cc.error(`索引${columnIndex}超出范围了`);\n                return null;\n            }\n            column = this._reels[columnIndex];\n        }\n        return column;\n    }\n\n    getColumnExtraCellCount(columnIndex: number): { top: number; bottom: number } {\n        const column = this.getColumn(columnIndex);\n        return column.getExtraCellCount();\n    }\n    columnHoldWin(columnIndex: number): void {\n        const holdWin = this.getHoldWin(columnIndex);\n        if (!holdWin) {\n            return;\n        }\n        //* 在执行当前轴的holdwin时，需要先把之前的holdwin效果清除掉\n        let holdWins = this._holdWins.filter((h) => h.index < columnIndex);\n        holdWins.map((item, index) => {\n            if (item.isHoldWin) {\n                item.unholdWin(index);\n            }\n        });\n        holdWin.holdWin();\n    }\n    cellHoldWin(reelIndex: number, cellIndex: number): void {\n        const reel = this.getColumn(reelIndex);\n        reel.cellHoldWin(cellIndex);\n    }\n    unCellHoldWin(reelIndex: number, cellIndex: number): void {\n        const reel = this.getColumn(reelIndex);\n        reel.unCellHoldWin(cellIndex);\n    }\n    setFinalResultsImmediately(columnIndex: number, codes: number[], assets: number[]): void {\n        const column = this.getColumn(columnIndex);\n        if (!column) {\n            return;\n        }\n        column.setFinalResultsImmediately(codes, assets);\n    }\n    setFinalResultImmediately(columnIndex: number, cellIndex: number, code: number): void {\n        const column = this.getColumn(columnIndex);\n        if (!column) {\n            return;\n        }\n        column.setFinalResultImmediately(cellIndex, code);\n    }\n    onResultsReceived(listener: Function, target?: any): void {\n        this.fguiComponent.node.on(SymbolBoardEvent.RESULTS_RECEIVED, listener, target);\n    }\n    offResultsReceived(listener: Function, target?: any): void {\n        this.fguiComponent.node.off(SymbolBoardEvent.RESULTS_RECEIVED, listener, target);\n    }\n    clearResultsReceived(): void {\n        this.fguiComponent.node.off(SymbolBoardEvent.RESULTS_RECEIVED);\n    }\n    onCellResultSet(listener: Function, target?: any): void {\n        this.fguiComponent.node.on(SymbolBoardEvent.CELL_STOPPED, listener, target);\n    }\n    offCellResultSet(listener: Function, target?: any): void {\n        this.fguiComponent.node.off(SymbolBoardEvent.CELL_STOPPED, listener, target);\n    }\n    clearCellResultSet(): void {\n        this.fguiComponent.node.off(SymbolBoardEvent.CELL_STOPPED);\n    }\n    onColumnResultsSet(listener: Function, target?: any): void {\n        this.fguiComponent.node.on(SymbolBoardEvent.COLUMN_STOPPED, listener, target);\n    }\n    offColumnResultsSet(listener: Function, target?: any): void {\n        this.fguiComponent.node.off(SymbolBoardEvent.COLUMN_STOPPED, listener, target);\n    }\n    clearColumnResultsSet(): void {\n        this.fguiComponent.node.off(SymbolBoardEvent.COLUMN_STOPPED);\n    }\n    onResultsSet(listener: Function, target?: any): void {\n        this.fguiComponent.node.on(SymbolBoardEvent.CHESSBOARD_STOPPED, listener, target);\n    }\n    offResultsSet(listener: Function, target?: any): void {\n        this.fguiComponent.node.off(SymbolBoardEvent.CHESSBOARD_STOPPED, listener, target);\n    }\n    clearResultsSet(): void {\n        this.fguiComponent.node.off(SymbolBoardEvent.CHESSBOARD_STOPPED);\n    }\n\n    //#region 中奖效果展示\n    public get chipCellRewards(): { position: number; symbolCode: number; rewards: number }[] {\n        return this.$chipCellRewards;\n    }\n    public set chipCellRewards(value: { position: number; symbolCode: number; rewards: number }[]) {\n        this.$chipCellRewards = value;\n    }\n    public get jackpotCellRewards(): { position: number; symbolCode: number; rewards: number }[] {\n        return this.$jackpotCellRewards;\n    }\n    protected beforePrizeShow(): void {\n        this.prizeShowStatus = PrizeShowStatus.Showing;\n    }\n    /**\n     * 5、6、7连展示\n     *\n     * @param number 相同棋子数\n     */\n    ofAKindShow(number: number): void { }\n    /**\n     * 中奖连线展示\n     *\n     * @param lines 需要展示中奖效果的线列表\n     * @param times 需要展示的次数，0表示一直展示\n     */\n    prizeLineShow(lines: number[][], times: number): void {\n        const prizeShow = this.convert2PrizeLineShow(lines, times);\n        this._prizeShowChesses = prizeShow.getAllSymbols();\n        for (let i = 0; i < this._prizeShowChesses.length; i++) {\n            const position = this._prizeShowChesses[i].position;\n            let cellPoint = this.getCellByFinalPosition(position);\n            const column = this.getColumn(cellPoint.x);\n            if (!column) {\n                cc.error(`列${cellPoint.x}未找到`);\n                return;\n            }\n            column.prizeShow(position, cellPoint.y);\n        }\n    }\n    private convert2PrizeLineShow(lines: number[][], times: number): PrizeShow {\n        const prizeLines: PrizeShowLine[] = [];\n        const chipAssets: PrizeShowCellReward[] = [];\n        const jackpotRewards: PrizeShowCellReward[] = [];\n        if (lines == undefined) {\n            console.log(lines);\n        } else {\n            for (let i = 0; i < lines.length; i++) {\n\n                let chesses: PrizeShowSymbol[] = [];\n                if (lines[i]) {\n                    for (let j = 0; j < lines[i].length; j++) {\n                        chesses.push(new PrizeShowSymbol(lines[i][j], times));\n                    }\n                } else {\n                    console.log(lines[i]);\n                }\n\n                prizeLines.push(new PrizeShowLine(chesses, times));\n            }\n        }\n        let prizeShow = new PrizeShow(prizeLines, chipAssets, jackpotRewards);\n        return prizeShow;\n    }\n    private _prizeLineShowFirst: boolean = true;\n    protected get prizeLineShowFirst(): boolean {\n        return this._prizeLineShowFirst;\n    }\n    protected set prizeLineShowFirst(value: boolean) {\n        if (!value && this.status != SymbolBoardStatus.PrizeShowing) {\n            this._prizeLineShowFirst = false;\n        }\n        this._prizeLineShowFirst = value;\n    }\n    receivePrizeShowCompleted(position: number): void {\n        let chess = this._prizeShowChesses.find((c) => c.position == position);\n        if (chess) {\n            chess.finishedOnce();\n        }\n        let allCompletedOnce = this.checkAllChessesPrizeShowCompleted();\n        if (allCompletedOnce) {\n            if (this.prizeLineShowFirst && this.status >= SymbolBoardStatus.Stopped) {\n                this.status = SymbolBoardStatus.Settling;\n                this.prizeLineShowFirst = false;\n            }\n            this.notifyPrizeLineShowCompletedOnce();\n        } else if (chess.finishedTimes < chess.expectedTimes) {\n            //展示次数不够继续展示\n            let cellPoint = this.getCellByFinalPosition(position);\n            this.getColumn(cellPoint.x).prizeShow(position, cellPoint.y);\n        }\n    }\n    receiveAllCellRewardsSettled(): void {\n        this.status = SymbolBoardStatus.Ready;\n        if (this.parent) {\n            let parent = (this.parent as unknown) as SlotGameStageBase;\n            if (parent) {\n                parent.receivePrizeShowCompleted(this._index);\n            }\n        }\n    }\n    private checkAllChessesPrizeShowCompleted(): boolean {\n        let chess = this._prizeShowChesses.find((c) => c.finishedTimes < c.expectedTimes);\n        return !chess;\n    }\n    //! 修改成protected属性，是为了子类重载此方法，\n    //! 获取播放连线的生命周期，然后在此生命周期中播放音效\n    protected startPrizeShow(): void {\n        this.beforePrizeShow();\n        this._prizeShowStrategy.startShow();\n        //* 棋盘触发底部栏设置win框金币事件\n        this.node.emit(\"BOTTOM_BAR_SET_WIN_COINS\");\n    }\n    protected startPrizeSettle(): void {\n        this.beforePrizeShow();\n        this._prizeShowStrategy.startSettle();\n    }\n    /**\n     *\n     * @param position\n     * @param symbolCode\n     * @param assets\n     */\n    prizeChipCellSettle(position: number, symbolCode: number, assets: number): void {\n        //todo 筹码结算\n        console.log(\"筹码结算过程\");\n        let cell = this.getCellByFinalPosition(position);\n        let reel = this.getColumn(cell.x);\n        reel.prizeChipCellSettle(position, symbolCode, assets, this.prizeChipCellSettleCallback.bind(this));\n    }\n    /**\n     * 筹码棋子结算完毕后的回调\n     */\n    prizeChipCellSettleCallback() {\n        this.notifyPrizeCellSettleCompletedOnce();\n    }\n    prizeJackpotCellSettle(position: number, symbolCode: number, assets: number): void {\n        //\n        console.log(\"jackpot弹窗展示\");\n        setTimeout(() => {\n            this.notifyPrizeCellSettleCompletedOnce();\n        }, 1000);\n    }\n    private notifyPrizeLineShowCompletedOnce(): void {\n        this.node.emit(SymbolBoardEvent.PRIZE_LINE_SHOW_COMPLETED_ONCE);\n    }\n    onPrizeLineShowCompletedOnce(listener: Function, target?: any): void {\n        this.node.on(SymbolBoardEvent.PRIZE_LINE_SHOW_COMPLETED_ONCE, listener, target);\n    }\n    offPrizeLineShowCompletedOnce(listener: Function, target?: any): void {\n        this.node.off(SymbolBoardEvent.PRIZE_LINE_SHOW_COMPLETED_ONCE, listener, target);\n    }\n    clearPrizeLineShowCompletedOnce(): void {\n        this.node.off(SymbolBoardEvent.PRIZE_LINE_SHOW_COMPLETED_ONCE);\n    }\n\n    protected notifyPrizeCellSettleCompletedOnce(): void {\n        this.node.emit(SymbolBoardEvent.PRIZE_CELL_SETTLE_COMPLETED_ONCE);\n    }\n    onCellRewardSettledOnce(listener: Function, target?: any): void {\n        this.node.on(SymbolBoardEvent.PRIZE_CELL_SETTLE_COMPLETED_ONCE, listener, target);\n    }\n    offCellRewardSettledOnce(listener: Function, target?: any): void {\n        this.node.off(SymbolBoardEvent.PRIZE_CELL_SETTLE_COMPLETED_ONCE, listener, target);\n    }\n    clearCellRewardSettledOnce(): void {\n        this.node.off(SymbolBoardEvent.PRIZE_CELL_SETTLE_COMPLETED_ONCE);\n    }\n    //#endregion 中奖效果展示\n    /**\n     * 根据最终位置获取格子的坐标\n     * @param position 位置\n     */\n    protected getCellByFinalPosition(position: number): { x: number; y: number } {\n        if (this._finalCellPosition[position]) {\n            return this._finalCellPosition[position];\n        }\n        let columns = this._reels.length;\n        if (columns === 0) {\n            columns = this._holdWins.length;\n        }\n        let allPosition: number = -1;\n        let cell: { x: number; y: number } = { x: 0, y: 0 };\n        for (let x = 0; x < columns; x++) {\n            const column = this.getColumn(x);\n            const finalCellCount = column.cells.length - column.topExtraCells - column.bottomExtraCells;\n            allPosition = allPosition + finalCellCount;\n            if (allPosition >= position) {\n                cell.x = x;\n                cell.y = finalCellCount - (allPosition - position) - 1 + column.topExtraCells;\n                this._finalCellPosition[position] = cell;\n                break;\n            }\n        }\n        return cell;\n    }\n\n    //#region 结果处理\n\n    //#endregion\n\n    //#region  流程控制\n    onBeforeStartWaitingResults(): boolean {\n        return true;\n    }\n    onBeforeStopWaitingResults(): boolean {\n        return true;\n    }\n    //#endregion\n    //#region 控制器操作\n    public setReelControllerProperty(reelIndex: number, controllerName: string, code: number): void {\n        let reel = this.getColumn(reelIndex);\n        if (!reel) {\n            cc.error(\"未找到列\");\n            return;\n        }\n        reel.setControllerProperty(controllerName, code);\n    }\n    /**\n     * 设置格子的控制器值\n     *\n     * @param position 位置\n     * @param controllerName 控制器名称\n     * @param code 代码\n     */\n    public setCellControllerProperty(position: number, controllerName: string, code: number): void;\n    /**\n     * 设置格子的控制器值\n     *\n     * @param reelIndex 列索引\n     * @param cellIndex 单元格索引\n     * @param controllerName 控制器名称\n     * @param code 代码\n     */\n    public setCellControllerProperty(reelIndex: number, cellIndex: number, controllerName: string, code: number): void;\n    public setCellControllerProperty(\n        reelIndex: number,\n        cellIndex: number | string,\n        controllerName: string | number,\n        code?: number\n    ): void {\n        if (typeof cellIndex === \"number\") {\n            let reel = this.getColumn(reelIndex);\n            if (!reel) {\n                cc.error(\"未找到列\");\n                return;\n            }\n            reel.setCellControllerProperty(cellIndex as number, controllerName as string, code);\n            return;\n        }\n        const cell = this.getCellByFinalPosition(reelIndex);\n        this.setCellControllerProperty(cell.x, cell.y, cellIndex, controllerName as number);\n    }\n    /**\n     * 设置格子的控制器值\n     *\n     * @param position 位置\n     * @param controllerName 控制器名称\n     * @param code 代码\n     */\n    public setSymbolControllerProperty(position: number, controllerName: string, code: number): void;\n    /**\n     * 设置棋子的控制器值\n     *\n     * @param reelIndex 列索引\n     * @param cellIndex 单元格索引\n     * @param controllerName 控制器名称\n     * @param code 代码\n     */\n    public setSymbolControllerProperty(\n        reelIndex: number,\n        cellIndex: number,\n        controllerName: string,\n        code: number\n    ): void;\n    public setSymbolControllerProperty(\n        reelIndex: number,\n        cellIndex: number | string,\n        controllerName: string | number,\n        code?: number\n    ): void {\n        if (typeof cellIndex === \"number\") {\n            let reel = this.getColumn(reelIndex);\n            if (!reel) {\n                cc.error(\"未找到列\");\n                return;\n            }\n            reel.setSymbolControllerProperty(cellIndex as number, controllerName as string, code);\n            return;\n        }\n        const cell = this.getCellByFinalPosition(reelIndex);\n        this.setSymbolControllerProperty(cell.x, cell.y, cellIndex, controllerName as number);\n    }\n    //#endregion\n    public playSpineByConfig(reelIndex: number, cellIndex: number, configName: string, callback?: Function): void {\n        const reel = this.getColumn(reelIndex);\n        reel.playSpineByConfig(cellIndex, configName, callback);\n    }\n    public playSpineByConfigAndPosition(position: number, configName: string, callback?: Function): void {\n        const cell = this.getCellByFinalPosition(position);\n        this.playSpineByConfig(cell.x, cell.y, configName, callback);\n    }\n    private positionsShowCallback: Function = null;\n    private positionsShowCompletedOnce: boolean = false;\n    /**\n     * 播放指定位置上的指定配置的spine动效，同时播放，任一播放结束就调用回调\n     * @param positions 播放棋子位置列表：[5,9,10]\n     * @param configName 配置名称\n     * @param callback 回调\n     */\n    public playSpineByConfigAndPositions(positions: number[], configName: string, callback?: Function): void {\n        this.positionsShowCallback = callback;\n        this.positionsShowCompletedOnce = false;\n        for (let i = 0; i < positions.length; i++) {\n            const cell = this.getCellByFinalPosition(positions[i]);\n            this.playSpineByConfig(cell.x, cell.y, configName, this.positionShowCompletedOnce.bind(this));\n        }\n    }\n    private positionShowCompletedOnce(): void {\n        if (!this.positionsShowCompletedOnce) {\n            this.positionsShowCompletedOnce = true;\n            if (this.positionsShowCallback) {\n                this.positionsShowCallback();\n            }\n        }\n    }\n    /**\n     * Gets free mode show config name\n     * 播放进入免费游戏前需要播放的spine动画配置名称\n     */\n    protected get freeModeShowConfigName(): string {\n        return \"\";\n    }\n    /**\n     * Gets play enter free mode show delay\n     * 进入免费游戏前需要播放的棋子spine动画延迟时间,单位：毫秒\n     */\n    protected get playEnterFreeModeShowDelay(): number {\n        return 500;\n    }\n    /**\n     * Plays enter free mode show\n     * 播放进入免费模式前的棋子动效\n     * @param [callback] 回调\n     * @returns true if enter free mode show\n     */\n    public playEnterFreeModeShow(callback?: Function, code?: number): boolean {\n        const events = this.getSymbolEvents();\n        let scatterEvents = events.filter((e) =>\n            e.events.find(\n                (ee) =>\n                    ee.code == SpinResultsEventCode.Free ||\n                    ee.code == SpinResultsEventCode.OneMore ||\n                    ee.code == SpinResultsEventCode.Respin ||\n                    ee.code == SpinResultsEventCode.Bonus\n            )\n        );\n\n        if (code) {\n            scatterEvents = events.filter((e) =>\n                e.events.find(\n                    (ee) => ee.code == code\n                )\n            );\n        }\n        if (!this.freeModeShowConfigName || !scatterEvents || scatterEvents.length == 0) {\n            console.log(\"playEnterFreeModeShow return false\")\n            return false;\n        }\n        const positions: number[] = [];\n        for (let i = 0; i < scatterEvents.length; i++) {\n            positions.push(scatterEvents[i].position);\n        }\n        setTimeout(() => {\n            this.playSpineByConfigAndPositions(positions, this.freeModeShowConfigName, callback);\n        }, this.playEnterFreeModeShowDelay);\n        console.log(\"playEnterFreeModeShow return true\")\n        return true;\n    }\n    doubleChessShow(): void {\n        let columns = this._reels.length;\n        if (columns === 0) {\n            columns = this._holdWins.length;\n        }\n        for (let i = 0; i < columns; i++) {\n            this.getColumn(i).doubleChessShow();\n        }\n    }\n}\n\nexport class SymbolEvent {\n    private _code: number;\n    private _assets: number;\n    private _postion: number;\n    private _events: SpinResultsEvent[] = [];\n    private _wheel: SpinResultsWheel;\n    constructor(code: number, assets: number, position: number, events: SpinResultsEvent[], wheel: SpinResultsWheel) {\n        this._code = code;\n        this._assets = assets;\n        this._postion = position;\n        this._events = events;\n        if (!this._events) {\n            this._events = [];\n        }\n        this._wheel = wheel;\n    }\n    public get code(): number {\n        return this._code;\n    }\n    public get assets(): number {\n        return this._assets;\n    }\n    public get position(): number {\n        return this._postion;\n    }\n    public get events(): SpinResultsEvent[] {\n        return this._events;\n    }\n    public get wheel(): SpinResultsWheel {\n        return this._wheel;\n    }\n}\n"]}