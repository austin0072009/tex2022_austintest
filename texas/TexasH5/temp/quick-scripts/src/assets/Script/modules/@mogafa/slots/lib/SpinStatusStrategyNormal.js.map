{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\SpinStatusStrategyNormal.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import SpinStatusStrategy from \"./SpinStatusStrategy\";\nimport { SlotGameStageStatus } from \"./GameStage/SlotGameStageStatus\";\nimport { SpinType } from \"./SpinType\";\n\nimport { BottomBarSpinStaus } from \"./BottomBar/BottomBarSpinStaus\";\nimport { SpinResultsGameMode } from \"../../../spin-result/SpinResultsGameMode\";\nimport SpinResultsFreeTrigger from \"../../../spin-result/SpinResultsFreeTrigger\";\n\n\ninterface IResult {\n    enable: boolean;\n    spinStatus: BottomBarSpinStaus;\n}\nexport default class SpinStatusStrategyNormal implements SpinStatusStrategy {\n    getSpinStatus(\n        gameStatus: SlotGameStageStatus,\n        spinType: SpinType,\n        freeGameTrigger: SpinResultsFreeTrigger,\n        nextGameMode: SpinResultsGameMode\n    ): IResult {\n        let result: IResult = {\n            enable: true,\n            spinStatus: BottomBarSpinStaus.Ready,\n        };\n        if (\n            spinType == SpinType.Respin &&\n            nextGameMode == SpinResultsGameMode.Normal &&\n            gameStatus == SlotGameStageStatus.Ready\n        ) {\n            result.enable = true;\n            return result;\n        }\n        if (spinType == SpinType.Respin) {\n            result.enable = false;\n            return result;\n        }\n        switch (gameStatus) {\n            case SlotGameStageStatus.Ready:\n                this.spinButtonStatusChange(spinType, result, nextGameMode);\n                result.enable = true;\n                break;\n            case SlotGameStageStatus.WaitingServerResults:\n            case SlotGameStageStatus.RequestingServer:\n            case SlotGameStageStatus.ServerResultsReceived:\n                result.spinStatus = BottomBarSpinStaus.StopSpin;\n                break;\n            // case SlotGameStageStatus.StartPrizeShow:\n            //     result.spinStatus = BottomBarSpinStaus.StopSpin;\n            //     result.enable = false;\n            //     break;\n            case SlotGameStageStatus.BoardsPrizeShowing:\n                this.spinButtonStatusChange(spinType, result, nextGameMode);\n                result.enable = true;\n                if (freeGameTrigger && freeGameTrigger.gameMode != SpinResultsGameMode.Normal) {\n                    result.enable = false;\n                }\n                break;\n            case SlotGameStageStatus.BoardsSettling:\n            case SlotGameStageStatus.BoardsReplacing:\n            case SlotGameStageStatus.PrizeShowing:\n                this.spinButtonStatusChange(spinType, result, nextGameMode);\n                result.enable = false;\n                break;\n        }\n        if (result.spinStatus == BottomBarSpinStaus.StopSpin) {\n            if (spinType == SpinType.AutoSpin) {\n                result.spinStatus = BottomBarSpinStaus.StopAutoSpin;\n            }\n            if (spinType == SpinType.FreeSpin) {\n                result.spinStatus = BottomBarSpinStaus.StopFreeSpin;\n            }\n            if (spinType === SpinType.Spin) {\n                result.spinStatus = BottomBarSpinStaus.StopSpin;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * spin按钮状态改变\n     * 判断按钮类型在自动spin（AutoSpin）、freeSpin、准备中（Ready）中时\n     * 按钮状态的状态如何改变\n     * @param spinType\n     * @param result\n     * @param nextGameMode\n     */\n    private spinButtonStatusChange(spinType: number, result: IResult, nextGameMode: SpinResultsGameMode) {\n        if (spinType === SpinType.AutoSpin) {\n            result.spinStatus = BottomBarSpinStaus.StopAutoSpin;\n        } else if (\n            spinType === SpinType.FreeSpin &&\n            (nextGameMode === SpinResultsGameMode.FreeSpin || nextGameMode === SpinResultsGameMode.OneMore)\n        ) {\n            result.spinStatus = BottomBarSpinStaus.StopFreeSpin;\n        } else {\n            result.spinStatus = BottomBarSpinStaus.Ready;\n        }\n    }\n}\n"]}