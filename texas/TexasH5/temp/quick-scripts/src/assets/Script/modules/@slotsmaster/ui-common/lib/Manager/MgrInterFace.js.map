{"version":3,"sources":["assets\\Script\\modules\\@slotsmaster\\ui-common\\lib\\Manager\\MgrInterFace.ts"],"names":[],"mappings":";;;;;AAAA;;;;;;;GAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,sCAAiG;AACjG,wCAAuC;AAEvC;IAAA;IAgEA,CAAC;IA9DiB,wBAAW,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;SACtC;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACY,kCAAW,GAAxB,UAAyB,QAAkB;uCAAG,OAAO;;;gBACjD,sBAAO,IAAI,OAAO,CAAC,UAAO,OAAO;;;;wCACX,qBAAM,iBAAO,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAO,CAAC,MAAM,GAAG,0BAAgB,EAAE;wCACxE,OAAO,EAAE;4CACL,aAAa,EAAE,mBAAQ,CAAC,WAAW;yCACtC;qCACJ,CAAC,EAAA;;oCAJE,MAAM,GAAQ,SAIhB;oCACF,IAAI,MAAM,CAAC,YAAY,EAAE;wCACrB,mBAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;wCAChC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;qCACvB;;;;yBACJ,CAAC,EAAC;;;KACN;IACY,oCAAa,GAA1B,UACI,EAAU,EACV,eAAyB,EACzB,YAAuB,EACvB,kBAA6B;uCAC9B,OAAO;;;;;;wBAEE,GAAG,GAAG,gCAAsB,GAAG,EAAE,CAAC;wBACpB,qBAAM,iBAAO,CAAC,IAAI,CAAC,IAAI,CACrC,iBAAO,CAAC,MAAM,GAAG,GAAG,EACpB,EAAE,EACF;gCACI,OAAO,EAAE;oCACL,aAAa,EAAE,mBAAQ,CAAC,WAAW;iCACtC;6BACJ,CACJ,EAAA;;wBARG,MAAM,GAAQ,SAQjB;wBACD,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;4BAC5C,eAAe,EAAE,CAAC;yBACrB;6BAAM;4BACH,IAAI,YAAY,EAAE;gCACd,YAAY,EAAE,CAAC;6BAClB;yBACJ;;;;wBAED,IAAI,kBAAkB,EAAE;4BACpB,kBAAkB,EAAE,CAAC;yBACxB;;;;;;KAER;IACY,iCAAU,GAAvB,UAAwB,MAAc,EAAE,eAAyB;uCAAG,OAAO;;;;;wBACnE,UAAU,GAAG;4BACb,gBAAgB,EAAE,MAAM;yBAC3B,CAAC;wBACgB,qBAAM,iBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAO,CAAC,MAAM,GAAG,0BAAgB,EAAE,UAAU,EAAE;gCACrF,OAAO,EAAE;oCACL,aAAa,EAAE,mBAAQ,CAAC,WAAW;iCACtC;6BACJ,CAAC,EAAA;;wBAJE,MAAM,GAAQ,SAIhB;wBACF,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;4BAC5C,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;yBAC9D;;;;;KACJ;IACL,mBAAC;AAAD,CAhEA,AAgEC,IAAA;AAhEY,oCAAY","file":"","sourceRoot":"/","sourcesContent":["/*\n * @Description: \n}\n * @Author: 张菊\n * @Date: 2020-06-15 15:09:54\n * @LastEditTime: 2020-07-20 17:36:02\n * @LastEditors: 田鑫\n */\n\nimport HttpApi, { Http_RefreshHall, Http_PostCollectReward, Http_GetRewardId } from \"../HttpApi\";\nimport { AppConst } from \"../AppConst\";\n\nexport class MgrInterFace {\n    protected static instance: MgrInterFace;\n    public static getInstance(): MgrInterFace {\n        if (!this.instance) {\n            this.instance = new MgrInterFace();\n        }\n        return this.instance;\n    }\n    public async refreshHall(callBack: Function): Promise<any> {\n        return new Promise(async (resolve) => {\n            let result: any = await HttpApi.http.get(HttpApi.server + Http_RefreshHall, {\n                headers: {\n                    Authorization: AppConst.accessToken,\n                },\n            });\n            if (result.isSuccessful) {\n                AppConst.hallData = result.data;\n                resolve(callBack());\n            }\n        });\n    }\n    public async collectReward(\n        id: string,\n        successCallBack: Function,\n        failCallback?: Function,\n        catchErrorCallback?: Function\n    ): Promise<any> {\n        try {\n            let url = Http_PostCollectReward + id;\n            let result: any = await HttpApi.http.post(\n                HttpApi.server + url,\n                {},\n                {\n                    headers: {\n                        Authorization: AppConst.accessToken,\n                    },\n                }\n            );\n            if (result.isSuccessful && result.code === 200) {\n                successCallBack();\n            } else {\n                if (failCallback) {\n                    failCallback();\n                }\n            }\n        } catch (error) {\n            if (catchErrorCallback) {\n                catchErrorCallback();\n            }\n        }\n    }\n    public async getAwardId(adName: string, successCallBack: Function): Promise<any> {\n        let bodyParams = {\n            awardCollectCode: adName,\n        };\n        let result: any = await HttpApi.http.post(HttpApi.server + Http_GetRewardId, bodyParams, {\n            headers: {\n                Authorization: AppConst.accessToken,\n            },\n        });\n        if (result.isSuccessful && result.code === 200) {\n            this.collectReward(result.awardCollectId, successCallBack);\n        }\n    }\n}\n"]}