{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\GameStage\\SlotGameStageBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import SlotGameStage from \"./SlotGameStage\";\n\nimport { SlotGameStageEvent } from \"./SlotGameStageEvent\";\nimport SymbolBoardBase from \"../SymbolBoard/SymbolBoardBase\";\nimport BottomBarBase from \"../BottomBar/BottomBarBase\";\nimport { SlotGameStageStatus } from \"./SlotGameStageStatus\";\nimport { PrizeShowStatus } from \"../PrizeShowStatus\";\nimport SymbolSpineResource from \"../SymbolBoard/SymbolSpineResource\";\nimport { MogafaSlots } from \"../MogafaSlots\";\nimport { SymbolBoardStatus } from \"../SymbolBoard/SymbolBoardStatus\";\nimport { SpinType } from \"../SpinType\";\nimport TopBarBase from \"../TopBar/TopBarBase\";\nimport WinBase from \"../Common/WinBase\";\nimport LevelUpBase from \"../Common/LevelUpBase\";\n\n\nimport FguiFullScreenBase from \"../../../fairygui-component/lib/FguiFullScreenBase\";\nimport { MogafaExtensions } from \"../../../fairygui-component/lib/extensions/MogafaExtensions\";\nimport FguiComponentBase from \"../../../fairygui-component/lib/FguiComponentBase\";\nimport { AppConst } from \"../../../../@slotsmaster/ui-common/lib/AppConst\";\nimport WebSocket from \"../../../utils/lib/WebSocket\"\nimport SpinResults from \"../../../../spin-result/SpinResults\";\nimport { SpinResultsGameMode } from \"../../../../spin-result/SpinResultsGameMode\";\nimport { SpinResultsWinType } from \"../../../../spin-result/SpinResultsWinType\";\nimport SpinResultsUpgrade from \"../../../../spin-result/SpinResultsUpgrade\";\nimport { SpinResultsEventCode } from \"../../../../spin-result/SpinResultsEventCode\";\nimport SpinResultsWheelItem from \"../../../../spin-result/SpinResultsWheeItem\";\nimport SpinResultsWheel from \"../../../../spin-result/SpinResultsWheel\";\nimport SpinResultsFreeTrigger from \"../../../../spin-result/SpinResultsFreeTrigger\";\nimport SpinResultsCard from \"../../../../spin-result/SpinResultsCard\";\nimport { plainToClass } from \"class-transformer\";\nimport SoundMgr from \"../../../utils/lib/SoundMgr\";\n\n/**\n * slot游戏基类\n */\nexport default abstract class SlotGameStageBase extends FguiFullScreenBase implements SlotGameStage, MogafaSlots {\n    /**\n     * 全局当前的结果，注意，这个结果是只读的，不要修改其中的内容\n     * //todo 后面只提供需要关心的数据，不用把整个spinResults暴露出来\n     */\n    public static spinResults: SpinResults;\n    /**\n     * 游戏名称\n     */\n    protected abstract get gameName(): string;\n    /**\n     * 游戏编码\n     */\n    abstract get stageCode(): string;\n    /**\n     * 棋盘的位置索引对应服务器坐标系\n     */\n    public BoardIndex: number[][];\n    /**\n     * 获取最大棋子编码,需要在子类重写\n     * @returns 最大棋子编码\n     */\n    public abstract get maxCode(): number;\n\n    /**\n     * 棋子的spine动画资源\n     */\n    protected abstract get symbolSpineUrls(): SymbolSpineResource[];\n    /**\n     * Gets chip symbol codes\n     * 筹码棋子编号，如果没有返回空数组\n     */\n    protected abstract get chipSymbolCodes(): number[];\n    /**\n     * Gets jackpot symbol codes\n     * jackpot棋子编号，如果没有返回空数组\n     */\n    protected abstract get jackpotSymbolCodes(): number[];\n    /**\n     * 转动时需要排除的棋子，其中key为gameMode\n     * @example\n     * 比如有些游戏在freespin中不允许再次触发freespin,\n     * 那么在freespin转动中就需要排除scatter棋子\n     * ```ts\n     * protecte get excludeSymbols():{[key:number]:number[]}{\n     *     return {SpinResultsGameMode.FreeSpin:[Symbols.Scatter]};\n     * }\n     * ```ts\n     */\n    protected abstract get excludeChesses(): {\n        [key: number]: number[];\n    };\n\n    /*\n    jackpot棋子编号\n    */\n    public JackPotCode: number;\n    /*\n    Scatter棋子编号\n    */\n    public ScatterCode: number;\n    /*\n    特殊时间触发棋子\n    */\n    public BonusCode: number;\n\n    private _status: SlotGameStageStatus = SlotGameStageStatus.Ready;\n    private _currentGameMode: SpinResultsGameMode;\n    private _freeModeTrigger: SpinResultsGameMode;\n    private hasBigWin: boolean = false;\n    private bigWinShowEnded: boolean = true;\n    private hasJackpot: boolean = false;\n    private jackpotShowEnded: boolean = true;\n    private $spinResults: SpinResults;\n    private $cleans: any;\n    private symbolSpineResources: SymbolSpineResource[];\n    private symbolSpineResourceLoadedIndex: number = 0;\n    private $spinRoute: any;\n    private CallbackData: any;\n    private CallbackChangeData: any;\n    protected get spinRoute(): any {\n        return this.$spinRoute;\n    }\n    protected set spinRoute(value: any) {\n        this.$spinRoute = value;\n    }\n    private $spinParams: any;\n    protected get spinParams(): any {\n        return this.$spinParams;\n    }\n    protected set spinParams(value: any) {\n        this.$spinParams = value;\n    }\n    /**\n     * 当前游戏类型\n     */\n    private $gameMode: SpinResultsGameMode = SpinResultsGameMode.Normal;\n    /**\n     * 下一局游戏类型\n     */\n    private $nextGameMode: SpinResultsGameMode = SpinResultsGameMode.Normal;\n    private $symbolBoards: SymbolBoardBase[] = [];\n    /**\n     * websocket实例\n     */\n    protected abstract get webSocket(): WebSocket;\n    /**\n     * 棋盘列表\n     */\n    protected get symbolBoards(): SymbolBoardBase[] {\n        return this.$symbolBoards;\n    }\n    /**\n     * 底部bar\n     */\n    public bottomBar: BottomBarBase;\n    /**\n     * 顶部bar\n     */\n    public topBar: TopBarBase;\n    /**\n     * win框基类\n     */\n    protected win: WinBase;\n    /**\n     * 升级弹窗\n     */\n    protected levelUp: LevelUpBase;\n    /**\n     * Spin按钮缓存\n     */\n    private spinClickBuffer: SlotGameStageStatus = null;\n    /**\n     * 是否有连线\n     */\n    private _hasMatchedLines: boolean = false;\n    /**\n     * 是否有升级\n     */\n    private _hasUpgrade: boolean = false;\n    /**\n     * 升级金币奖励\n     */\n    private _coinAward: number = 0;\n    /**\n     * 升级积分奖励\n     */\n    private _integralAward: number = 0;\n    /**\n     * 最大连线数\n     */\n    public maxline: number = 1;\n    /**\n     * 获取游戏状态\n     */\n    public get status(): SlotGameStageStatus {\n        return this._status;\n    }\n    public set status(value: SlotGameStageStatus) {\n        this._status = value;\n        console.log(\"gameStagestatus ====\" + this._status)\n        if (value == SlotGameStageStatus.ServerResultsReceived) {\n            if (\n                this.spinClickBuffer &&\n                (this.spinClickBuffer == SlotGameStageStatus.WaitingServerResults ||\n                    this.spinClickBuffer == SlotGameStageStatus.RequestingServer)\n            ) {\n                // 在请求服务器及等待服务器返回中一直点击stop，那么收到服务器返回后立即停止\n                //todo 棋盘停止转动\n                this.stopWaitingResults();\n            }\n            this.spinClickBuffer = null;\n        }\n        let boardStatus: SymbolBoardStatus = null;\n        if (value == SlotGameStageStatus.Ready) {\n            boardStatus = SymbolBoardStatus.Ready;\n            if (this.spinResults && this.spinResults.nextGameMode != SpinResultsGameMode.Normal) {\n                setTimeout(() => {\n                    this.spinClick();\n                }, 500);\n            }\n        }\n        if (\n            value == SlotGameStageStatus.RequestingServer ||\n            value == SlotGameStageStatus.WaitingServerResults ||\n            value == SlotGameStageStatus.ServerResultsReceived\n        ) {\n            boardStatus = SymbolBoardStatus.Spinning;\n        }\n        if (boardStatus != null) {\n            for (let i = 0; i < this.$symbolBoards.length; i++) {\n                this.$symbolBoards[i].status = boardStatus;\n            }\n            if (\n                value == SlotGameStageStatus.Ready &&\n                this.spinResults &&\n                this.spinResults.gameMode != SpinResultsGameMode.Normal &&\n                this.spinResults.finishedCount < this.spinResults.totalCount\n            ) {\n                //this.spinClick();\n            }\n        }\n        if (value == SlotGameStageStatus.BoardsReplacing) {\n            if (this.canBeNextStatus()) {\n                this.status = SlotGameStageStatus.BoardsPrizeShowing;\n            }\n        }\n        if (value == SlotGameStageStatus.BoardsPrizeShowing) {\n            if (this.canBeNextStatus()) {\n                this.status = SlotGameStageStatus.BoardsSettling;\n            }\n        }\n        if (value == SlotGameStageStatus.BoardsSettling) {\n            if (this.canBeNextStatus()) {\n                this.status = SlotGameStageStatus.PrizeShowing;\n            }\n        }\n        if (value == SlotGameStageStatus.PrizeShowing) {\n            let hasBigWinOrJackpotShow = false;\n            if (this.hasJackpot && !this.jackpotShowEnded) {\n                hasBigWinOrJackpotShow = true;\n                this.jackpotShow(SlotGameStageBase.spinResults.jackpot);\n                return;\n            }\n            if (!this.hasJackpot && this.hasBigWin && !this.bigWinShowEnded) {\n                hasBigWinOrJackpotShow = true;\n                this.bigWinShow();\n                return;\n            }\n            if (!hasBigWinOrJackpotShow && this.spinResults.freeTrigger) {\n                setTimeout(this.beforeEnterFreeMode.bind(this), 500, this.spinResults.freeTrigger);\n                return;\n            }\n            if (\n                !hasBigWinOrJackpotShow &&\n                this.spinResults.finishedCount == this.spinResults.totalCount &&\n                this.spinResults.gameMode != SpinResultsGameMode.Normal\n            ) {\n                this.freeModeFinished(this.spinResults.winCoins, this.spinResults.totalCount);\n                //* 特殊模式结束时，先将spin按钮类型改为普通spin状态\n                //* 防止此时spin按钮的类型还为freeSpin，避免出现按钮\n                //* 从freeSpin状态闪一下才变为普通spin状态\n                this.bottomBar.spinType = SpinType.Spin;\n                //* 特殊模式结束，快速将游戏模式设置为普通模式，这样下一次spin就可以直接根据普通模式的设定清空win框的金币\n                if (\n                    this.$gameMode === SpinResultsGameMode.FreeSpin ||\n                    this.$gameMode === SpinResultsGameMode.Respin ||\n                    this.$gameMode === SpinResultsGameMode.OneMore\n                ) {\n                    this.$gameMode = SpinResultsGameMode.Normal;\n                }\n                //防止freespin 结束后可点击 在转一居\n                setTimeout(() => {\n                    this.bottomBar.freeModeFinished = true;\n                }, 1000);\n            }\n            this.status = SlotGameStageStatus.Ready;\n        }\n        this.node.emit(SlotGameStageEvent.STATUS_CHANGED, this.status);\n    }\n    /**\n     * 获取当前游戏模式\n     */\n    public get currentGameMode(): SpinResultsGameMode {\n        return this._currentGameMode;\n    }\n    /**\n     * 获取免费模式触发器\n     */\n    public get freeModeTrigger(): SpinResultsGameMode {\n        return this._freeModeTrigger;\n    }\n    /**\n     * 获取spin结果\n     */\n    public get spinResults(): SpinResults {\n        return this.$spinResults;\n    }\n    /**\n     * 设置spin结果\n     */\n    public set spinResults(value: SpinResults) {\n        this.$spinResults = value;\n    }\n    /**\n     * 清楚棋子数据\n    */\n    public get cleans(): any {\n        return this.$cleans;\n    }\n    public set cleans(value: any) {\n        this.$cleans = value;\n    }\n    private _bets: number[];\n    onLoad() {\n        super.onLoad();\n        this._status = SlotGameStageStatus.Ready;\n        this.loadCommonSoundsResources();\n        MogafaExtensions.init();\n        this.CallbackData = null;\n        this.webSocket.setActorMessageCallback((msg) => {\n            let data = null\n            let enterfree = false\n            if (msg.Info && msg.Info.length > 0) {\n                data = JSON.parse(msg.Info[0].Message)\n\n                //if(data.fn==\"sc_showdown_slotf_n\"){\n                if (data.fn.indexOf(\"sc_showdown_slot\") != -1) {\n                    this.CallbackData = msg.Info[0]\n\n                    if (data.openmarry && data.openmarry > 0) {\n                        enterfree = true\n                    }\n\n                }\n\n                //if( data.fn ==\"sc_tablestart_slotf_n\" && this.CallbackData ){\n                if (data.fn.indexOf(\"sc_tablestart_slot\") != -1 && this.CallbackData ||\n                    enterfree == true) {\n                    this.onSpinResultsReceivedInternal(this.CallbackData)\n                }\n\n            }\n\n\n\n            console.log(\"ActorMessageCallback=======\", data)\n        });\n\n    }\n\n    public addFguiComponent<T extends FguiComponentBase>(type: { new(): T }): T {\n        const child = super.addFguiComponent(type);\n        if (child instanceof SymbolBoardBase) {\n            const chessboard = (child as unknown) as SymbolBoardBase;\n            this.symbolBoards.push(chessboard);\n            chessboard.index = this.symbolBoards.length - 1;\n            chessboard.stageCode = this.stageCode;\n            // chessboard.gameStage = this;\n            chessboard.onResultsSet(this.chessboardResultsSet, this);\n        }\n        if (child instanceof BottomBarBase) {\n            this.bottomBar = (child as any) as BottomBarBase;\n            this.bottomBar.game = (this as unknown) as SlotGameStage;\n            this.bottomBar.onFastClick(this.fast, this);\n        }\n        if (child instanceof TopBarBase) {\n            this.topBar = (child as any) as TopBarBase;\n        }\n        return child;\n    }\n    protected createChildComponents(): void {\n        super.createChildComponents();\n        this.loadSymbolSpineResources();\n    }\n    /**\n     * 加载公用音效资源\n     */\n    private loadCommonSoundsResources(): void {\n        return;\n        let bundle = cc.assetManager.getBundle(\"games_common\")\n        if (bundle) {\n            bundle.loadDir(\"/sounds\", cc.AudioClip, function (err, clips) {\n                for (let i = 0; i < clips.length; i++) {\n                    SoundMgr.getInstance().addSound(clips[i].name, clips[i]);\n                }\n            });\n        } else {\n            let resUrl = \"games_common\";\n            if (!AppConst.isEditor) {\n                resUrl = AppConst.resUrl + \"games_common\";\n            }\n            cc.assetManager.loadBundle(resUrl, (err, bundle) => {\n                bundle.loadDir(\"/sounds\", cc.AudioClip, function (err, clips) {\n                    for (let i = 0; i < clips.length; i++) {\n                        SoundMgr.getInstance().addSound(clips[i].name, clips[i]);\n                    }\n                });\n            })\n        }\n\n        // cc.loader.loadResDir(\"Games/Common/sounds\", cc.AudioClip, function (err, clips) {\n        //     for (let i = 0; i < clips.length; i++) {\n        //         SoundMgr.getInstance().addSound(clips[i].name, clips[i]);\n        //     }\n        // });\n    }\n    private loadSymbolSpineResources(): void {\n        if (\n            this.symbolSpineUrls &&\n            this.symbolSpineUrls.length >= 0 &&\n            this.symbolSpineResourceLoadedIndex < this.symbolSpineUrls.length\n        ) {\n            let urls = this.symbolSpineUrls[this.symbolSpineResourceLoadedIndex].urls;\n            if (urls && urls.length > 0) {\n                cc.loader.loadResArray(urls, sp.SkeletonData, this.symbolSpineResourcesLoaded.bind(this));\n            } else {\n                this.symbolSpineResourceLoadedIndex++;\n                this.loadSymbolSpineResources();\n            }\n        }\n    }\n    private symbolBoardSetWinCoins(): void {\n        this.symbolBoards.map((item) => {\n            item.node.on(\"BOTTOM_BAR_SET_WIN_COINS\", this.setWinCoins.bind(this));\n        });\n    }\n    protected allChildCreated(): void {\n        super.allChildCreated();\n        //this.loadInitGameData();\n        this.symbolBoardSetWinCoins();\n        //* 游戏基类注册底部栏bet改变事件\n        //this.bottomBar.node.on(\"BET_CHANGE\", this.betChange.bind(this));\n\n        if (this.topBar) {\n            this.topBar.coins = AppConst.hallData.gold\n        } else {\n            this.bottomBar.setUserCoins(AppConst.hallData.gold)\n        }\n    }\n    /**\n     * 下注值变化事件\n     * @param bet\n     */\n    protected betChange(bet: number): void { }\n    private symbolSpineResourcesLoaded(error: any, resources: sp.SkeletonData[]): void {\n        if (error) {\n            cc.error(`棋子spine动画载入错误`);\n        } else {\n            let urls = this.symbolSpineUrls[this.symbolSpineResourceLoadedIndex];\n            for (let i = 0; i < resources.length; i++) {\n                const resource = resources[i];\n                this.symbolSpineUrls[this.symbolSpineResourceLoadedIndex].addResource(resource.name, resource);\n            }\n            this.symbolSpineResourceLoadedIndex++;\n            this.loadSymbolSpineResources();\n        }\n    }\n\n    /**\n     * 加载初始化游戏数据\n     */\n    protected loadInitGameData(): void {\n        if (!this.spinRoute || !this.spinParams) {\n            cc.error(\"初始化请求参数错误，无法获取初始数据\");\n            return;\n        }\n        this.webSocket.request(this.spinRoute, this.spinParams, this.loadInitGameDataCallback.bind(this));\n    }\n    /**\n     * 加载初始化游戏数据回调\n     * 处理初始化游戏设置、赋值\n     * @param result\n     */\n    private loadInitGameDataCallback(result: any): void {\n        if (result.code === 200 && result.isSuccessful) {\n            //* 设置底部栏筹码\n            if (result.data) {\n                this._bets = result.data.config.bet.list.map((item) => item.value);\n                let maxBet: number = result.data.config.bet.max;\n                this.setBottomBarBets(maxBet);\n                this.bottomBar.bet = this.bottomBar.bets[0];\n                // let maxIndex: number = bets.indexOf(maxBet);\n                // //todo 取离得最近的最大值\n                // bets = bets.slice(0, maxIndex + 1);\n                // this.bottomBar.bets = bets;\n            }\n            this.getInitGameData(result);\n            //* 设置初始化默认棋盘\n            const defaultSlots = result.data.game.defaultSlots;\n            this.symbolBoards.map((item, index) => {\n                item.defaultSlot = defaultSlots[index];\n            });\n            let userInfo = result.data.user;\n            //* 用户信息赋值给顶部栏\n            if (userInfo) {\n                this.topBar.setUserCoins(userInfo.coins);\n                this.topBar.setInitLevel(userInfo.level.level, userInfo.level.currentValue, userInfo.level.totalValue);\n            }\n            this.status = SlotGameStageStatus.Ready;\n        } else {\n            cc.error(`错误码：${result.code}, 错误信息：${result.message}`);\n        }\n    }\n    /**\n     * 设置底部栏bet列表\n     * @param maxBet\n     */\n    private setBottomBarBets(maxBet: number): void {\n        let maxIndex: number = this._bets.indexOf(maxBet);\n        //todo 取离得最近的最大值\n        if (maxIndex > -1) {\n            let bets: number[] = this._bets.slice(0, maxIndex + 1);\n            this.bottomBar.bets = bets;\n        } else {\n            //! 若无法在bets中取到对应maxBet的下标，则取一个离maxBet最接近的bet的下标\n            let nearestIndex: number = this.getNearestIndex(maxBet);\n            let bets: number[] = this._bets.slice(0, nearestIndex + 1);\n            this.bottomBar.bets = bets;\n        }\n    }\n    /**\n     * 获取离maxbet最近的bet下标\n     * @param maxBet\n     */\n    private getNearestIndex(maxBet: number): number {\n        let subBet: number = 0;\n        let index: number = 0;\n        for (let i = 0; i < this._bets.length; i++) {\n            let deviation: number = Math.abs(this._bets[i] - maxBet);\n            if (subBet === 0) {\n                subBet = deviation;\n                index = i;\n            }\n            if (subBet > deviation) {\n                index = i;\n            }\n        }\n        return index;\n    }\n    /**\n     * 子类重载此方法去获取初始化游戏数据\n     * @param result\n     */\n    protected abstract getInitGameData(result: any): void;\n    public getSymbolSpineResourcesByCode(symbolCode: number): SymbolSpineResource {\n        return this.symbolSpineUrls.find((s) => s.code === symbolCode);\n    }\n    /**\n     * 检查金币是否足够\n     *\n     */\n    checkCoinEnough(): boolean {\n        let userCoins: number\n\n        if (this.topBar) {\n            userCoins = this.topBar.coins;\n        } else {\n            userCoins = this.bottomBar.coins;\n        }\n\n        let isEnough: boolean = true;\n        userCoins -= this.bottomBar.bet * this.maxline;\n        if (userCoins < 0) {\n            this.node.emit(SlotGameStageEvent.SPIN_CHECK_COIN);\n        }\n        userCoins >= 0 ? (isEnough = true) : (isEnough = false);\n        return isEnough;\n    }\n    //#region spinClick\n    spinClick(times?: number): void {\n        this.spinClickBuffer = null;\n        switch (this._status) {\n            case SlotGameStageStatus.Ready:\n                this.beforeSpinRequestingInternal();\n                this.spinRequest();\n                break;\n            case SlotGameStageStatus.BoardsSpinning:\n                this.stopWaitingResults();\n                break;\n            //case SlotGameStageStatus.BoardsStopped:\n            case SlotGameStageStatus.BoardsPrizeShowing:\n                if (this.$nextGameMode === SpinResultsGameMode.Normal) {\n                    this.spinClickBuffer = SlotGameStageStatus.BoardsPrizeShowing;\n                } else {\n                    this.spinClickBuffer = null;\n                }\n                break;\n            case SlotGameStageStatus.WaitingServerResults:\n            case SlotGameStageStatus.RequestingServer:\n                this.spinClickBuffer = this._status;\n                // todo 需要在此判断websocket是否连接断开或超时，若满足条件，则需要停止棋盘\n                break;\n            case SlotGameStageStatus.ServerResultsReceived:\n                this.stopWaitingResults();\n                break;\n        }\n    }\n\n    //#endregion\n    protected changeStatus(status: SlotGameStageStatus): void {\n        this.status = status;\n    }\n    /**\n     * 设置底部栏金币\n     */\n    public setWinCoins(): void {\n        if (this._hasMatchedLines) {\n            this.bottomBar.setWinCoins(this.spinResults.winCoins, 1);\n            //* win框金币增长动画开始1S后再开始增长用户金币\n            this.scheduleOnce(() => {\n                if (this.topBar) {\n                    this.topBar.setUserCoins(this.spinResults.userCoins, 1);\n                } else {\n                    this.bottomBar.setUserCoins(this.spinResults.userCoins, 1);\n                }\n\n            }, 1.5);\n        }\n    }\n    /**\n     * 设置顶部栏金币\n     * 单独提出来作为一个方法的原因是某些游戏（如：章鱼），\n     * 需要经过一些判断再给顶部金币栏赋值，因此单独提出来方便重写该方法\n     * @param userCoins\n     */\n    public setUserCoins(userCoins: number): void {\n        if (this.topBar) {\n            this.topBar.coins = userCoins;\n        } else {\n            this.bottomBar.coins = userCoins;\n        }\n    }\n    //#region 服务器请求相关代码\n    private beforeSpinRequestingInternal(): void {\n        SlotGameStageBase.spinResults = null;\n        for (let i = 0; i < this.symbolBoards.length; i++) {\n            this.symbolBoards[i].reset();\n        }\n        this.beforeSpinRequesting();\n    }\n    /**\n     * 请求服务器spin之前调用，如果游戏关卡需要在此之前做逻辑处理\n     * 可重载此方法，结束后将游戏关卡状态更改成SlotGameStageStatus.RequestingServer\n     */\n    protected beforeSpinRequesting(): void {\n        //* 当游戏模式为普通模式时，每次spin显示winCoins时都需要先清空一下\n        if (this.$gameMode === SpinResultsGameMode.Normal) {\n            this.bottomBar.setWinCoins(0, 0);\n        }\n        this.changeStatus(SlotGameStageStatus.RequestingServer);\n    }\n    protected spinRequest(): void {\n        if (this.status != SlotGameStageStatus.RequestingServer) {\n            // && this.status != SlotGameStageStatus.BeforeRequestingServer) {\n            cc.error(\"只有在请求服务器的状态下才能请求服务器\");\n            return;\n        }\n        //* 每次请求数据前，清空掉金币增长动画，未执行完增长的金币数值改为直接赋值\n        if (this.topBar) {\n            this.topBar.cancelCoinIncreaseAnime();\n            //* 发送请求前更新顶部栏金币\n            let userCoins: number = this.topBar.coins;\n            userCoins -= this.bottomBar.bet * this.bottomBar.totalLineCount;\n            if (userCoins < 0) {\n                this.$message.showTips(\"Oops. Not enough coins to SPIN...\", 2);\n                this.status = SlotGameStageStatus.Ready;\n                return;\n            }\n            if (\n                this.$nextGameMode != SpinResultsGameMode.FreeSpin &&\n                this.$nextGameMode != SpinResultsGameMode.Respin &&\n                this.$nextGameMode != SpinResultsGameMode.OneMore\n            ) {\n                this.scheduleOnce(() => {\n                    this.topBar.setUserCoins(userCoins, 0);\n                }, 0.5);\n            }\n        } else {\n            this.bottomBar.cancelCoinIncreaseAnime();\n            //* 发送请求前更新顶部栏金币\n            let userCoins: number = this.bottomBar.coins;\n            userCoins -= this.bottomBar.bet * this.bottomBar.totalLineCount;;\n            if (userCoins < 0) {\n                this.$message.showTips(\"Oops. Not enough coins to SPIN...\", 2);\n                this.status = SlotGameStageStatus.Ready;\n                return;\n            }\n            if (\n                this.$nextGameMode != SpinResultsGameMode.FreeSpin &&\n                this.$nextGameMode != SpinResultsGameMode.Respin &&\n                this.$nextGameMode != SpinResultsGameMode.OneMore\n            ) {\n                this.bottomBar.setUserCoins(userCoins, 0);\n            }\n        }\n\n        for (let i = 0; i < this.symbolBoards.length; i++) {\n            this.symbolBoards[i].startWaitingResults();\n        }\n        this.schedule(this.spinRequesting, 0);\n    }\n    /**\n     * 在次等待游戏关卡状态更改成SlotGameStageStatus.RequestingServer\n     * 然后发送请求到服务器\n     */\n    protected spinRequesting(): void {\n        if (this.status != SlotGameStageStatus.RequestingServer) {\n            cc.error(\"只有在请求服务器的状态下才能请求服务器\");\n            return;\n        }\n        this.changeStatus(SlotGameStageStatus.WaitingServerResults);\n        this.unschedule(this.spinRequesting);\n\n        this.webSocket.request(\n            this.spinRoute,\n            this.spinParams,\n            this.onXiaZhuResultsReceivedInternal.bind(this),\n            this.onSpinResultsFailReceived.bind(this)\n        );\n    }\n    /**\n     * 收到服务器返回结果的错误回调\n     */\n    private onSpinResultsFailReceived(): void {\n        this.status = SlotGameStageStatus.Ready;\n        //* 当服务器错误回调时，除了将游戏状态重置为spin状态的同时，还需要改变底部栏spin按钮的状态\n        //* 在非autoSpin状态下，将spin按钮改为stop按钮\n        if (!this.bottomBar.isAutoSpin) {\n            this.bottomBar.spinType = SpinType.Respin;\n        }\n        this.symbolBoards.map((item) => {\n            item.status = SymbolBoardStatus.Spinning;\n            item.stopWaitingResults();\n        });\n    }\n    /**\n     * 收到下注消息返回结果\n     * @param result 服务器返回结果\n     */\n    private onXiaZhuResultsReceivedInternal(result: any): void {\n        console.log(\"onXiaZhuResultsReceivedInternal\")\n        if (!result.Message) {\n            this.stopWaitingResults();\n            return;\n        }\n        this.CallbackChangeData = result.Message\n\n        if (this.gameName != \"slotfruit\" && this.gameName != \"zues\" && this.gameName != \"shz\") {\n            this.onSpinResultsReceivedInternal(result)\n        }\n    }\n    /**\n     * 收到服务器返回结果的回调\n     * @param result 服务器返回结果\n     */\n    protected onSpinResultsReceivedInternal(result: any): void {\n        if (!result.Message || !this.CallbackChangeData) {\n            cc.error(\"spin返回结果为空\");\n            this.stopWaitingResults();\n            return;\n        }\n        let spinResults = this.parseResult(result.Message);\n        SlotGameStageBase.spinResults = spinResults;\n        this.spinResults = spinResults;\n        this.node.emit(SlotGameStageEvent.SPIN_RESULTS_RECEIVED, spinResults);\n        //* 卡牌展示\n        if (spinResults.cards && spinResults.cards.length > 0) {\n            this.cardViewShow(spinResults.cards);\n        }\n        // let level: SpinResultsLevel = spinResults.level;\n        // if (level.upgrade) {\n        //     this._hasUpgrade = true;\n        //     this._coinAward = level.upgrade.award;\n        //     this._integralAward = level.upgrade.points;\n        //     if (level.upgrade.maxBet) {\n        //         this.setBottomBarBets(level.upgrade.maxBet);\n        //         //* 当maxbet没有改变时，需要将level数据中的maxbet修改为0，防止UI显示maxbet\n        //         if (level.upgrade.maxBet === this.bottomBar.bet) {\n        //             level.upgrade.maxBet = 0;\n        //         }\n        //     }\n        //     if (level.level % 5 === 0) {\n        //         this.pauseSymbolBoard();\n        //         this.levelUp.closeCallback(this.continueSymbolBoard.bind(this));\n        //     }\n        // }\n        //* 只有在普通模式下，spin时消耗bet，经验条才会增长\n        // if (spinResults.gameMode === SpinResultsGameMode.Normal) {\n        //     //* 顶部栏经验条增长\n        //     this.topBar.updateLevel(\n        //         level.level,\n        //         level.currentValue,\n        //         level.totalValue,\n        //         level.upgrade,\n        //         this.updateLevelCallback.bind(this, level.upgrade)\n        //     );\n        // }\n        if (\n            this.spinResults.winType != SpinResultsWinType.None &&\n            this.spinResults.winType != SpinResultsWinType.Normal\n        ) {\n            this.hasBigWin = true;\n            this.bigWinShowEnded = false;\n        }\n        if (this.spinResults.jackpotLevel !== -1) {\n            this.hasJackpot = true;\n            this.jackpotShowEnded = false;\n        }\n        this.$gameMode = spinResults.gameMode;\n        this.$nextGameMode = spinResults.nextGameMode;\n        //* 赋值给底部栏当前游戏模式，便于不同模式下spin按钮置灰的显示判断\n        this.bottomBar.currentGameMode = spinResults.gameMode;\n        this.bottomBar.nextGameMode = spinResults.nextGameMode;\n        if (spinResults.freeTrigger) {\n            this.$nextGameMode = spinResults.freeTrigger.gameMode;\n            this.bottomBar.freeGameTrigger = spinResults.freeTrigger\n        }\n        this.changeBottomBarSpinType();\n        for (let i = 0; i < spinResults.slots.length; i++) {\n            if (i >= this.symbolBoards.length) {\n                cc.error(`棋盘数不够`);\n                break;\n            }\n            this.symbolBoards[i].slotResults = spinResults.slots[i];\n            if (spinResults.slots[i].matchedLines && spinResults.slots[i].matchedLines.length > 0) {\n                // todo 目前只有一个棋盘的情况下，暂时判定当有一个棋盘有连线，则设置该属性为true\n                this._hasMatchedLines = true;\n            }\n        }\n        if (\n            spinResults.gameMode == SpinResultsGameMode.FreeSpin ||\n            spinResults.gameMode == SpinResultsGameMode.OneMore\n        ) {\n            this.bottomBar.changeFreeSpinCount(spinResults.finishedCount, spinResults.totalCount);\n        }\n\n        this.changeStatus(SlotGameStageStatus.ServerResultsReceived);\n    }\n    /**\n     * 经验条增长完后回调\n     * @param upgrade\n     */\n    protected updateLevelCallback(upgrade: SpinResultsUpgrade): void {\n        if (upgrade) {\n            this.levelUp.upgrade(upgrade, this.awardIncreaseCallback.bind(this));\n        }\n    }\n    /**\n     * 升级奖励数字增加回调\n     * @param rewardCoins\n     * @param rewardIntegral\n     */\n    private awardIncreaseCallback(rewardCoins: number, rewardIntegral: number): void {\n        let coinAward: number = this.topBar.coins + rewardCoins;\n        // todo 暂时这样处理\n        if (this.spinResults.slots[0].matchedLines.length > 0) {\n            coinAward = this.spinResults.userCoins;\n        }\n        let integralAward: number = this.topBar.integral + rewardIntegral;\n        this.topBar.setUserCoins(coinAward, 1);\n        this.scheduleOnce(() => {\n            this.topBar.setUserIntegral(integralAward, 1);\n        }, 0.6);\n        this._hasUpgrade = false;\n    }\n    private changeBottomBarSpinType(): void {\n        switch (this.$gameMode) {\n            case SpinResultsGameMode.FreeSpin:\n            case SpinResultsGameMode.OneMore:\n                this.bottomBar.spinType = SpinType.FreeSpin;\n                break;\n            case SpinResultsGameMode.Respin:\n                this.bottomBar.spinType = SpinType.Respin;\n                break;\n            default:\n                if (this.bottomBar.spinType === 1) {\n                    this.bottomBar.spinType = SpinType.AutoSpin;\n                } else {\n                    this.bottomBar.spinType = SpinType.Spin;\n                }\n                //todo 如果是在自动模式下设置成SpinType.AutoSpin\n                break;\n        }\n        this.bottomBar.nextGameMode = this.spinResults.nextGameMode;\n    }\n    /**\n     * 默认处理结果的方法，\n     * 如果游戏有额外的数据需要处理，则可以重载此方法\n     * 然后返回最终的处理结果\n     *\n     * @param result 服务器返回的结果\n     * @returns spinResults\n     */\n    protected parseResult(result: any): SpinResults {\n        console.log(\"parseResult\")\n        let data = JSON.parse(result);\n        let data2 = JSON.parse(this.CallbackChangeData);\n\n        data.slots = [];\n        data.slots[0] = {}\n        data.slots[0].columns = []\n        data.slots[0].events = []\n        data.slots[0].matchedLines = []\n        if (data.jock && data.jock.jockPotScore) {\n            data.jackpots = data.jock.jockPotScore;\n            data.jackpot = data.jock.lWinScore;\n            data.jackpotLevel = data.jock.lev;\n\n        } else {\n            data.jackpots = [500, 2000, 6000000];\n            data.jackpot = 0;\n            data.jackpotLevel = -1;\n        }\n\n        data.winType = data.winType || 0;\n        data.winCoins = data.gold;\n        data.userCoins = data.usermoney || data.usergold;\n        data.previousGameMode;\n        data.gameMode = 0;\n        data.nextGameMode = 0;\n        data.finishedCount = data.TotalFree - data.openfree;\n        data.totalCount = data.TotalFree;\n        data.timestamp = 0;\n        data.totalBetNum = 0;\n        data.highScore = 0;\n        data.bigWinCoins = data.gold;\n        data.bigWinAdAwards = { awardId: \"\", points: 0, coins: 0, countdown: 4 };\n        data.cards = [];\n        data.freeWinGold = data.FreeWinGold;\n\n        if (data.totalCount > 0 && data.finishedCount > 0) {\n            data.winCoins = data.FreeWinGold;\n        }\n\n        //棋盘数据转换\n\n        if (data2._turntable[0] && data2._turntable[0].oneline) {\n            let row = data2._turntable.length\n            let coum = data2._turntable[0].oneline.length\n\n            for (var a = 0, b = coum; a < b; a++) {\n                data.slots[0].columns[a] = {}\n                data.slots[0].columns[a].cells = []\n            }\n            for (var _i = 0, _a = coum; _i < _a; _i++) {\n\n                for (var a = 0, b = row; a < b; a++) {\n\n\n                    data.slots[0].columns[_i].cells[a] = { code: data2._turntable[a].oneline[_i] - 1, fixed: false, mockCodes: [] }\n                    data.slots[0].columns[_i].cells[a].events = []\n                    if (this.JackPotCode == data2._turntable[a].oneline[_i] - 1) {\n                        data.slots[0].columns[_i].cells[a].events.push({ code: SpinResultsEventCode.Bonus, value: SpinResultsEventCode.Bonus })\n                    }\n\n                    if (this.gameName == \"ninjaVSsamurai\") {\n                        if (data2._turntable[a].oneline[_i] - 1 >= this.ScatterCode) {\n                            data.slots[0].columns[_i].cells[a].events.push({ code: SpinResultsEventCode.Free, value: SpinResultsEventCode.Free })\n                        }\n                    } else {\n                        if (this.ScatterCode == data2._turntable[a].oneline[_i] - 1) {\n                            data.slots[0].columns[_i].cells[a].events.push({ code: SpinResultsEventCode.Free, value: SpinResultsEventCode.Free })\n                        }\n                    }\n\n                }\n            }\n\n        }\n        //中奖连线数据转换\n        if (data.hitline && data.hitline.length > 0) {\n            let count = data.hitline.length\n            for (var a = 0, b = count; a < b; a++) {\n                data.slots[0].matchedLines[a] = []\n\n                for (var _i = 0, _a = data.hitline[a].hitcount; _i < _a; _i++) {\n                    let value = data.hitline[a].hit[_i]\n                    value = this.BoardIndex[value.x - 1][value.y - 1]\n                    data.slots[0].matchedLines[a][_i] = value\n                }\n            }\n        }\n        //棋盘变化数据\n        if (data2.changeinfos) {\n            for (var a = 0, b = data2.changeinfos.length; a < b; a++) {\n                if (data.slots[0].columns[data2.changeinfos[a].tcol].cells[data2.changeinfos[a].trow].events) {\n\n                } else {\n                    data.slots[0].columns[data2.changeinfos[a].tcol].cells[data2.changeinfos[a].trow].events = []\n                }\n\n                data.slots[0].columns[data2.changeinfos[a].tcol].cells[data2.changeinfos[a].trow].events.push({ code: data2.changeinfos[a].tcard - 1, value: data2.changeinfos[a].tcard - 1 })\n\n                data.slots[0].columns[data2.changeinfos[a].col].cells[data2.changeinfos[a].row].mockCodes.push(data2.changeinfos[a].beforcard - 1)\n                data.slots[0].columns[data2.changeinfos[a].col].cells[data2.changeinfos[a].row].code = data2.changeinfos[a].card - 1\n\n                if (this.gameName == \"zues\") {\n                    if (data.totalCount > 0 && data.finishedCount > 0) {\n                        if (data2.changeinfos[a].beforcard - 1 == 6) {\n                            data.slots[0].columns[data2.changeinfos[a].tcol].cells[data2.changeinfos[a].trow].events.push({ code: 6001, value: 6001 })\n                        }\n\n                        if (data2.changeinfos[a].beforcard - 1 == 4) {\n                            data.slots[0].columns[data2.changeinfos[a].tcol].cells[data2.changeinfos[a].trow].events.push({ code: 5001, value: 5001 })\n                        }\n                    }\n\n\n                }\n\n            }\n        }\n\n        if (data.bisons) {\n            for (var a = 0, b = data.bisons.length; a < b; a++) {\n\n                let value_chong = -1\n\n                for (var x = 0, y = data.bisons[a].changes.length; x < y; x++) {\n\n                    data.slots[0].columns[data.bisons[a].changes[x].col].cells[data.bisons[a].changes[x].row].mockCodes.push(data.bisons[a].changes[x].befor - 1)\n                    data.slots[0].columns[data.bisons[a].changes[x].col].cells[data.bisons[a].changes[x].row].code = data.bisons[a].changes[x].card - 1\n\n                    if (data.bisons[a].isvertical == false) {\n                        value_chong = data.bisons[a].changes[x].col\n                    }\n\n                }\n\n                if (!data.bisons[a].origin) { //普通冲刺\n                    data.slots[0].events.push({ code: 1, value: value_chong })\n                } else if (data.bisons[a].origin) {\n                    data.slots[0].columns[data.bisons[a].origin.col].cells[data.bisons[a].origin.row].events.push({ code: a, value: value_chong })\n                }\n\n            }\n        }\n\n        if (data.ninjiamodle && data.ninjiamodle > 0) {\n            data.slots[0].events.push({ code: 2, value: data.ninjiamodle })\n        }\n\n        //冰球\n        if (data.cleans) {\n            data.slots[0].events = []\n            let cleans = data.cleans;\n\n            for (var i = 0; i < cleans.length; i++) {\n                let value_chong = -1\n                let befort = cleans[i].befort\n                let aftert = cleans[i].aftert\n                let onelineNum = aftert[0].oneline.length\n\n                for (var j = 0; j < onelineNum; j++) {\n                    for (var k = 0; k < aftert.length; k++) {\n                        data.slots[0].columns[j].cells[k].mockCodes.push(befort[k].oneline[j] - 1);\n                        data.slots[0].columns[j].cells[k].code = aftert[k].oneline[j] - 1;\n                    }\n                }\n\n                //获取获奖棋子\n                let prizes = cleans[i].cleans\n                for (var j = 0; j < prizes.length; j++) {\n                    let points = prizes[j].points\n                    for (var k = 0; k < points.length; k++) {\n                        if (data.slots[0].columns[points[k].col].cells[points[k].row].events) { } else {\n                            data.slots[0].columns[points[k].col].cells[points[k].row].events = [];\n                        }\n                        data.slots[0].columns[points[k].col].cells[points[k].row].events.push({ code: 1520, value: i });\n\n                    }\n\n                }\n            }\n        }\n\n        this.CallbackChangeData = null\n\n\n        let wheels = []\n        if (data.specialCard) {\n            for (var a = 0, b = data.specialCard.length; a < b; a++) {\n                let item = new SpinResultsWheelItem(data.specialCard[a].ItemID, data.specialCard[a].ItemValue)\n                wheels.push(item)\n            }\n        }\n\n        let dsd = []\n        dsd.push(new SpinResultsWheel(wheels))\n        //免费次数\n        if (data.openfree > 0 && data.finishedCount == 0 || data.isstartfree) {\n            data.freeTrigger = new SpinResultsFreeTrigger(\n                SpinResultsGameMode.FreeSpin,\n                data.finishedCount,\n                data.totalCount,\n                dsd,\n            );\n            data.nextGameMode = SpinResultsGameMode.FreeSpin;\n\n        } else if (data.openmarry > 0 && data.finishedCount == 0) {\n            data.freeTrigger = new SpinResultsFreeTrigger(\n                SpinResultsGameMode.Bonus,\n                0,\n                data.openmarry,\n            );\n            data.nextGameMode = SpinResultsGameMode.Bonus;\n        }\n\n\n        if (data.totalCount > 0 && data.finishedCount > 0) {\n            data.gameMode = SpinResultsGameMode.FreeSpin\n            data.nextGameMode = SpinResultsGameMode.FreeSpin\n        }\n\n        if (data.finishedCount == data.totalCount && data.totalCount != 0 && data.finishedCount != 0) {\n            data.nextGameMode = SpinResultsGameMode.Normal\n        }\n\n        if (data.totalCount == 0 && data.openfree == 0 && this.bottomBar.nextGameMode == 1) {\n            data.totalCount = this.bottomBar.freeGameTrigger.total\n            data.finishedCount = data.totalCount\n            data.winCoins = data.FreeWinGold\n            data.gameMode = SpinResultsGameMode.FreeSpin\n            data.nextGameMode = SpinResultsGameMode.Normal\n        }\n\n        console.log(\"总次数：\" + data.totalCount + \",免费：\" + data.openfree + \",玛丽：\" + data.openmarry);\n\n        let spinResult = plainToClass(SpinResults, data);\n\n        return spinResult;\n    }\n    //#endregion\n    protected stopWaitingResults(): void {\n        for (let i = 0; i < this.symbolBoards.length; i++) {\n            this.symbolBoards[i].stopWaitingResults();\n        }\n    }\n\n    /**\n     * Fasts slot game\n     */\n    private fast(): void {\n        for (let i = 0; i < this.symbolBoards.length; i++) {\n            this.symbolBoards[i].isFast = this.bottomBar.isFast;\n        }\n    }\n    //#region\n    protected beforeReplacingMockSymbols(): void {\n        this.changeStatus(SlotGameStageStatus.BoardsReplacing);\n    }\n    protected beforeStartPrizeShow(): void {\n        this.changeStatus(SlotGameStageStatus.BoardsPrizeShowing);\n    }\n    //#endregion\n\n    /**\n     * Chessboards results set\n     * @param chessboardIndex\n     */\n    protected chessboardResultsSet(chessboardIndex: number): void {\n        this.changeStatus(SlotGameStageStatus.BoardsPrizeShowing);\n    }\n    //#region 事件监听\n    onStatusChanged(listener: Function, target?: any): void {\n        this.node.on(SlotGameStageEvent.STATUS_CHANGED, listener, target);\n    }\n    clearStatusChanged(): void {\n        this.node.off(SlotGameStageEvent.STATUS_CHANGED);\n    }\n    offStatusChanged(listener?: Function, target?: any) {\n        this.node.off(SlotGameStageEvent.STATUS_CHANGED, listener, target);\n    }\n    /**\n     * 检查金币是否足够事件\n     */\n    onSpinCheckCoin(listener: Function, target?: any): void {\n        this.node.on(SlotGameStageEvent.SPIN_CHECK_COIN, listener, target);\n    }\n    offSpinCheckCoin(listener: Function, target?: any): void {\n        this.node.off(SlotGameStageEvent.SPIN_CHECK_COIN, listener, target);\n    }\n    clearSpinCheckCoin(): void {\n        this.node.off(SlotGameStageEvent.SPIN_CHECK_COIN);\n    }\n    /**\n     * Determines whether spin results received on\n     * @param listener\n     * @param [target]\n     */\n    onSpinResultsReceived(listener: Function, target?: any): void {\n        this.node.on(SlotGameStageEvent.SPIN_RESULTS_RECEIVED, listener, target);\n    }\n\n    /**\n     * Offs spin results received\n     * @param listener\n     * @param [target]\n     */\n    offSpinResultsReceived(listener: Function, target?: any): void {\n        this.node.off(SlotGameStageEvent.SPIN_RESULTS_RECEIVED, listener, target);\n    }\n    /**\n     * Clears spin results received\n     */\n    clearSpinResultsReceived(): void {\n        this.node.off(SlotGameStageEvent.SPIN_RESULTS_RECEIVED);\n    }\n\n    //#endregion 事件监听\n    protected getBoard(boardIndex: number): SymbolBoardBase {\n        const board = this.symbolBoards[boardIndex];\n        if (!board) {\n            cc.error(`棋盘索引${boardIndex}超界`);\n            return null;\n        }\n        return board;\n    }\n    protected checkAllSymbolBoardStopped(): boolean {\n        let stopped: boolean = true;\n        for (let i = 0; i < this.symbolBoards.length; i++) {\n            const board = this.symbolBoards[i];\n            if (board.status == SymbolBoardStatus.Ready || board.status == SymbolBoardStatus.Spinning) {\n                stopped = false;\n                break;\n            }\n        }\n        return stopped;\n    }\n    private canBeNextStatus(): boolean {\n        let canBeNextStatus: boolean = true;\n        for (let i = 0; i < this.symbolBoards.length; i++) {\n            canBeNextStatus = this.symbolBoards[i].canBeNextStatus(this.status);\n            if (!canBeNextStatus) {\n                break;\n            }\n        }\n        return canBeNextStatus;\n    }\n    /**\n     * Receives prize show completed\n     * @param boardIndex\n     */\n    receivePrizeShowCompleted(boardIndex: number): void {\n        const canBeNextStatus = this.canBeNextStatus();\n        if (!canBeNextStatus) {\n            if (this.hasBigWin) {\n                this.bigWinShow();\n            }\n            if (this.hasJackpot && !this.jackpotShowEnded) {\n                this.jackpotShow(SlotGameStageBase.spinResults.jackpot);\n            }\n            if (!this.hasBigWin && !this.hasJackpot) {\n                if (this.spinResults.freeTrigger) {\n                    this.beforeEnterFreeMode(this.spinResults.freeTrigger);\n                } else if (\n                    this.spinResults.finishedCount == this.spinResults.totalCount &&\n                    this.spinResults.gameMode != SpinResultsGameMode.Normal\n                ) {\n                    this.freeModeFinished(this.spinResults.winCoins, this.spinResults.totalCount);\n                    //* 特殊模式结束时，先将spin按钮类型改为普通spin状态\n                    //* 防止此时spin按钮的类型还为freeSpin，避免出现按钮\n                    //* 从freeSpin状态闪一下才变为普通spin状态\n                    this.bottomBar.spinType = SpinType.Spin;\n                } else {\n                    this.changeStatus(SlotGameStageStatus.Ready);\n                }\n            }\n        }\n    }\n    receiveSymbolBoardStatusChanged(boardIndex: number, boardStatus: SymbolBoardStatus): void {\n        const canBeNextStatus = this.canBeNextStatus();\n        if (canBeNextStatus) {\n            switch (this.status) {\n                case SlotGameStageStatus.ServerResultsReceived:\n                    this.status = SlotGameStageStatus.BoardsReplacing;\n                    break;\n                case SlotGameStageStatus.BoardsReplacing:\n                    this.status = SlotGameStageStatus.BoardsPrizeShowing;\n                    break;\n                case SlotGameStageStatus.BoardsPrizeShowing:\n                    this.status = SlotGameStageStatus.BoardsSettling;\n                    break;\n                case SlotGameStageStatus.BoardsSettling:\n                    // this.status = SlotGameStageStatus.Ready;\n                    this.status = SlotGameStageStatus.PrizeShowing;\n                    break;\n                case SlotGameStageStatus.PrizeShowing:\n                    //! 如果下一把游戏模式是普通模式，且没有特殊模式的数据，才把游戏状态设为准备中\n                    //! 为了防止当出现scatter棋子准备进入特殊模式，延迟执行beforeEnterFreeMode方法时。\n                    //! 游戏状态若被设置为准备中，则会破坏游戏流程，出现用户还未选择是否进入特殊模式，\n                    //! 游戏已经开始的bug\n                    if (this.$nextGameMode === SpinResultsGameMode.Normal && !this.spinResults.freeTrigger) {\n                        this.status = SlotGameStageStatus.Ready;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     *\n     * @param boardIndex\n     */\n    receiveSymbolBoardStopped(boardIndex: number): void {\n        const canBeNextStatus = this.canBeNextStatus();\n        if (canBeNextStatus) {\n            this.changeStatus(SlotGameStageStatus.BoardsReplacing);\n        }\n    }\n    receiveSymbolMockCodesReplaced(boardIndex: number): void {\n        const canBeNextStatus = this.canBeNextStatus();\n        if (canBeNextStatus) {\n            this.changeStatus(SlotGameStageStatus.BoardsPrizeShowing);\n        }\n    }\n\n    /**\n     * bigwin superwin等展示，需要重载，展示完成后要调用bigWinShowEnd\n     */\n    protected bigWinShow(): void {\n        this.win.popUpWin(\n            SlotGameStageBase.spinResults.winType,\n            SlotGameStageBase.spinResults.bigWinCoins,\n            SlotGameStageBase.spinResults.bigWinAdAwards.countdown,\n            this.spinResults.gameWheel,\n            this.bigWinCallback.bind(this)\n        );\n        //* 如果已经有连线了，bigwin就不用给底部栏再赋一次值了\n        if (!this._hasMatchedLines) {\n            this.bottomBar.setWinCoins(this.spinResults.winCoins, 1);\n        }\n    }\n    protected bigWinCallback(rewardCoins: number, rewardIntegral: number): void {\n        this.bigWinShowEnd();\n        if (this.topBar) {\n            let coinAward: number = rewardCoins + this.topBar.coins;\n            // todo 暂时这样处理\n            if (this.spinResults.slots[0].matchedLines.length > 0) {\n                coinAward = this.spinResults.userCoins;\n            }\n            this.topBar.setUserCoins(coinAward, 0.5);\n            let integralAward: number = rewardIntegral + this.topBar.integral;\n            //* 因积分动画执行顺序慢于金币动画，所以延时执行\n            this.scheduleOnce(() => {\n                this.topBar.setUserIntegral(integralAward, 0.5);\n            }, 1);\n        } else {\n            let coinAward: number = rewardCoins + this.bottomBar.coins;\n            // todo 暂时这样处理\n            if (this.spinResults.slots[0].matchedLines.length > 0) {\n                coinAward = this.spinResults.userCoins;\n            }\n            this.bottomBar.setUserCoins(coinAward, 0.5);\n        }\n\n    }\n    protected bigWinShowEnd(): void {\n        this.bigWinShowEnded = true;\n        this.hasBigWin = false;\n        this.status = SlotGameStageStatus.PrizeShowing;\n    }\n    /**\n     * jp展示，需要重载，展示完成后要调用jackpotShowEnd\n     */\n    protected jackpotShow(jackpotValue): void {\n        console.log(\"jp\");\n        //* 播放jp音效\n        SoundMgr.getInstance().playEffect(\"vo_jackpot\");\n        this.bottomBar.setWinCoins(this.spinResults.winCoins, 1);\n        this.jackpotShowEnd();\n    }\n    protected jackpotShowEnd(): void {\n        this.jackpotShowEnded = true;\n        this.hasJackpot = false\n        this.status = SlotGameStageStatus.PrizeShowing;\n\n        if (this.topBar) {\n            this.topBar.setUserCoins(this.spinResults.userCoins, 1);\n        } else {\n            this.bottomBar.setUserCoins(this.spinResults.userCoins, 1);\n        }\n\n    }\n\n    /**\n     * 进入免费游戏之前调用\n     * @remark\n     * 在这个方法里面可以提示用户获得免费游戏次数等，或者根据trigger里面的wheels展示转盘\n     * 结束后调用enterFreeGame\n     * @param freeTrigger 免费游戏触发器\n     */\n    protected abstract beforeEnterFreeMode(freeTrigger: SpinResultsFreeTrigger): void;\n    protected enterFreeMode(extraData?: any): void {\n        //* 若当前游戏模式为普通模式\n        //* 转场到特殊模式前，底部栏赢得金币数清零\n        if (this.spinResults.gameMode === SpinResultsGameMode.Normal) {\n            this.bottomBar.setWinCoins(0, 0);\n        }\n        this.status = SlotGameStageStatus.Ready;\n    }\n    /**\n     *获得卡片的时候调用\n     * @param cardsData 卡片数据\n     */\n    protected cardViewShow(cardsData: SpinResultsCard[]): void { }\n    /**\n     * 免费模式结束的时候调用\n     *\n     * @param winCoins 赢取金币数\n     * @param totalCount 总次数\n     */\n    protected freeModeFinished(winCoins: number, totalCount: number): void { }\n    /**\n     *\n     * 播放指定位置上的指定配置的spine动效，同时播放，任一播放结束就调用回调\n     * @param positions 播放棋子位置列表：[5,9,10]\n     * @param configName 配置名称\n     * @param callback 回调\n     * @param boardIndex\n     */\n    protected playSpineByConfigAndPositions(\n        boardIndex: number,\n        positions: number[],\n        configName: string,\n        callback?: Function\n    ): void { }\n    private enterFreeModeShowCallback: Function;\n    private enterFreeModeShowCompletedOnce: boolean = false;\n    /**\n     * Plays enter free mode show\n     * 播放进入免费模式的棋子动效\n     * @param [callback] 回调\n     * @param [code] 棋子编码\n     */\n    protected playEnterFreeModeShow(callback?: Function, code?: number): void {\n        this.enterFreeModeShowCallback = callback;\n        let anyShow: boolean = false;\n        this.enterFreeModeShowCompletedOnce = false;\n        for (let i = 0; i < this.symbolBoards.length; i++) {\n            const board = this.symbolBoards[i];\n            if (board.playEnterFreeModeShow(this.enterFreeModeShowCompleted.bind(this), code)) {\n                anyShow = true;\n            }\n        }\n        if (!anyShow && callback) {\n            callback();\n        }\n    }\n    private enterFreeModeShowCompleted(): void {\n        if (this.enterFreeModeShowCallback && !this.enterFreeModeShowCompletedOnce) {\n            this.enterFreeModeShowCompletedOnce = true;\n            this.enterFreeModeShowCallback();\n        }\n    }\n    /**\n     * “暂停”棋盘\n     * 并非是真正的暂停棋盘，而是将转轴一直处于spin状态\n     */\n    protected pauseSymbolBoard(): void {\n        this.symbolBoards.map((item) => {\n            item.waitingResultsStrategy.isPause = true;\n        });\n    }\n    /**\n     * 恢复棋盘\n     * 解除一直处于spin状态，恢复到正常流转的状态\n     */\n    protected continueSymbolBoard(): void {\n        this.symbolBoards.map((item) => {\n            item.waitingResultsStrategy.isPause = false;\n            item.waitingResultsStrategy.isPauseBuffer = true;\n        });\n        //* 点击收集按钮，延时执行金币增长动画\n        // this.scheduleOnce(() => {\n        //     this.topBar.setUserCoins(this._coinAward, 0.5);\n        // }, 1);\n    }\n\n    /**\n     * 获取winType，用于埋点\n     * @param type\n     */\n    protected selectWinType(type: number): string {\n        let typeStr: string = \"\";\n        switch (type) {\n            case 2:\n                typeStr = \"big_win\";\n                break;\n            case 3:\n                typeStr = \"super_win\";\n                break;\n            case 4:\n                typeStr = \"mega_win\";\n                break;\n            default:\n                break;\n        }\n        return typeStr;\n    }\n}\n"]}