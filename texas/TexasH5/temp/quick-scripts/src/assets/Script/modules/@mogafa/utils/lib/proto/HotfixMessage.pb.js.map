{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\utils\\lib\\proto\\HotfixMessage.pb.js"],"names":["protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","HotfixMessage","C2R_Login","p","ks","Object","keys","i","length","prototype","RpcId","Account","Password","create","properties","encode","m","w","hasOwnProperty","call","uint32","string","int32","decode","r","l","c","undefined","len","pos","t","skipType","R2C_Login","Error","Message","Address","Key","userid","C2G_LoginGate","G2C_LoginGate","PlayerId","Long","fromBits","int64","G2C_TestHotfixMessage","Info","C2M_TestActorRequest","ActorId","M2C_TestActorResponse","PlayerInfo","C2G_PlayerInfo","G2C_PlayerInfo","PlayerInfos","TestRepeatedString","TestRepeatedInt32","emptyArray","fork","ldelim","push","c2","module","exports"],"mappings":";;;;AAAA;AACA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB,EACA;;;AACA,IAAIC,OAAO,GAAGF,QAAQ,CAACG,MAAvB;AAAA,IAA+BC,OAAO,GAAGJ,QAAQ,CAACK,MAAlD;AAAA,IAA0DC,KAAK,GAAGN,QAAQ,CAACO,IAA3E,EAEA;;AACA,IAAIC,KAAK,GAAGR,QAAQ,CAACS,KAAT,CAAe,SAAf,MAA8BT,QAAQ,CAACS,KAAT,CAAe,SAAf,IAA4B,EAA1D,CAAZ;;AAEAD,KAAK,CAACE,aAAN,GAAuB,YAAY;AAE/B;AACJ;AACA;AACA;AACA;AACI,MAAIA,aAAa,GAAG,EAApB;;AAEAA,EAAAA,aAAa,CAACC,SAAd,GAA2B,YAAY;AAEnC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQL,IAAAA,SAAS,CAACO,SAAV,CAAoBC,KAApB,GAA4B,CAA5B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQR,IAAAA,SAAS,CAACO,SAAV,CAAoBE,OAApB,GAA8B,EAA9B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQT,IAAAA,SAAS,CAACO,SAAV,CAAoBG,QAApB,GAA+B,EAA/B;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQV,IAAAA,SAAS,CAACW,MAAV,GAAmB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC3C,aAAO,IAAIZ,SAAJ,CAAcY,UAAd,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQZ,IAAAA,SAAS,CAACa,MAAV,GAAmB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACrC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACL,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACL,OAAtB;AACJ,UAAIK,CAAC,CAACJ,QAAF,IAAc,IAAd,IAAsBP,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,UAA9B,CAA1B,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACJ,QAAtB;AACJ,UAAII,CAAC,CAACN,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACN,KAAtB;AACJ,aAAOO,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQf,IAAAA,SAAS,CAACqB,MAAV,GAAmB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACrC,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoBC,SAAxB,EAAjD;;AACA,aAAOsB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACId,YAAAA,CAAC,CAACN,KAAF,GAAUc,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,CAAL;AACIN,YAAAA,CAAC,CAACL,OAAF,GAAYa,CAAC,CAACH,MAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAACJ,QAAF,GAAaY,CAAC,CAACH,MAAF,EAAb;AACA;;AACJ;AACIG,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOd,CAAP;AACH,KAtBD;;AAwBA,WAAOd,SAAP;AACH,GAvHyB,EAA1B;;AAyHAD,EAAAA,aAAa,CAAC+B,SAAd,GAA2B,YAAY;AAEnC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,SAAT,CAAmB7B,CAAnB,EAAsB;AAClB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQyB,IAAAA,SAAS,CAACvB,SAAV,CAAoBC,KAApB,GAA4B,CAA5B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQsB,IAAAA,SAAS,CAACvB,SAAV,CAAoBwB,KAApB,GAA4B,CAA5B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQD,IAAAA,SAAS,CAACvB,SAAV,CAAoByB,OAApB,GAA8B,EAA9B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQF,IAAAA,SAAS,CAACvB,SAAV,CAAoB0B,OAApB,GAA8B,EAA9B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQH,IAAAA,SAAS,CAACvB,SAAV,CAAoB2B,GAApB,GAA0B,EAA1B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQJ,IAAAA,SAAS,CAACvB,SAAV,CAAoB4B,MAApB,GAA6B,CAA7B;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQL,IAAAA,SAAS,CAACnB,MAAV,GAAmB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC3C,aAAO,IAAIkB,SAAJ,CAAclB,UAAd,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQkB,IAAAA,SAAS,CAACjB,MAAV,GAAmB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACrC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACmB,OAAF,IAAa,IAAb,IAAqB9B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACmB,OAAtB;AACJ,UAAInB,CAAC,CAACoB,GAAF,IAAS,IAAT,IAAiB/B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,KAA9B,CAArB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACoB,GAAtB;AACJ,UAAIpB,CAAC,CAACqB,MAAF,IAAY,IAAZ,IAAoBhC,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,QAA9B,CAAxB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaE,KAAb,CAAmBN,CAAC,CAACqB,MAArB;AACJ,UAAIrB,CAAC,CAACN,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACN,KAAtB;AACJ,UAAIM,CAAC,CAACiB,KAAF,IAAW,IAAX,IAAmB5B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACiB,KAAtB;AACJ,UAAIjB,CAAC,CAACkB,OAAF,IAAa,IAAb,IAAqB7B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACkB,OAAvB;AACJ,aAAOjB,CAAP;AACH,KAhBD;AAkBA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQe,IAAAA,SAAS,CAACT,MAAV,GAAmB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACrC,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoB+B,SAAxB,EAAjD;;AACA,aAAOR,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACId,YAAAA,CAAC,CAACN,KAAF,GAAUc,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACiB,KAAF,GAAUT,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,OAAF,GAAYV,CAAC,CAACH,MAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAACmB,OAAF,GAAYX,CAAC,CAACH,MAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAACoB,GAAF,GAAQZ,CAAC,CAACH,MAAF,EAAR;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAACqB,MAAF,GAAWb,CAAC,CAACF,KAAF,EAAX;AACA;;AACJ;AACIE,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AArBR;AAuBH;;AACD,aAAOd,CAAP;AACH,KA/BD;;AAiCA,WAAOgB,SAAP;AACH,GAjKyB,EAA1B;;AAmKA/B,EAAAA,aAAa,CAACqC,aAAd,GAA+B,YAAY;AAEvC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,aAAT,CAAuBnC,CAAvB,EAA0B;AACtB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ+B,IAAAA,aAAa,CAAC7B,SAAd,CAAwBC,KAAxB,GAAgC,CAAhC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ4B,IAAAA,aAAa,CAAC7B,SAAd,CAAwB2B,GAAxB,GAA8B,EAA9B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQE,IAAAA,aAAa,CAAC7B,SAAd,CAAwB4B,MAAxB,GAAiC,CAAjC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQC,IAAAA,aAAa,CAACzB,MAAd,GAAuB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC/C,aAAO,IAAIwB,aAAJ,CAAkBxB,UAAlB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQwB,IAAAA,aAAa,CAACvB,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACoB,GAAF,IAAS,IAAT,IAAiB/B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,KAA9B,CAArB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACoB,GAAtB;AACJ,UAAIpB,CAAC,CAACqB,MAAF,IAAY,IAAZ,IAAoBhC,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,QAA9B,CAAxB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaE,KAAb,CAAmBN,CAAC,CAACqB,MAArB;AACJ,UAAIrB,CAAC,CAACN,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACN,KAAtB;AACJ,aAAOO,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQqB,IAAAA,aAAa,CAACf,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoBqC,aAAxB,EAAjD;;AACA,aAAOd,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACId,YAAAA,CAAC,CAACN,KAAF,GAAUc,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,CAAL;AACIN,YAAAA,CAAC,CAACoB,GAAF,GAAQZ,CAAC,CAACH,MAAF,EAAR;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAACqB,MAAF,GAAWb,CAAC,CAACF,KAAF,EAAX;AACA;;AACJ;AACIE,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOd,CAAP;AACH,KAtBD;;AAwBA,WAAOsB,aAAP;AACH,GAvH6B,EAA9B;;AAyHArC,EAAAA,aAAa,CAACsC,aAAd,GAA+B,YAAY;AAEvC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,aAAT,CAAuBpC,CAAvB,EAA0B;AACtB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQgC,IAAAA,aAAa,CAAC9B,SAAd,CAAwBC,KAAxB,GAAgC,CAAhC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ6B,IAAAA,aAAa,CAAC9B,SAAd,CAAwBwB,KAAxB,GAAgC,CAAhC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQM,IAAAA,aAAa,CAAC9B,SAAd,CAAwByB,OAAxB,GAAkC,EAAlC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQK,IAAAA,aAAa,CAAC9B,SAAd,CAAwB+B,QAAxB,GAAmC3C,KAAK,CAAC4C,IAAN,GAAa5C,KAAK,CAAC4C,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAAnF;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQH,IAAAA,aAAa,CAAC1B,MAAd,GAAuB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC/C,aAAO,IAAIyB,aAAJ,CAAkBzB,UAAlB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQyB,IAAAA,aAAa,CAACxB,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACwB,QAAF,IAAc,IAAd,IAAsBnC,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,UAA9B,CAA1B,EACIC,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYuB,KAAZ,CAAkB3B,CAAC,CAACwB,QAApB;AACJ,UAAIxB,CAAC,CAACN,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACN,KAAtB;AACJ,UAAIM,CAAC,CAACiB,KAAF,IAAW,IAAX,IAAmB5B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACiB,KAAtB;AACJ,UAAIjB,CAAC,CAACkB,OAAF,IAAa,IAAb,IAAqB7B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACkB,OAAvB;AACJ,aAAOjB,CAAP;AACH,KAZD;AAcA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQsB,IAAAA,aAAa,CAAChB,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoBsC,aAAxB,EAAjD;;AACA,aAAOf,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACId,YAAAA,CAAC,CAACN,KAAF,GAAUc,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACiB,KAAF,GAAUT,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,OAAF,GAAYV,CAAC,CAACH,MAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAACwB,QAAF,GAAahB,CAAC,CAACmB,KAAF,EAAb;AACA;;AACJ;AACInB,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAfR;AAiBH;;AACD,aAAOd,CAAP;AACH,KAzBD;;AA2BA,WAAOuB,aAAP;AACH,GArI6B,EAA9B;;AAuIAtC,EAAAA,aAAa,CAAC2C,qBAAd,GAAuC,YAAY;AAE/C;AACR;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,qBAAT,CAA+BzC,CAA/B,EAAkC;AAC9B,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQqC,IAAAA,qBAAqB,CAACnC,SAAtB,CAAgCoC,IAAhC,GAAuC,EAAvC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQD,IAAAA,qBAAqB,CAAC/B,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACvD,aAAO,IAAI8B,qBAAJ,CAA0B9B,UAA1B,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ8B,IAAAA,qBAAqB,CAAC7B,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjD,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAAC6B,IAAF,IAAU,IAAV,IAAkBxC,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,MAA9B,CAAtB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAAC6B,IAAtB;AACJ,aAAO5B,CAAP;AACH,KAND;AAQA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ2B,IAAAA,qBAAqB,CAACrB,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjD,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoB2C,qBAAxB,EAAjD;;AACA,aAAOpB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,CAAL;AACId,YAAAA,CAAC,CAAC6B,IAAF,GAASrB,CAAC,CAACH,MAAF,EAAT;AACA;;AACJ;AACIG,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AANR;AAQH;;AACD,aAAOd,CAAP;AACH,KAhBD;;AAkBA,WAAO4B,qBAAP;AACH,GA3FqC,EAAtC;;AA6FA3C,EAAAA,aAAa,CAAC6C,oBAAd,GAAsC,YAAY;AAE9C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,oBAAT,CAA8B3C,CAA9B,EAAiC;AAC7B,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQuC,IAAAA,oBAAoB,CAACrC,SAArB,CAA+BC,KAA/B,GAAuC,CAAvC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQoC,IAAAA,oBAAoB,CAACrC,SAArB,CAA+BsC,OAA/B,GAAyClD,KAAK,CAAC4C,IAAN,GAAa5C,KAAK,CAAC4C,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAAzF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQI,IAAAA,oBAAoB,CAACrC,SAArB,CAA+BoC,IAA/B,GAAsC,EAAtC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQC,IAAAA,oBAAoB,CAACjC,MAArB,GAA8B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACtD,aAAO,IAAIgC,oBAAJ,CAAyBhC,UAAzB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQgC,IAAAA,oBAAoB,CAAC/B,MAArB,GAA8B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAChD,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAAC6B,IAAF,IAAU,IAAV,IAAkBxC,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,MAA9B,CAAtB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAAC6B,IAAtB;AACJ,UAAI7B,CAAC,CAACN,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACN,KAAtB;AACJ,UAAIM,CAAC,CAAC+B,OAAF,IAAa,IAAb,IAAqB1C,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcuB,KAAd,CAAoB3B,CAAC,CAAC+B,OAAtB;AACJ,aAAO9B,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ6B,IAAAA,oBAAoB,CAACvB,MAArB,GAA8B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAChD,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoB6C,oBAAxB,EAAjD;;AACA,aAAOtB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACId,YAAAA,CAAC,CAACN,KAAF,GAAUc,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAAC+B,OAAF,GAAYvB,CAAC,CAACmB,KAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACI3B,YAAAA,CAAC,CAAC6B,IAAF,GAASrB,CAAC,CAACH,MAAF,EAAT;AACA;;AACJ;AACIG,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOd,CAAP;AACH,KAtBD;;AAwBA,WAAO8B,oBAAP;AACH,GAvHoC,EAArC;;AAyHA7C,EAAAA,aAAa,CAAC+C,qBAAd,GAAuC,YAAY;AAE/C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,qBAAT,CAA+B7C,CAA/B,EAAkC;AAC9B,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQyC,IAAAA,qBAAqB,CAACvC,SAAtB,CAAgCC,KAAhC,GAAwC,CAAxC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQsC,IAAAA,qBAAqB,CAACvC,SAAtB,CAAgCwB,KAAhC,GAAwC,CAAxC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQe,IAAAA,qBAAqB,CAACvC,SAAtB,CAAgCyB,OAAhC,GAA0C,EAA1C;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQc,IAAAA,qBAAqB,CAACvC,SAAtB,CAAgCoC,IAAhC,GAAuC,EAAvC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQG,IAAAA,qBAAqB,CAACnC,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACvD,aAAO,IAAIkC,qBAAJ,CAA0BlC,UAA1B,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQkC,IAAAA,qBAAqB,CAACjC,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjD,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAAC6B,IAAF,IAAU,IAAV,IAAkBxC,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,MAA9B,CAAtB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAAC6B,IAAtB;AACJ,UAAI7B,CAAC,CAACN,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACN,KAAtB;AACJ,UAAIM,CAAC,CAACiB,KAAF,IAAW,IAAX,IAAmB5B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACiB,KAAtB;AACJ,UAAIjB,CAAC,CAACkB,OAAF,IAAa,IAAb,IAAqB7B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACkB,OAAvB;AACJ,aAAOjB,CAAP;AACH,KAZD;AAcA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ+B,IAAAA,qBAAqB,CAACzB,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjD,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoB+C,qBAAxB,EAAjD;;AACA,aAAOxB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACId,YAAAA,CAAC,CAACN,KAAF,GAAUc,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACiB,KAAF,GAAUT,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,OAAF,GAAYV,CAAC,CAACH,MAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAAC6B,IAAF,GAASrB,CAAC,CAACH,MAAF,EAAT;AACA;;AACJ;AACIG,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAfR;AAiBH;;AACD,aAAOd,CAAP;AACH,KAzBD;;AA2BA,WAAOgC,qBAAP;AACH,GArIqC,EAAtC;;AAuIA/C,EAAAA,aAAa,CAACgD,UAAd,GAA4B,YAAY;AAEpC;AACR;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,UAAT,CAAoB9C,CAApB,EAAuB;AACnB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ0C,IAAAA,UAAU,CAACxC,SAAX,CAAqBC,KAArB,GAA6B,CAA7B;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQuC,IAAAA,UAAU,CAACpC,MAAX,GAAoB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC5C,aAAO,IAAImC,UAAJ,CAAenC,UAAf,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQmC,IAAAA,UAAU,CAAClC,MAAX,GAAoB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACtC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACN,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACN,KAAtB;AACJ,aAAOO,CAAP;AACH,KAND;AAQA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQgC,IAAAA,UAAU,CAAC1B,MAAX,GAAoB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACtC,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoBgD,UAAxB,EAAjD;;AACA,aAAOzB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACId,YAAAA,CAAC,CAACN,KAAF,GAAUc,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ;AACIE,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AANR;AAQH;;AACD,aAAOd,CAAP;AACH,KAhBD;;AAkBA,WAAOiC,UAAP;AACH,GA3F0B,EAA3B;;AA6FAhD,EAAAA,aAAa,CAACiD,cAAd,GAAgC,YAAY;AAExC;AACR;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,cAAT,CAAwB/C,CAAxB,EAA2B;AACvB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ2C,IAAAA,cAAc,CAACzC,SAAf,CAAyBC,KAAzB,GAAiC,CAAjC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQwC,IAAAA,cAAc,CAACrC,MAAf,GAAwB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAChD,aAAO,IAAIoC,cAAJ,CAAmBpC,UAAnB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQoC,IAAAA,cAAc,CAACnC,MAAf,GAAwB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC1C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACN,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACN,KAAtB;AACJ,aAAOO,CAAP;AACH,KAND;AAQA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQiC,IAAAA,cAAc,CAAC3B,MAAf,GAAwB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC1C,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoBiD,cAAxB,EAAjD;;AACA,aAAO1B,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACId,YAAAA,CAAC,CAACN,KAAF,GAAUc,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ;AACIE,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AANR;AAQH;;AACD,aAAOd,CAAP;AACH,KAhBD;;AAkBA,WAAOkC,cAAP;AACH,GA3F8B,EAA/B;;AA6FAjD,EAAAA,aAAa,CAACkD,cAAd,GAAgC,YAAY;AAExC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,cAAT,CAAwBhD,CAAxB,EAA2B;AACvB,WAAKiD,WAAL,GAAmB,EAAnB;AACA,WAAKC,kBAAL,GAA0B,EAA1B;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAInD,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ4C,IAAAA,cAAc,CAAC1C,SAAf,CAAyBC,KAAzB,GAAiC,CAAjC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQyC,IAAAA,cAAc,CAAC1C,SAAf,CAAyBwB,KAAzB,GAAiC,CAAjC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQkB,IAAAA,cAAc,CAAC1C,SAAf,CAAyByB,OAAzB,GAAmC,EAAnC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQiB,IAAAA,cAAc,CAAC1C,SAAf,CAAyBwC,UAAzB,GAAsC,IAAtC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQE,IAAAA,cAAc,CAAC1C,SAAf,CAAyB2C,WAAzB,GAAuCvD,KAAK,CAAC0D,UAA7C;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQJ,IAAAA,cAAc,CAAC1C,SAAf,CAAyB4C,kBAAzB,GAA8CxD,KAAK,CAAC0D,UAApD;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQJ,IAAAA,cAAc,CAAC1C,SAAf,CAAyB6C,iBAAzB,GAA6CzD,KAAK,CAAC0D,UAAnD;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQJ,IAAAA,cAAc,CAACtC,MAAf,GAAwB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAChD,aAAO,IAAIqC,cAAJ,CAAmBrC,UAAnB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQqC,IAAAA,cAAc,CAACpC,MAAf,GAAwB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC1C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGtB,OAAO,CAACkB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACiC,UAAF,IAAgB,IAAhB,IAAwB5C,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,YAA9B,CAA5B,EACIjB,KAAK,CAACE,aAAN,CAAoBgD,UAApB,CAA+BlC,MAA/B,CAAsCC,CAAC,CAACiC,UAAxC,EAAoDhC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaoC,IAAb,EAApD,EAAyEC,MAAzE;;AACJ,UAAIzC,CAAC,CAACoC,WAAF,IAAiB,IAAjB,IAAyBpC,CAAC,CAACoC,WAAF,CAAc5C,MAA3C,EAAmD;AAC/C,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,CAAC,CAACoC,WAAF,CAAc5C,MAAlC,EAA0C,EAAED,CAA5C;AACIR,UAAAA,KAAK,CAACE,aAAN,CAAoBgD,UAApB,CAA+BlC,MAA/B,CAAsCC,CAAC,CAACoC,WAAF,CAAc7C,CAAd,CAAtC,EAAwDU,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaoC,IAAb,EAAxD,EAA6EC,MAA7E;AADJ;AAEH;;AACD,UAAIzC,CAAC,CAACqC,kBAAF,IAAwB,IAAxB,IAAgCrC,CAAC,CAACqC,kBAAF,CAAqB7C,MAAzD,EAAiE;AAC7D,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,CAAC,CAACqC,kBAAF,CAAqB7C,MAAzC,EAAiD,EAAED,CAAnD;AACIU,UAAAA,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACqC,kBAAF,CAAqB9C,CAArB,CAApB;AADJ;AAEH;;AACD,UAAIS,CAAC,CAACsC,iBAAF,IAAuB,IAAvB,IAA+BtC,CAAC,CAACsC,iBAAF,CAAoB9C,MAAvD,EAA+D;AAC3DS,QAAAA,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaoC,IAAb;;AACA,aAAK,IAAIjD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,CAAC,CAACsC,iBAAF,CAAoB9C,MAAxC,EAAgD,EAAED,CAAlD;AACIU,UAAAA,CAAC,CAACK,KAAF,CAAQN,CAAC,CAACsC,iBAAF,CAAoB/C,CAApB,CAAR;AADJ;;AAEAU,QAAAA,CAAC,CAACwC,MAAF;AACH;;AACD,UAAIzC,CAAC,CAACN,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACN,KAAtB;AACJ,UAAIM,CAAC,CAACiB,KAAF,IAAW,IAAX,IAAmB5B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACiB,KAAtB;AACJ,UAAIjB,CAAC,CAACkB,OAAF,IAAa,IAAb,IAAqB7B,MAAM,CAACa,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACkB,OAAvB;AACJ,aAAOjB,CAAP;AACH,KA1BD;AA4BA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQkC,IAAAA,cAAc,CAAC5B,MAAf,GAAwB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC1C,UAAI,EAAED,CAAC,YAAY/B,OAAf,CAAJ,EACI+B,CAAC,GAAG/B,OAAO,CAACoB,MAAR,CAAeW,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CT,CAAC,GAAG,IAAIjB,KAAK,CAACE,aAAN,CAAoBkD,cAAxB,EAAjD;;AACA,aAAO3B,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACJ,MAAF,EAAR;;AACA,gBAAQU,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACId,YAAAA,CAAC,CAACN,KAAF,GAAUc,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACiB,KAAF,GAAUT,CAAC,CAACF,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,OAAF,GAAYV,CAAC,CAACH,MAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAACiC,UAAF,GAAelD,KAAK,CAACE,aAAN,CAAoBgD,UAApB,CAA+B1B,MAA/B,CAAsCC,CAAtC,EAAyCA,CAAC,CAACJ,MAAF,EAAzC,CAAf;AACA;;AACJ,eAAK,CAAL;AACI,gBAAI,EAAEJ,CAAC,CAACoC,WAAF,IAAiBpC,CAAC,CAACoC,WAAF,CAAc5C,MAAjC,CAAJ,EACIQ,CAAC,CAACoC,WAAF,GAAgB,EAAhB;AACJpC,YAAAA,CAAC,CAACoC,WAAF,CAAcM,IAAd,CAAmB3D,KAAK,CAACE,aAAN,CAAoBgD,UAApB,CAA+B1B,MAA/B,CAAsCC,CAAtC,EAAyCA,CAAC,CAACJ,MAAF,EAAzC,CAAnB;AACA;;AACJ,eAAK,CAAL;AACI,gBAAI,EAAEJ,CAAC,CAACqC,kBAAF,IAAwBrC,CAAC,CAACqC,kBAAF,CAAqB7C,MAA/C,CAAJ,EACIQ,CAAC,CAACqC,kBAAF,GAAuB,EAAvB;AACJrC,YAAAA,CAAC,CAACqC,kBAAF,CAAqBK,IAArB,CAA0BlC,CAAC,CAACH,MAAF,EAA1B;AACA;;AACJ,eAAK,CAAL;AACI,gBAAI,EAAEL,CAAC,CAACsC,iBAAF,IAAuBtC,CAAC,CAACsC,iBAAF,CAAoB9C,MAA7C,CAAJ,EACIQ,CAAC,CAACsC,iBAAF,GAAsB,EAAtB;;AACJ,gBAAI,CAACxB,CAAC,GAAG,CAAL,MAAY,CAAhB,EAAmB;AACf,kBAAI6B,EAAE,GAAGnC,CAAC,CAACJ,MAAF,KAAaI,CAAC,CAACK,GAAxB;;AACA,qBAAOL,CAAC,CAACK,GAAF,GAAQ8B,EAAf;AACI3C,gBAAAA,CAAC,CAACsC,iBAAF,CAAoBI,IAApB,CAAyBlC,CAAC,CAACF,KAAF,EAAzB;AADJ;AAEH,aAJD,MAKIN,CAAC,CAACsC,iBAAF,CAAoBI,IAApB,CAAyBlC,CAAC,CAACF,KAAF,EAAzB;;AACJ;;AACJ;AACIE,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAnCR;AAqCH;;AACD,aAAOd,CAAP;AACH,KA7CD;;AA+CA,WAAOmC,cAAP;AACH,GArM8B,EAA/B;;AAuMA,SAAOlD,aAAP;AACH,CApwCqB,EAAtB;;AAswCA2D,MAAM,CAACC,OAAP,GAAiB9D,KAAjB","sourceRoot":"/","sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\nvar protobuf = require(\"protobufjs\");\n// Common aliases\nvar $Reader = protobuf.Reader, $Writer = protobuf.Writer, $util = protobuf.util;\n\n// Exported root namespace\nvar $root = protobuf.roots[\"default\"] || (protobuf.roots[\"default\"] = {});\n\n$root.HotfixMessage = (function () {\n\n    /**\n     * Namespace HotfixMessage.\n     * @exports HotfixMessage\n     * @namespace\n     */\n    var HotfixMessage = {};\n\n    HotfixMessage.C2R_Login = (function () {\n\n        /**\n         * Properties of a C2R_Login.\n         * @memberof HotfixMessage\n         * @interface IC2R_Login\n         * @property {number|null} [RpcId] C2R_Login RpcId\n         * @property {string|null} [Account] C2R_Login Account\n         * @property {string|null} [Password] C2R_Login Password\n         */\n\n        /**\n         * Constructs a new C2R_Login.\n         * @memberof HotfixMessage\n         * @classdesc Represents a C2R_Login.\n         * @implements IC2R_Login\n         * @constructor\n         * @param {HotfixMessage.IC2R_Login=} [p] Properties to set\n         */\n        function C2R_Login(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2R_Login RpcId.\n         * @member {number} RpcId\n         * @memberof HotfixMessage.C2R_Login\n         * @instance\n         */\n        C2R_Login.prototype.RpcId = 0;\n\n        /**\n         * C2R_Login Account.\n         * @member {string} Account\n         * @memberof HotfixMessage.C2R_Login\n         * @instance\n         */\n        C2R_Login.prototype.Account = \"\";\n\n        /**\n         * C2R_Login Password.\n         * @member {string} Password\n         * @memberof HotfixMessage.C2R_Login\n         * @instance\n         */\n        C2R_Login.prototype.Password = \"\";\n\n        /**\n         * Creates a new C2R_Login instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.C2R_Login\n         * @static\n         * @param {HotfixMessage.IC2R_Login=} [properties] Properties to set\n         * @returns {HotfixMessage.C2R_Login} C2R_Login instance\n         */\n        C2R_Login.create = function create(properties) {\n            return new C2R_Login(properties);\n        };\n\n        /**\n         * Encodes the specified C2R_Login message. Does not implicitly {@link HotfixMessage.C2R_Login.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.C2R_Login\n         * @static\n         * @param {HotfixMessage.IC2R_Login} m C2R_Login message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2R_Login.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Account != null && Object.hasOwnProperty.call(m, \"Account\"))\n                w.uint32(10).string(m.Account);\n            if (m.Password != null && Object.hasOwnProperty.call(m, \"Password\"))\n                w.uint32(18).string(m.Password);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2R_Login message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.C2R_Login\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.C2R_Login} C2R_Login\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2R_Login.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.C2R_Login();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 1:\n                        m.Account = r.string();\n                        break;\n                    case 2:\n                        m.Password = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2R_Login;\n    })();\n\n    HotfixMessage.R2C_Login = (function () {\n\n        /**\n         * Properties of a R2C_Login.\n         * @memberof HotfixMessage\n         * @interface IR2C_Login\n         * @property {number|null} [RpcId] R2C_Login RpcId\n         * @property {number|null} [Error] R2C_Login Error\n         * @property {string|null} [Message] R2C_Login Message\n         * @property {string|null} [Address] R2C_Login Address\n         * @property {string|null} [Key] R2C_Login Key\n         * @property {number|null} [userid] R2C_Login userid\n         */\n\n        /**\n         * Constructs a new R2C_Login.\n         * @memberof HotfixMessage\n         * @classdesc Represents a R2C_Login.\n         * @implements IR2C_Login\n         * @constructor\n         * @param {HotfixMessage.IR2C_Login=} [p] Properties to set\n         */\n        function R2C_Login(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * R2C_Login RpcId.\n         * @member {number} RpcId\n         * @memberof HotfixMessage.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.RpcId = 0;\n\n        /**\n         * R2C_Login Error.\n         * @member {number} Error\n         * @memberof HotfixMessage.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.Error = 0;\n\n        /**\n         * R2C_Login Message.\n         * @member {string} Message\n         * @memberof HotfixMessage.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.Message = \"\";\n\n        /**\n         * R2C_Login Address.\n         * @member {string} Address\n         * @memberof HotfixMessage.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.Address = \"\";\n\n        /**\n         * R2C_Login Key.\n         * @member {string} Key\n         * @memberof HotfixMessage.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.Key = \"\";\n\n        /**\n         * R2C_Login userid.\n         * @member {number} userid\n         * @memberof HotfixMessage.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.userid = 0;\n\n        /**\n         * Creates a new R2C_Login instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.R2C_Login\n         * @static\n         * @param {HotfixMessage.IR2C_Login=} [properties] Properties to set\n         * @returns {HotfixMessage.R2C_Login} R2C_Login instance\n         */\n        R2C_Login.create = function create(properties) {\n            return new R2C_Login(properties);\n        };\n\n        /**\n         * Encodes the specified R2C_Login message. Does not implicitly {@link HotfixMessage.R2C_Login.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.R2C_Login\n         * @static\n         * @param {HotfixMessage.IR2C_Login} m R2C_Login message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        R2C_Login.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Address != null && Object.hasOwnProperty.call(m, \"Address\"))\n                w.uint32(10).string(m.Address);\n            if (m.Key != null && Object.hasOwnProperty.call(m, \"Key\"))\n                w.uint32(18).string(m.Key);\n            if (m.userid != null && Object.hasOwnProperty.call(m, \"userid\"))\n                w.uint32(24).int32(m.userid);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a R2C_Login message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.R2C_Login\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.R2C_Login} R2C_Login\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        R2C_Login.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.R2C_Login();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    case 1:\n                        m.Address = r.string();\n                        break;\n                    case 2:\n                        m.Key = r.string();\n                        break;\n                    case 3:\n                        m.userid = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return R2C_Login;\n    })();\n\n    HotfixMessage.C2G_LoginGate = (function () {\n\n        /**\n         * Properties of a C2G_LoginGate.\n         * @memberof HotfixMessage\n         * @interface IC2G_LoginGate\n         * @property {number|null} [RpcId] C2G_LoginGate RpcId\n         * @property {string|null} [Key] C2G_LoginGate Key\n         * @property {number|null} [userid] C2G_LoginGate userid\n         */\n\n        /**\n         * Constructs a new C2G_LoginGate.\n         * @memberof HotfixMessage\n         * @classdesc Represents a C2G_LoginGate.\n         * @implements IC2G_LoginGate\n         * @constructor\n         * @param {HotfixMessage.IC2G_LoginGate=} [p] Properties to set\n         */\n        function C2G_LoginGate(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2G_LoginGate RpcId.\n         * @member {number} RpcId\n         * @memberof HotfixMessage.C2G_LoginGate\n         * @instance\n         */\n        C2G_LoginGate.prototype.RpcId = 0;\n\n        /**\n         * C2G_LoginGate Key.\n         * @member {string} Key\n         * @memberof HotfixMessage.C2G_LoginGate\n         * @instance\n         */\n        C2G_LoginGate.prototype.Key = \"\";\n\n        /**\n         * C2G_LoginGate userid.\n         * @member {number} userid\n         * @memberof HotfixMessage.C2G_LoginGate\n         * @instance\n         */\n        C2G_LoginGate.prototype.userid = 0;\n\n        /**\n         * Creates a new C2G_LoginGate instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.C2G_LoginGate\n         * @static\n         * @param {HotfixMessage.IC2G_LoginGate=} [properties] Properties to set\n         * @returns {HotfixMessage.C2G_LoginGate} C2G_LoginGate instance\n         */\n        C2G_LoginGate.create = function create(properties) {\n            return new C2G_LoginGate(properties);\n        };\n\n        /**\n         * Encodes the specified C2G_LoginGate message. Does not implicitly {@link HotfixMessage.C2G_LoginGate.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.C2G_LoginGate\n         * @static\n         * @param {HotfixMessage.IC2G_LoginGate} m C2G_LoginGate message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_LoginGate.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Key != null && Object.hasOwnProperty.call(m, \"Key\"))\n                w.uint32(10).string(m.Key);\n            if (m.userid != null && Object.hasOwnProperty.call(m, \"userid\"))\n                w.uint32(24).int32(m.userid);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2G_LoginGate message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.C2G_LoginGate\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.C2G_LoginGate} C2G_LoginGate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_LoginGate.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.C2G_LoginGate();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 1:\n                        m.Key = r.string();\n                        break;\n                    case 3:\n                        m.userid = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2G_LoginGate;\n    })();\n\n    HotfixMessage.G2C_LoginGate = (function () {\n\n        /**\n         * Properties of a G2C_LoginGate.\n         * @memberof HotfixMessage\n         * @interface IG2C_LoginGate\n         * @property {number|null} [RpcId] G2C_LoginGate RpcId\n         * @property {number|null} [Error] G2C_LoginGate Error\n         * @property {string|null} [Message] G2C_LoginGate Message\n         * @property {Long|null} [PlayerId] G2C_LoginGate PlayerId\n         */\n\n        /**\n         * Constructs a new G2C_LoginGate.\n         * @memberof HotfixMessage\n         * @classdesc Represents a G2C_LoginGate.\n         * @implements IG2C_LoginGate\n         * @constructor\n         * @param {HotfixMessage.IG2C_LoginGate=} [p] Properties to set\n         */\n        function G2C_LoginGate(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * G2C_LoginGate RpcId.\n         * @member {number} RpcId\n         * @memberof HotfixMessage.G2C_LoginGate\n         * @instance\n         */\n        G2C_LoginGate.prototype.RpcId = 0;\n\n        /**\n         * G2C_LoginGate Error.\n         * @member {number} Error\n         * @memberof HotfixMessage.G2C_LoginGate\n         * @instance\n         */\n        G2C_LoginGate.prototype.Error = 0;\n\n        /**\n         * G2C_LoginGate Message.\n         * @member {string} Message\n         * @memberof HotfixMessage.G2C_LoginGate\n         * @instance\n         */\n        G2C_LoginGate.prototype.Message = \"\";\n\n        /**\n         * G2C_LoginGate PlayerId.\n         * @member {Long} PlayerId\n         * @memberof HotfixMessage.G2C_LoginGate\n         * @instance\n         */\n        G2C_LoginGate.prototype.PlayerId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * Creates a new G2C_LoginGate instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.G2C_LoginGate\n         * @static\n         * @param {HotfixMessage.IG2C_LoginGate=} [properties] Properties to set\n         * @returns {HotfixMessage.G2C_LoginGate} G2C_LoginGate instance\n         */\n        G2C_LoginGate.create = function create(properties) {\n            return new G2C_LoginGate(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_LoginGate message. Does not implicitly {@link HotfixMessage.G2C_LoginGate.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.G2C_LoginGate\n         * @static\n         * @param {HotfixMessage.IG2C_LoginGate} m G2C_LoginGate message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_LoginGate.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.PlayerId != null && Object.hasOwnProperty.call(m, \"PlayerId\"))\n                w.uint32(8).int64(m.PlayerId);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a G2C_LoginGate message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.G2C_LoginGate\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.G2C_LoginGate} G2C_LoginGate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_LoginGate.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.G2C_LoginGate();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    case 1:\n                        m.PlayerId = r.int64();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return G2C_LoginGate;\n    })();\n\n    HotfixMessage.G2C_TestHotfixMessage = (function () {\n\n        /**\n         * Properties of a G2C_TestHotfixMessage.\n         * @memberof HotfixMessage\n         * @interface IG2C_TestHotfixMessage\n         * @property {string|null} [Info] G2C_TestHotfixMessage Info\n         */\n\n        /**\n         * Constructs a new G2C_TestHotfixMessage.\n         * @memberof HotfixMessage\n         * @classdesc Represents a G2C_TestHotfixMessage.\n         * @implements IG2C_TestHotfixMessage\n         * @constructor\n         * @param {HotfixMessage.IG2C_TestHotfixMessage=} [p] Properties to set\n         */\n        function G2C_TestHotfixMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * G2C_TestHotfixMessage Info.\n         * @member {string} Info\n         * @memberof HotfixMessage.G2C_TestHotfixMessage\n         * @instance\n         */\n        G2C_TestHotfixMessage.prototype.Info = \"\";\n\n        /**\n         * Creates a new G2C_TestHotfixMessage instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.G2C_TestHotfixMessage\n         * @static\n         * @param {HotfixMessage.IG2C_TestHotfixMessage=} [properties] Properties to set\n         * @returns {HotfixMessage.G2C_TestHotfixMessage} G2C_TestHotfixMessage instance\n         */\n        G2C_TestHotfixMessage.create = function create(properties) {\n            return new G2C_TestHotfixMessage(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_TestHotfixMessage message. Does not implicitly {@link HotfixMessage.G2C_TestHotfixMessage.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.G2C_TestHotfixMessage\n         * @static\n         * @param {HotfixMessage.IG2C_TestHotfixMessage} m G2C_TestHotfixMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_TestHotfixMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Info != null && Object.hasOwnProperty.call(m, \"Info\"))\n                w.uint32(10).string(m.Info);\n            return w;\n        };\n\n        /**\n         * Decodes a G2C_TestHotfixMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.G2C_TestHotfixMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.G2C_TestHotfixMessage} G2C_TestHotfixMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_TestHotfixMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.G2C_TestHotfixMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.Info = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return G2C_TestHotfixMessage;\n    })();\n\n    HotfixMessage.C2M_TestActorRequest = (function () {\n\n        /**\n         * Properties of a C2M_TestActorRequest.\n         * @memberof HotfixMessage\n         * @interface IC2M_TestActorRequest\n         * @property {number|null} [RpcId] C2M_TestActorRequest RpcId\n         * @property {Long|null} [ActorId] C2M_TestActorRequest ActorId\n         * @property {string|null} [Info] C2M_TestActorRequest Info\n         */\n\n        /**\n         * Constructs a new C2M_TestActorRequest.\n         * @memberof HotfixMessage\n         * @classdesc Represents a C2M_TestActorRequest.\n         * @implements IC2M_TestActorRequest\n         * @constructor\n         * @param {HotfixMessage.IC2M_TestActorRequest=} [p] Properties to set\n         */\n        function C2M_TestActorRequest(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2M_TestActorRequest RpcId.\n         * @member {number} RpcId\n         * @memberof HotfixMessage.C2M_TestActorRequest\n         * @instance\n         */\n        C2M_TestActorRequest.prototype.RpcId = 0;\n\n        /**\n         * C2M_TestActorRequest ActorId.\n         * @member {Long} ActorId\n         * @memberof HotfixMessage.C2M_TestActorRequest\n         * @instance\n         */\n        C2M_TestActorRequest.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * C2M_TestActorRequest Info.\n         * @member {string} Info\n         * @memberof HotfixMessage.C2M_TestActorRequest\n         * @instance\n         */\n        C2M_TestActorRequest.prototype.Info = \"\";\n\n        /**\n         * Creates a new C2M_TestActorRequest instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.C2M_TestActorRequest\n         * @static\n         * @param {HotfixMessage.IC2M_TestActorRequest=} [properties] Properties to set\n         * @returns {HotfixMessage.C2M_TestActorRequest} C2M_TestActorRequest instance\n         */\n        C2M_TestActorRequest.create = function create(properties) {\n            return new C2M_TestActorRequest(properties);\n        };\n\n        /**\n         * Encodes the specified C2M_TestActorRequest message. Does not implicitly {@link HotfixMessage.C2M_TestActorRequest.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.C2M_TestActorRequest\n         * @static\n         * @param {HotfixMessage.IC2M_TestActorRequest} m C2M_TestActorRequest message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2M_TestActorRequest.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Info != null && Object.hasOwnProperty.call(m, \"Info\"))\n                w.uint32(10).string(m.Info);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(728).int64(m.ActorId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2M_TestActorRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.C2M_TestActorRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.C2M_TestActorRequest} C2M_TestActorRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2M_TestActorRequest.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.C2M_TestActorRequest();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.ActorId = r.int64();\n                        break;\n                    case 1:\n                        m.Info = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2M_TestActorRequest;\n    })();\n\n    HotfixMessage.M2C_TestActorResponse = (function () {\n\n        /**\n         * Properties of a M2C_TestActorResponse.\n         * @memberof HotfixMessage\n         * @interface IM2C_TestActorResponse\n         * @property {number|null} [RpcId] M2C_TestActorResponse RpcId\n         * @property {number|null} [Error] M2C_TestActorResponse Error\n         * @property {string|null} [Message] M2C_TestActorResponse Message\n         * @property {string|null} [Info] M2C_TestActorResponse Info\n         */\n\n        /**\n         * Constructs a new M2C_TestActorResponse.\n         * @memberof HotfixMessage\n         * @classdesc Represents a M2C_TestActorResponse.\n         * @implements IM2C_TestActorResponse\n         * @constructor\n         * @param {HotfixMessage.IM2C_TestActorResponse=} [p] Properties to set\n         */\n        function M2C_TestActorResponse(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * M2C_TestActorResponse RpcId.\n         * @member {number} RpcId\n         * @memberof HotfixMessage.M2C_TestActorResponse\n         * @instance\n         */\n        M2C_TestActorResponse.prototype.RpcId = 0;\n\n        /**\n         * M2C_TestActorResponse Error.\n         * @member {number} Error\n         * @memberof HotfixMessage.M2C_TestActorResponse\n         * @instance\n         */\n        M2C_TestActorResponse.prototype.Error = 0;\n\n        /**\n         * M2C_TestActorResponse Message.\n         * @member {string} Message\n         * @memberof HotfixMessage.M2C_TestActorResponse\n         * @instance\n         */\n        M2C_TestActorResponse.prototype.Message = \"\";\n\n        /**\n         * M2C_TestActorResponse Info.\n         * @member {string} Info\n         * @memberof HotfixMessage.M2C_TestActorResponse\n         * @instance\n         */\n        M2C_TestActorResponse.prototype.Info = \"\";\n\n        /**\n         * Creates a new M2C_TestActorResponse instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.M2C_TestActorResponse\n         * @static\n         * @param {HotfixMessage.IM2C_TestActorResponse=} [properties] Properties to set\n         * @returns {HotfixMessage.M2C_TestActorResponse} M2C_TestActorResponse instance\n         */\n        M2C_TestActorResponse.create = function create(properties) {\n            return new M2C_TestActorResponse(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_TestActorResponse message. Does not implicitly {@link HotfixMessage.M2C_TestActorResponse.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.M2C_TestActorResponse\n         * @static\n         * @param {HotfixMessage.IM2C_TestActorResponse} m M2C_TestActorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_TestActorResponse.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Info != null && Object.hasOwnProperty.call(m, \"Info\"))\n                w.uint32(10).string(m.Info);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a M2C_TestActorResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.M2C_TestActorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.M2C_TestActorResponse} M2C_TestActorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_TestActorResponse.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.M2C_TestActorResponse();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    case 1:\n                        m.Info = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return M2C_TestActorResponse;\n    })();\n\n    HotfixMessage.PlayerInfo = (function () {\n\n        /**\n         * Properties of a PlayerInfo.\n         * @memberof HotfixMessage\n         * @interface IPlayerInfo\n         * @property {number|null} [RpcId] PlayerInfo RpcId\n         */\n\n        /**\n         * Constructs a new PlayerInfo.\n         * @memberof HotfixMessage\n         * @classdesc Represents a PlayerInfo.\n         * @implements IPlayerInfo\n         * @constructor\n         * @param {HotfixMessage.IPlayerInfo=} [p] Properties to set\n         */\n        function PlayerInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PlayerInfo RpcId.\n         * @member {number} RpcId\n         * @memberof HotfixMessage.PlayerInfo\n         * @instance\n         */\n        PlayerInfo.prototype.RpcId = 0;\n\n        /**\n         * Creates a new PlayerInfo instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.PlayerInfo\n         * @static\n         * @param {HotfixMessage.IPlayerInfo=} [properties] Properties to set\n         * @returns {HotfixMessage.PlayerInfo} PlayerInfo instance\n         */\n        PlayerInfo.create = function create(properties) {\n            return new PlayerInfo(properties);\n        };\n\n        /**\n         * Encodes the specified PlayerInfo message. Does not implicitly {@link HotfixMessage.PlayerInfo.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.PlayerInfo\n         * @static\n         * @param {HotfixMessage.IPlayerInfo} m PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PlayerInfo.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            return w;\n        };\n\n        /**\n         * Decodes a PlayerInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.PlayerInfo} PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PlayerInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.PlayerInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return PlayerInfo;\n    })();\n\n    HotfixMessage.C2G_PlayerInfo = (function () {\n\n        /**\n         * Properties of a C2G_PlayerInfo.\n         * @memberof HotfixMessage\n         * @interface IC2G_PlayerInfo\n         * @property {number|null} [RpcId] C2G_PlayerInfo RpcId\n         */\n\n        /**\n         * Constructs a new C2G_PlayerInfo.\n         * @memberof HotfixMessage\n         * @classdesc Represents a C2G_PlayerInfo.\n         * @implements IC2G_PlayerInfo\n         * @constructor\n         * @param {HotfixMessage.IC2G_PlayerInfo=} [p] Properties to set\n         */\n        function C2G_PlayerInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2G_PlayerInfo RpcId.\n         * @member {number} RpcId\n         * @memberof HotfixMessage.C2G_PlayerInfo\n         * @instance\n         */\n        C2G_PlayerInfo.prototype.RpcId = 0;\n\n        /**\n         * Creates a new C2G_PlayerInfo instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.C2G_PlayerInfo\n         * @static\n         * @param {HotfixMessage.IC2G_PlayerInfo=} [properties] Properties to set\n         * @returns {HotfixMessage.C2G_PlayerInfo} C2G_PlayerInfo instance\n         */\n        C2G_PlayerInfo.create = function create(properties) {\n            return new C2G_PlayerInfo(properties);\n        };\n\n        /**\n         * Encodes the specified C2G_PlayerInfo message. Does not implicitly {@link HotfixMessage.C2G_PlayerInfo.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.C2G_PlayerInfo\n         * @static\n         * @param {HotfixMessage.IC2G_PlayerInfo} m C2G_PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_PlayerInfo.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2G_PlayerInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.C2G_PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.C2G_PlayerInfo} C2G_PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_PlayerInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.C2G_PlayerInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2G_PlayerInfo;\n    })();\n\n    HotfixMessage.G2C_PlayerInfo = (function () {\n\n        /**\n         * Properties of a G2C_PlayerInfo.\n         * @memberof HotfixMessage\n         * @interface IG2C_PlayerInfo\n         * @property {number|null} [RpcId] G2C_PlayerInfo RpcId\n         * @property {number|null} [Error] G2C_PlayerInfo Error\n         * @property {string|null} [Message] G2C_PlayerInfo Message\n         * @property {HotfixMessage.IPlayerInfo|null} [PlayerInfo] G2C_PlayerInfo PlayerInfo\n         * @property {Array.<HotfixMessage.IPlayerInfo>|null} [PlayerInfos] G2C_PlayerInfo PlayerInfos\n         * @property {Array.<string>|null} [TestRepeatedString] G2C_PlayerInfo TestRepeatedString\n         * @property {Array.<number>|null} [TestRepeatedInt32] G2C_PlayerInfo TestRepeatedInt32\n         */\n\n        /**\n         * Constructs a new G2C_PlayerInfo.\n         * @memberof HotfixMessage\n         * @classdesc Represents a G2C_PlayerInfo.\n         * @implements IG2C_PlayerInfo\n         * @constructor\n         * @param {HotfixMessage.IG2C_PlayerInfo=} [p] Properties to set\n         */\n        function G2C_PlayerInfo(p) {\n            this.PlayerInfos = [];\n            this.TestRepeatedString = [];\n            this.TestRepeatedInt32 = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * G2C_PlayerInfo RpcId.\n         * @member {number} RpcId\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.RpcId = 0;\n\n        /**\n         * G2C_PlayerInfo Error.\n         * @member {number} Error\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.Error = 0;\n\n        /**\n         * G2C_PlayerInfo Message.\n         * @member {string} Message\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.Message = \"\";\n\n        /**\n         * G2C_PlayerInfo PlayerInfo.\n         * @member {HotfixMessage.IPlayerInfo|null|undefined} PlayerInfo\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.PlayerInfo = null;\n\n        /**\n         * G2C_PlayerInfo PlayerInfos.\n         * @member {Array.<HotfixMessage.IPlayerInfo>} PlayerInfos\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.PlayerInfos = $util.emptyArray;\n\n        /**\n         * G2C_PlayerInfo TestRepeatedString.\n         * @member {Array.<string>} TestRepeatedString\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.TestRepeatedString = $util.emptyArray;\n\n        /**\n         * G2C_PlayerInfo TestRepeatedInt32.\n         * @member {Array.<number>} TestRepeatedInt32\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.TestRepeatedInt32 = $util.emptyArray;\n\n        /**\n         * Creates a new G2C_PlayerInfo instance using the specified properties.\n         * @function create\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @static\n         * @param {HotfixMessage.IG2C_PlayerInfo=} [properties] Properties to set\n         * @returns {HotfixMessage.G2C_PlayerInfo} G2C_PlayerInfo instance\n         */\n        G2C_PlayerInfo.create = function create(properties) {\n            return new G2C_PlayerInfo(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_PlayerInfo message. Does not implicitly {@link HotfixMessage.G2C_PlayerInfo.verify|verify} messages.\n         * @function encode\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @static\n         * @param {HotfixMessage.IG2C_PlayerInfo} m G2C_PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_PlayerInfo.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.PlayerInfo != null && Object.hasOwnProperty.call(m, \"PlayerInfo\"))\n                $root.HotfixMessage.PlayerInfo.encode(m.PlayerInfo, w.uint32(10).fork()).ldelim();\n            if (m.PlayerInfos != null && m.PlayerInfos.length) {\n                for (var i = 0; i < m.PlayerInfos.length; ++i)\n                    $root.HotfixMessage.PlayerInfo.encode(m.PlayerInfos[i], w.uint32(18).fork()).ldelim();\n            }\n            if (m.TestRepeatedString != null && m.TestRepeatedString.length) {\n                for (var i = 0; i < m.TestRepeatedString.length; ++i)\n                    w.uint32(26).string(m.TestRepeatedString[i]);\n            }\n            if (m.TestRepeatedInt32 != null && m.TestRepeatedInt32.length) {\n                w.uint32(34).fork();\n                for (var i = 0; i < m.TestRepeatedInt32.length; ++i)\n                    w.int32(m.TestRepeatedInt32[i]);\n                w.ldelim();\n            }\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a G2C_PlayerInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof HotfixMessage.G2C_PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {HotfixMessage.G2C_PlayerInfo} G2C_PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_PlayerInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.HotfixMessage.G2C_PlayerInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    case 1:\n                        m.PlayerInfo = $root.HotfixMessage.PlayerInfo.decode(r, r.uint32());\n                        break;\n                    case 2:\n                        if (!(m.PlayerInfos && m.PlayerInfos.length))\n                            m.PlayerInfos = [];\n                        m.PlayerInfos.push($root.HotfixMessage.PlayerInfo.decode(r, r.uint32()));\n                        break;\n                    case 3:\n                        if (!(m.TestRepeatedString && m.TestRepeatedString.length))\n                            m.TestRepeatedString = [];\n                        m.TestRepeatedString.push(r.string());\n                        break;\n                    case 4:\n                        if (!(m.TestRepeatedInt32 && m.TestRepeatedInt32.length))\n                            m.TestRepeatedInt32 = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.TestRepeatedInt32.push(r.int32());\n                        } else\n                            m.TestRepeatedInt32.push(r.int32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return G2C_PlayerInfo;\n    })();\n\n    return HotfixMessage;\n})();\n\nmodule.exports = $root;\n"]}