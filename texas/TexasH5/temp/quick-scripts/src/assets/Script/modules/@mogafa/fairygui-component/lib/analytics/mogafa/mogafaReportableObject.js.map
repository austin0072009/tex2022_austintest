{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\fairygui-component\\lib\\analytics\\mogafa\\mogafaReportableObject.ts"],"names":[],"mappings":";;;;;;AACA,oDAA+C;AAG/C;IAQI,gCAAY,SAAiB,EAAE,OAAe,EAAE,SAAkB,EAAE,cAAuB;QACvF,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACzC,CAAC;IACD,mDAAkB,GAAlB;QAAmB,oBAA+B;aAA/B,UAA+B,EAA/B,qBAA+B,EAA/B,IAA+B;YAA/B,+BAA+B;;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5C;IACL,CAAC;IACD,kDAAiB,GAAjB;QACI,IAAI,UAAU,GAAqB,EAAE,CAAC;QACtC,KAAK,IAAI,YAAY,IAAI,IAAI,EAAE;YAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YAClC,IAAI,OAAO,QAAQ,IAAI,UAAU,IAAI,YAAY,IAAI,WAAW,EAAE;gBAC9D,SAAS;aACZ;YACD,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACzB,UAAU,CAAC,IAAI,CAAC,IAAI,wBAAc,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC/E;iBAAM;gBACH,UAAU,CAAC,IAAI,CAAC,IAAI,wBAAc,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;aAC/D;SACJ;QACD,IAAI,SAAS,GAAkC,IAAI,GAAG,EAA4B,CAAC;QACnF,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC1C,OAAO,SAAS,CAAC;IACrB,CAAC;IACL,6BAAC;AAAD,CAtCA,AAsCC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import ReportableObject from \"../reportableObject\";\nimport EventParameter from \"../EventParameter\";\nimport Asset from \"./asset\";\n\nexport default class MogafaReportableObject implements ReportableObject {\n    eventName: string;\n    timestamp: number;\n    trigger: string;\n    subGameId: string;\n    subGameVersion: string;\n    extraParameters: EventParameter[];\n    assets: Asset[];\n    constructor(eventName: string, trigger: string, subGameId?: string, subGameVersion?: string) {\n        this.extraParameters = [];\n        this.timestamp = new Date().getTime();\n        this.eventName = eventName;\n        this.trigger = trigger;\n        this.subGameId = subGameId;\n        this.subGameVersion = subGameVersion;\n    }\n    addEventParameters(...parameters: EventParameter[]): void {\n        for (let i = 0; i < parameters.length; i++) {\n            this.extraParameters.push(parameters[i]);\n        }\n    }\n    toEventParameters(): Map<string, EventParameter[]> {\n        let parameters: EventParameter[] = [];\n        for (let propertyName in this) {\n            var property = this[propertyName];\n            if (typeof property == \"function\" || propertyName == \"eventName\") {\n                continue;\n            }\n            if (Array.isArray(property)) {\n                parameters.push(new EventParameter(propertyName, JSON.stringify(property)));\n            } else {\n                parameters.push(new EventParameter(propertyName, property));\n            }\n        }\n        let parameter: Map<string, EventParameter[]> = new Map<string, EventParameter[]>();\n        parameter.set(this.eventName, parameters);\n        return parameter;\n    }\n}\n"]}