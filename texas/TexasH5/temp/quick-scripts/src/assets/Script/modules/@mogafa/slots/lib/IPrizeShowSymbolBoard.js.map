{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\IPrizeShowSymbolBoard.ts"],"names":[],"mappings":"","file":"","sourceRoot":"/","sourcesContent":["import { PrizeShowStatus } from \"./PrizeShowStatus\";\n\nexport default interface IPrizeShowSymbolBoard {\n    /**\n     * 中奖展示时是否可发spin请求\n     */\n    //canBeSpinRequestWhenPrizeShow: boolean;\n    /**\n     * 中奖效果展示状态\n     */\n    prizeShowStatus: PrizeShowStatus;\n    /**\n     * 筹码棋子奖励\n     */\n    readonly chipCellRewards: { position: number; symbolCode: number; rewards: number }[];\n    /**\n     * jackpot棋子奖励\n     */\n    readonly jackpotCellRewards: { position: number; symbolCode: number; rewards: number }[];\n    /**\n     * 连线\n     */\n    readonly matchedLines: number[][];\n    /**\n     * 5、6、7连展示\n     *\n     * @param number 相同棋子数\n     */\n    ofAKindShow(number: number): void;\n    /**\n     * 展示连线\n     * @param lines 连线列表\n     * @param times 展示次数\n     * @param callback 展示完成后的回调\n     */\n    prizeLineShow(lines: number[][], times: number): void;\n    /**\n     * 筹码结算\n     *\n     * @param position 位置\n     * @param symbolCode 棋子编号\n     * @param assets 资产\n     */\n    prizeChipCellSettle(position: number, symbolCode: number, assets: number): void;\n    /**\n     * jackpot计算\n     *\n     * @param position 位置\n     * @param symbolCode 棋子编号\n     * @param assets 资产\n     */\n    prizeJackpotCellSettle(position: number, symbolCode: number, assets: number): void;\n\n    /**\n     * 接收所有单元格奖励结算完成\n     */\n    receiveAllCellRewardsSettled(): void;\n\n    /**\n     *\n     * @param callback\n     * @param interval\n     * @param repeat\n     * @param delay\n     */\n    schedule(callback: Function, interval?: number, repeat?: number, delay?: number): void;\n    /**\n     *\n     * @param callback\n     */\n    unschedule(callback: Function): void;\n\n    /**\n     * 监听当完成一次中奖展示\n     *\n     * @param listener 监听函数\n     * @param [target] 绑定目标\n     */\n    onPrizeLineShowCompletedOnce(listener: Function, target?: any): void;\n    /**\n     * 取消监听当完成一次中奖展示\n     *\n     * @param listener 监听函数\n     * @param target 绑定目标\n     */\n    offPrizeLineShowCompletedOnce(listener: Function, target?: any): void;\n    /**\n     * 清除完成一次中奖展示监听\n     */\n    clearPrizeLineShowCompletedOnce(): void;\n    /**\n     * 监听格子奖励结算完成一次\n     * 比如respin中筹码棋子结算，格子jp弹窗展示\n     *\n     * @param listener 监听函数\n     * @param target 绑定目标\n     */\n    onCellRewardSettledOnce(listener: Function, target?: any): void;\n    /**\n     * 取消监听格子奖励结算\n     *\n     * @param listener 监听函数\n     * @param target 绑定目标\n     */\n    offCellRewardSettledOnce(listener: Function, target?: any): void;\n    /**\n     * 清除格子奖励结算的所有监听\n     */\n    clearCellRewardSettledOnce(): void;\n\n    lineIndex:number\n}\n"]}