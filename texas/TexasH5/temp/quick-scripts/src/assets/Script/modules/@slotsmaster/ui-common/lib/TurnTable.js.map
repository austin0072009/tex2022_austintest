{"version":3,"sources":["assets\\Script\\modules\\@slotsmaster\\ui-common\\lib\\TurnTable.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport FguiComponentBase from \"../../../@mogafa/fairygui-component/lib/FguiComponentBase\";\nimport SpinResultsGameWheel from \"../../../spin-result/SpinResultsGameWheel\";\n\nexport default abstract class TurnTable extends FguiComponentBase {\n    protected abstract get goldTurnLabel(): string[];\n    protected abstract get goldTurnData(): string[];\n    protected abstract get SpinButtonName(): string;\n    protected abstract get CollectButtonName(): string;\n    protected insideWheel: fgui.GComponent;\n    protected turnSpin: fgui.GButton;\n    protected ifRun: boolean = false;\n    protected wheelFinishedCallback: Function;\n    protected _gameWheel: SpinResultsGameWheel;\n\n    protected time: number = 6;\n    protected circle: number = 5;\n    protected degree: number = 0; //结束目标点\n\n    protected createChildComponents() {\n        super.createChildComponents();\n        this.addButtonEvent();\n        //内部转盘\n        this.insideWheel = this.fguiComponent.getChild(\"internalTurntable\").asCom;\n    }\n\n    public onShow(callBack: Function, wheelData: SpinResultsGameWheel) {\n        this.wheelFinishedCallback = callBack;\n    }\n\n    private addButtonEvent() {\n        this.fguiComponent.getChild(this.SpinButtonName).asButton.onClick(this.onClickGetSpin, this);\n        this.fguiComponent.getChild(this.CollectButtonName).asButton.onClick(this.onClickCollect, this);\n    }\n\n    protected get gameWheel() {\n        return this._gameWheel;\n    }\n\n    protected set gameWheel(data) {\n        this._gameWheel = data;\n    }\n\n    protected onClickGetSpin() {\n        //this.StartSpin();\n    }\n\n    protected onClickCollect() {\n        if (this.wheelFinishedCallback) {\n            this.wheelFinishedCallback();\n        }\n        this.fguiComponent.visible = false;\n    }\n\n    protected StartSpin() {\n        if (this.ifRun) return;\n        this.ifRun = true;\n        this.startTurn();\n    }\n\n    /**\n     * 转盘数据\n     * @param finalCodes 目标值\n     * @param offset  偏差值\n     */\n    protected initData(finalCodes: string, offset: number = 0) {\n        const dataArr: string[] = this.goldTurnData;\n        if (dataArr.length != this.goldTurnLabel.length) {\n            cc.error(\"转盘数据不一致\");\n        } else {\n            //取目标值index\n            this.insideWheel.node.angle = 0;\n            let finalIndex: number = dataArr.indexOf(finalCodes);\n            let angle: number = 360 / dataArr.length;\n            if (finalIndex != -1) {\n                this.degree = (dataArr.length - finalIndex) * angle + offset;\n                for (let i = 0; i < this.goldTurnLabel.length; i++) {\n                    this.insideWheel.getChild(this.goldTurnLabel[i]).asLabel.text = String(dataArr[i]);\n                }\n            } else {\n                cc.error(\"查找结果数据失败\");\n            }\n        }\n    }\n\n    protected startTurn() {\n        let finished = cc.callFunc(function () {\n            this.finished();\n        }, this);\n\n        let roActEas = cc\n            .rotateTo(this.time, 360 * this.circle + this.degree + 11.25)\n            .easing(cc.easeCubicActionInOut());\n        let roActEas_stop = cc.rotateBy(0.5, 11.25).easing(cc.easeCircleActionIn());\n        let action = cc.sequence(roActEas, roActEas_stop, finished); //停止状态 慢 - 快 - 慢\n        this.insideWheel.node.runAction(action);\n    }\n\n    /**\n     * 转盘结束回调(可用于显示结果之后后续步骤)\n     */\n    protected finished() {\n        this.ifRun = false;\n    }\n\n\n    Show() {\n        this.active = true;\n        if (this._fguiComponent) {\n            this._fguiComponent.visible = true;\n        }\n    }\n\n    Hide() {\n        this.active = false;\n        this._fguiComponent.visible = false;\n    }\n}\n"]}