{"version":3,"sources":["assets\\Script\\Encrypt\\lib\\jsbn\\rsa.js"],"names":["pkcs1pad1","s","n","length","console","error","len","filler","f","m","pkcs1pad2","ba","i","c","charCodeAt","rng","SecureRandom","x","nextBytes","BigInteger","RSAKey","e","d","p","q","dmp1","dmq1","coeff","prototype","doPublic","modPowInt","doPrivate","modPow","xp","mod","xq","compareTo","add","subtract","multiply","setPublic","N","E","parseInt","encrypt","text","maxLength","bitLength","h","toString","setPrivate","D","setPrivateEx","P","Q","DP","DQ","C","generate","B","qs","ee","ONE","gcd","isProbablePrime","t","p1","q1","phi","modInverse","decrypt","ctext","pkcs1unpad2","generateAsync","callback","rsa","loop1","loop4","setTimeout","loop3","fromNumberAsync","gcda","r","loop2","sign","digestMethod","digestName","header","getDigestHeader","digest","verify","signature","unpadded","replace","removeDigestHeader","b","toByteArray","ret","String","fromCharCode","DIGEST_HEADERS","md2","md5","sha1","sha224","sha256","sha384","sha512","ripemd160","name","str","name_1","hasOwnProperty","substr"],"mappings":";;;;;;;;;AAGA;;AACA;;AAJA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACrB,MAAIA,CAAC,GAAGD,CAAC,CAACE,MAAF,GAAW,EAAnB,EAAuB;AACnBC,IAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;AACA,WAAO,IAAP;AACH;;AACD,MAAIC,GAAG,GAAGJ,CAAC,GAAGD,CAAC,CAACE,MAAN,GAAe,CAAzB;AACA,MAAII,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,IAAI,CAA9B,EAAiC;AAC7BD,IAAAA,MAAM,IAAI,IAAV;AACH;;AACD,MAAIE,CAAC,GAAG,SAASF,MAAT,GAAkB,IAAlB,GAAyBN,CAAjC;AACA,SAAO,uBAAYQ,CAAZ,EAAe,EAAf,CAAP;AACH,EACD;;;AACA,SAASC,SAAT,CAAmBT,CAAnB,EAAsBC,CAAtB,EAAyB;AACrB,MAAIA,CAAC,GAAGD,CAAC,CAACE,MAAF,GAAW,EAAnB,EAAuB;AAAE;AACrBC,IAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;AACA,WAAO,IAAP;AACH;;AACD,MAAIM,EAAE,GAAG,EAAT;AACA,MAAIC,CAAC,GAAGX,CAAC,CAACE,MAAF,GAAW,CAAnB;;AACA,SAAOS,CAAC,IAAI,CAAL,IAAUV,CAAC,GAAG,CAArB,EAAwB;AACpB,QAAIW,CAAC,GAAGZ,CAAC,CAACa,UAAF,CAAaF,CAAC,EAAd,CAAR;;AACA,QAAIC,CAAC,GAAG,GAAR,EAAa;AAAE;AACXF,MAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAUW,CAAV;AACH,KAFD,MAGK,IAAKA,CAAC,GAAG,GAAL,IAAcA,CAAC,GAAG,IAAtB,EAA6B;AAC9BF,MAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAWW,CAAC,GAAG,EAAL,GAAW,GAArB;AACAF,MAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAWW,CAAC,IAAI,CAAN,GAAW,GAArB;AACH,KAHI,MAIA;AACDF,MAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAWW,CAAC,GAAG,EAAL,GAAW,GAArB;AACAF,MAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAYW,CAAC,IAAI,CAAN,GAAW,EAAZ,GAAkB,GAA5B;AACAF,MAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAWW,CAAC,IAAI,EAAN,GAAY,GAAtB;AACH;AACJ;;AACDF,EAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAU,CAAV;AACA,MAAIa,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACA,MAAIC,CAAC,GAAG,EAAR;;AACA,SAAOf,CAAC,GAAG,CAAX,EAAc;AAAE;AACZe,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAP;;AACA,WAAOA,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAf,EAAkB;AACdF,MAAAA,GAAG,CAACG,SAAJ,CAAcD,CAAd;AACH;;AACDN,IAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAUe,CAAC,CAAC,CAAD,CAAX;AACH;;AACDN,EAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAU,CAAV;AACAS,EAAAA,EAAE,CAAC,EAAET,CAAH,CAAF,GAAU,CAAV;AACA,SAAO,IAAIiB,gBAAJ,CAAeR,EAAf,CAAP;AACH,EACD;;;AACA,IAAIS,MAAM;AAAG;AAAe,YAAY;AACpC,WAASA,MAAT,GAAkB;AACd,SAAKlB,CAAL,GAAS,IAAT;AACA,SAAKmB,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,IAAT;AACA,SAAKC,CAAL,GAAS,IAAT;AACA,SAAKC,CAAL,GAAS,IAAT;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACH,GAVmC,CAWpC;AACA;AACA;AACA;;;AACAP,EAAAA,MAAM,CAACQ,SAAP,CAAiBC,QAAjB,GAA4B,UAAUZ,CAAV,EAAa;AACrC,WAAOA,CAAC,CAACa,SAAF,CAAY,KAAKT,CAAjB,EAAoB,KAAKnB,CAAzB,CAAP;AACH,GAFD,CAfoC,CAkBpC;AACA;;;AACAkB,EAAAA,MAAM,CAACQ,SAAP,CAAiBG,SAAjB,GAA6B,UAAUd,CAAV,EAAa;AACtC,QAAI,KAAKM,CAAL,IAAU,IAAV,IAAkB,KAAKC,CAAL,IAAU,IAAhC,EAAsC;AAClC,aAAOP,CAAC,CAACe,MAAF,CAAS,KAAKV,CAAd,EAAiB,KAAKpB,CAAtB,CAAP;AACH,KAHqC,CAItC;;;AACA,QAAI+B,EAAE,GAAGhB,CAAC,CAACiB,GAAF,CAAM,KAAKX,CAAX,EAAcS,MAAd,CAAqB,KAAKP,IAA1B,EAAgC,KAAKF,CAArC,CAAT;AACA,QAAIY,EAAE,GAAGlB,CAAC,CAACiB,GAAF,CAAM,KAAKV,CAAX,EAAcQ,MAAd,CAAqB,KAAKN,IAA1B,EAAgC,KAAKF,CAArC,CAAT;;AACA,WAAOS,EAAE,CAACG,SAAH,CAAaD,EAAb,IAAmB,CAA1B,EAA6B;AACzBF,MAAAA,EAAE,GAAGA,EAAE,CAACI,GAAH,CAAO,KAAKd,CAAZ,CAAL;AACH;;AACD,WAAOU,EAAE,CAACK,QAAH,CAAYH,EAAZ,EAAgBI,QAAhB,CAAyB,KAAKZ,KAA9B,EAAqCO,GAArC,CAAyC,KAAKX,CAA9C,EAAiDgB,QAAjD,CAA0D,KAAKf,CAA/D,EAAkEa,GAAlE,CAAsEF,EAAtE,CAAP;AACH,GAXD,CApBoC,CAgCpC;AACA;AACA;AACA;;;AACAf,EAAAA,MAAM,CAACQ,SAAP,CAAiBY,SAAjB,GAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACzC,QAAID,CAAC,IAAI,IAAL,IAAaC,CAAC,IAAI,IAAlB,IAA0BD,CAAC,CAACtC,MAAF,GAAW,CAArC,IAA0CuC,CAAC,CAACvC,MAAF,GAAW,CAAzD,EAA4D;AACxD,WAAKD,CAAL,GAAS,uBAAYuC,CAAZ,EAAe,EAAf,CAAT;AACA,WAAKpB,CAAL,GAASsB,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAjB;AACH,KAHD,MAIK;AACDtC,MAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd;AACH;AACJ,GARD,CApCoC,CA6CpC;AACA;;;AACAe,EAAAA,MAAM,CAACQ,SAAP,CAAiBgB,OAAjB,GAA2B,UAAUC,IAAV,EAAgB;AACvC,QAAIC,SAAS,GAAI,KAAK5C,CAAL,CAAO6C,SAAP,KAAqB,CAAtB,IAA4B,CAA5C;AACA,QAAItC,CAAC,GAAGC,SAAS,CAACmC,IAAD,EAAOC,SAAP,CAAjB;;AACA,QAAIrC,CAAC,IAAI,IAAT,EAAe;AACX,aAAO,IAAP;AACH;;AACD,QAAII,CAAC,GAAG,KAAKgB,QAAL,CAAcpB,CAAd,CAAR;;AACA,QAAII,CAAC,IAAI,IAAT,EAAe;AACX,aAAO,IAAP;AACH;;AACD,QAAImC,CAAC,GAAGnC,CAAC,CAACoC,QAAF,CAAW,EAAX,CAAR;AACA,QAAI9C,MAAM,GAAG6C,CAAC,CAAC7C,MAAf,CAXuC,CAYvC;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,SAAS,GAAG,CAAZ,GAAgB3C,MAApC,EAA4CS,CAAC,EAA7C,EAAiD;AAC7CoC,MAAAA,CAAC,GAAG,MAAMA,CAAV;AACH;;AACD,WAAOA,CAAP;AACH,GAjBD,CA/CoC,CAiEpC;AACA;;;AACA5B,EAAAA,MAAM,CAACQ,SAAP,CAAiBsB,UAAjB,GAA8B,UAAUT,CAAV,EAAaC,CAAb,EAAgBS,CAAhB,EAAmB;AAC7C,QAAIV,CAAC,IAAI,IAAL,IAAaC,CAAC,IAAI,IAAlB,IAA0BD,CAAC,CAACtC,MAAF,GAAW,CAArC,IAA0CuC,CAAC,CAACvC,MAAF,GAAW,CAAzD,EAA4D;AACxD,WAAKD,CAAL,GAAS,uBAAYuC,CAAZ,EAAe,EAAf,CAAT;AACA,WAAKpB,CAAL,GAASsB,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAjB;AACA,WAAKpB,CAAL,GAAS,uBAAY6B,CAAZ,EAAe,EAAf,CAAT;AACH,KAJD,MAKK;AACD/C,MAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd;AACH;AACJ,GATD,CAnEoC,CA6EpC;AACA;;;AACAe,EAAAA,MAAM,CAACQ,SAAP,CAAiBwB,YAAjB,GAAgC,UAAUX,CAAV,EAAaC,CAAb,EAAgBS,CAAhB,EAAmBE,CAAnB,EAAsBC,CAAtB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,CAAjC,EAAoC;AAChE,QAAIhB,CAAC,IAAI,IAAL,IAAaC,CAAC,IAAI,IAAlB,IAA0BD,CAAC,CAACtC,MAAF,GAAW,CAArC,IAA0CuC,CAAC,CAACvC,MAAF,GAAW,CAAzD,EAA4D;AACxD,WAAKD,CAAL,GAAS,uBAAYuC,CAAZ,EAAe,EAAf,CAAT;AACA,WAAKpB,CAAL,GAASsB,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAjB;AACA,WAAKpB,CAAL,GAAS,uBAAY6B,CAAZ,EAAe,EAAf,CAAT;AACA,WAAK5B,CAAL,GAAS,uBAAY8B,CAAZ,EAAe,EAAf,CAAT;AACA,WAAK7B,CAAL,GAAS,uBAAY8B,CAAZ,EAAe,EAAf,CAAT;AACA,WAAK7B,IAAL,GAAY,uBAAY8B,EAAZ,EAAgB,EAAhB,CAAZ;AACA,WAAK7B,IAAL,GAAY,uBAAY8B,EAAZ,EAAgB,EAAhB,CAAZ;AACA,WAAK7B,KAAL,GAAa,uBAAY8B,CAAZ,EAAe,EAAf,CAAb;AACH,KATD,MAUK;AACDrD,MAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd;AACH;AACJ,GAdD,CA/EoC,CA8FpC;AACA;;;AACAe,EAAAA,MAAM,CAACQ,SAAP,CAAiB8B,QAAjB,GAA4B,UAAUC,CAAV,EAAajB,CAAb,EAAgB;AACxC,QAAI3B,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACA,QAAI4C,EAAE,GAAGD,CAAC,IAAI,CAAd;AACA,SAAKtC,CAAL,GAASsB,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAjB;AACA,QAAImB,EAAE,GAAG,IAAI1C,gBAAJ,CAAeuB,CAAf,EAAkB,EAAlB,CAAT;;AACA,aAAS;AACL,eAAS;AACL,aAAKnB,CAAL,GAAS,IAAIJ,gBAAJ,CAAewC,CAAC,GAAGC,EAAnB,EAAuB,CAAvB,EAA0B7C,GAA1B,CAAT;;AACA,YAAI,KAAKQ,CAAL,CAAOe,QAAP,CAAgBnB,iBAAW2C,GAA3B,EAAgCC,GAAhC,CAAoCF,EAApC,EAAwCzB,SAAxC,CAAkDjB,iBAAW2C,GAA7D,KAAqE,CAArE,IAA0E,KAAKvC,CAAL,CAAOyC,eAAP,CAAuB,EAAvB,CAA9E,EAA0G;AACtG;AACH;AACJ;;AACD,eAAS;AACL,aAAKxC,CAAL,GAAS,IAAIL,gBAAJ,CAAeyC,EAAf,EAAmB,CAAnB,EAAsB7C,GAAtB,CAAT;;AACA,YAAI,KAAKS,CAAL,CAAOc,QAAP,CAAgBnB,iBAAW2C,GAA3B,EAAgCC,GAAhC,CAAoCF,EAApC,EAAwCzB,SAAxC,CAAkDjB,iBAAW2C,GAA7D,KAAqE,CAArE,IAA0E,KAAKtC,CAAL,CAAOwC,eAAP,CAAuB,EAAvB,CAA9E,EAA0G;AACtG;AACH;AACJ;;AACD,UAAI,KAAKzC,CAAL,CAAOa,SAAP,CAAiB,KAAKZ,CAAtB,KAA4B,CAAhC,EAAmC;AAC/B,YAAIyC,CAAC,GAAG,KAAK1C,CAAb;AACA,aAAKA,CAAL,GAAS,KAAKC,CAAd;AACA,aAAKA,CAAL,GAASyC,CAAT;AACH;;AACD,UAAIC,EAAE,GAAG,KAAK3C,CAAL,CAAOe,QAAP,CAAgBnB,iBAAW2C,GAA3B,CAAT;AACA,UAAIK,EAAE,GAAG,KAAK3C,CAAL,CAAOc,QAAP,CAAgBnB,iBAAW2C,GAA3B,CAAT;AACA,UAAIM,GAAG,GAAGF,EAAE,CAAC3B,QAAH,CAAY4B,EAAZ,CAAV;;AACA,UAAIC,GAAG,CAACL,GAAJ,CAAQF,EAAR,EAAYzB,SAAZ,CAAsBjB,iBAAW2C,GAAjC,KAAyC,CAA7C,EAAgD;AAC5C,aAAK5D,CAAL,GAAS,KAAKqB,CAAL,CAAOgB,QAAP,CAAgB,KAAKf,CAArB,CAAT;AACA,aAAKF,CAAL,GAASuC,EAAE,CAACQ,UAAH,CAAcD,GAAd,CAAT;AACA,aAAK3C,IAAL,GAAY,KAAKH,CAAL,CAAOY,GAAP,CAAWgC,EAAX,CAAZ;AACA,aAAKxC,IAAL,GAAY,KAAKJ,CAAL,CAAOY,GAAP,CAAWiC,EAAX,CAAZ;AACA,aAAKxC,KAAL,GAAa,KAAKH,CAAL,CAAO6C,UAAP,CAAkB,KAAK9C,CAAvB,CAAb;AACA;AACH;AACJ;AACJ,GAnCD,CAhGoC,CAoIpC;AACA;AACA;;;AACAH,EAAAA,MAAM,CAACQ,SAAP,CAAiB0C,OAAjB,GAA2B,UAAUC,KAAV,EAAiB;AACxC,QAAI1D,CAAC,GAAG,uBAAY0D,KAAZ,EAAmB,EAAnB,CAAR;AACA,QAAI9D,CAAC,GAAG,KAAKsB,SAAL,CAAelB,CAAf,CAAR;;AACA,QAAIJ,CAAC,IAAI,IAAT,EAAe;AACX,aAAO,IAAP;AACH;;AACD,WAAO+D,WAAW,CAAC/D,CAAD,EAAK,KAAKP,CAAL,CAAO6C,SAAP,KAAqB,CAAtB,IAA4B,CAAhC,CAAlB;AACH,GAPD,CAvIoC,CA+IpC;;;AACA3B,EAAAA,MAAM,CAACQ,SAAP,CAAiB6C,aAAjB,GAAiC,UAAUd,CAAV,EAAajB,CAAb,EAAgBgC,QAAhB,EAA0B;AACvD,QAAI3D,GAAG,GAAG,IAAIC,iBAAJ,EAAV;AACA,QAAI4C,EAAE,GAAGD,CAAC,IAAI,CAAd;AACA,SAAKtC,CAAL,GAASsB,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAjB;AACA,QAAImB,EAAE,GAAG,IAAI1C,gBAAJ,CAAeuB,CAAf,EAAkB,EAAlB,CAAT;AACA,QAAIiC,GAAG,GAAG,IAAV,CALuD,CAMvD;AACA;;AACA,QAAIC,KAAK,GAAG,SAARA,KAAQ,GAAY;AACpB,UAAIC,KAAK,GAAG,SAARA,KAAQ,GAAY;AACpB,YAAIF,GAAG,CAACpD,CAAJ,CAAMa,SAAN,CAAgBuC,GAAG,CAACnD,CAApB,KAA0B,CAA9B,EAAiC;AAC7B,cAAIyC,CAAC,GAAGU,GAAG,CAACpD,CAAZ;AACAoD,UAAAA,GAAG,CAACpD,CAAJ,GAAQoD,GAAG,CAACnD,CAAZ;AACAmD,UAAAA,GAAG,CAACnD,CAAJ,GAAQyC,CAAR;AACH;;AACD,YAAIC,EAAE,GAAGS,GAAG,CAACpD,CAAJ,CAAMe,QAAN,CAAenB,iBAAW2C,GAA1B,CAAT;AACA,YAAIK,EAAE,GAAGQ,GAAG,CAACnD,CAAJ,CAAMc,QAAN,CAAenB,iBAAW2C,GAA1B,CAAT;AACA,YAAIM,GAAG,GAAGF,EAAE,CAAC3B,QAAH,CAAY4B,EAAZ,CAAV;;AACA,YAAIC,GAAG,CAACL,GAAJ,CAAQF,EAAR,EAAYzB,SAAZ,CAAsBjB,iBAAW2C,GAAjC,KAAyC,CAA7C,EAAgD;AAC5Ca,UAAAA,GAAG,CAACzE,CAAJ,GAAQyE,GAAG,CAACpD,CAAJ,CAAMgB,QAAN,CAAeoC,GAAG,CAACnD,CAAnB,CAAR;AACAmD,UAAAA,GAAG,CAACrD,CAAJ,GAAQuC,EAAE,CAACQ,UAAH,CAAcD,GAAd,CAAR;AACAO,UAAAA,GAAG,CAAClD,IAAJ,GAAWkD,GAAG,CAACrD,CAAJ,CAAMY,GAAN,CAAUgC,EAAV,CAAX;AACAS,UAAAA,GAAG,CAACjD,IAAJ,GAAWiD,GAAG,CAACrD,CAAJ,CAAMY,GAAN,CAAUiC,EAAV,CAAX;AACAQ,UAAAA,GAAG,CAAChD,KAAJ,GAAYgD,GAAG,CAACnD,CAAJ,CAAM6C,UAAN,CAAiBM,GAAG,CAACpD,CAArB,CAAZ;AACAuD,UAAAA,UAAU,CAAC,YAAY;AAAEJ,YAAAA,QAAQ;AAAK,WAA5B,EAA8B,CAA9B,CAAV,CAN4C,CAMA;AAC/C,SAPD,MAQK;AACDI,UAAAA,UAAU,CAACF,KAAD,EAAQ,CAAR,CAAV;AACH;AACJ,OApBD;;AAqBA,UAAIG,KAAK,GAAG,SAARA,KAAQ,GAAY;AACpBJ,QAAAA,GAAG,CAACnD,CAAJ,GAAQ,gBAAR;AACAmD,QAAAA,GAAG,CAACnD,CAAJ,CAAMwD,eAAN,CAAsBpB,EAAtB,EAA0B,CAA1B,EAA6B7C,GAA7B,EAAkC,YAAY;AAC1C4D,UAAAA,GAAG,CAACnD,CAAJ,CAAMc,QAAN,CAAenB,iBAAW2C,GAA1B,EAA+BmB,IAA/B,CAAoCpB,EAApC,EAAwC,UAAUqB,CAAV,EAAa;AACjD,gBAAIA,CAAC,CAAC9C,SAAF,CAAYjB,iBAAW2C,GAAvB,KAA+B,CAA/B,IAAoCa,GAAG,CAACnD,CAAJ,CAAMwC,eAAN,CAAsB,EAAtB,CAAxC,EAAmE;AAC/Dc,cAAAA,UAAU,CAACD,KAAD,EAAQ,CAAR,CAAV;AACH,aAFD,MAGK;AACDC,cAAAA,UAAU,CAACC,KAAD,EAAQ,CAAR,CAAV;AACH;AACJ,WAPD;AAQH,SATD;AAUH,OAZD;;AAaA,UAAII,KAAK,GAAG,SAARA,KAAQ,GAAY;AACpBR,QAAAA,GAAG,CAACpD,CAAJ,GAAQ,gBAAR;AACAoD,QAAAA,GAAG,CAACpD,CAAJ,CAAMyD,eAAN,CAAsBrB,CAAC,GAAGC,EAA1B,EAA8B,CAA9B,EAAiC7C,GAAjC,EAAsC,YAAY;AAC9C4D,UAAAA,GAAG,CAACpD,CAAJ,CAAMe,QAAN,CAAenB,iBAAW2C,GAA1B,EAA+BmB,IAA/B,CAAoCpB,EAApC,EAAwC,UAAUqB,CAAV,EAAa;AACjD,gBAAIA,CAAC,CAAC9C,SAAF,CAAYjB,iBAAW2C,GAAvB,KAA+B,CAA/B,IAAoCa,GAAG,CAACpD,CAAJ,CAAMyC,eAAN,CAAsB,EAAtB,CAAxC,EAAmE;AAC/Dc,cAAAA,UAAU,CAACC,KAAD,EAAQ,CAAR,CAAV;AACH,aAFD,MAGK;AACDD,cAAAA,UAAU,CAACK,KAAD,EAAQ,CAAR,CAAV;AACH;AACJ,WAPD;AAQH,SATD;AAUH,OAZD;;AAaAL,MAAAA,UAAU,CAACK,KAAD,EAAQ,CAAR,CAAV;AACH,KAjDD;;AAkDAL,IAAAA,UAAU,CAACF,KAAD,EAAQ,CAAR,CAAV;AACH,GA3DD;;AA4DAxD,EAAAA,MAAM,CAACQ,SAAP,CAAiBwD,IAAjB,GAAwB,UAAUvC,IAAV,EAAgBwC,YAAhB,EAA8BC,UAA9B,EAA0C;AAC9D,QAAIC,MAAM,GAAGC,eAAe,CAACF,UAAD,CAA5B;AACA,QAAIG,MAAM,GAAGF,MAAM,GAAGF,YAAY,CAACxC,IAAD,CAAZ,CAAmBI,QAAnB,EAAtB;AACA,QAAIxC,CAAC,GAAGT,SAAS,CAACyF,MAAD,EAAS,KAAKvF,CAAL,CAAO6C,SAAP,KAAqB,CAA9B,CAAjB;;AACA,QAAItC,CAAC,IAAI,IAAT,EAAe;AACX,aAAO,IAAP;AACH;;AACD,QAAII,CAAC,GAAG,KAAKkB,SAAL,CAAetB,CAAf,CAAR;;AACA,QAAII,CAAC,IAAI,IAAT,EAAe;AACX,aAAO,IAAP;AACH;;AACD,QAAImC,CAAC,GAAGnC,CAAC,CAACoC,QAAF,CAAW,EAAX,CAAR;;AACA,QAAI,CAACD,CAAC,CAAC7C,MAAF,GAAW,CAAZ,KAAkB,CAAtB,EAAyB;AACrB,aAAO6C,CAAP;AACH,KAFD,MAGK;AACD,aAAO,MAAMA,CAAb;AACH;AACJ,GAlBD;;AAmBA5B,EAAAA,MAAM,CAACQ,SAAP,CAAiB8D,MAAjB,GAA0B,UAAU7C,IAAV,EAAgB8C,SAAhB,EAA2BN,YAA3B,EAAyC;AAC/D,QAAIxE,CAAC,GAAG,uBAAY8E,SAAZ,EAAuB,EAAvB,CAAR;AACA,QAAIlF,CAAC,GAAG,KAAKoB,QAAL,CAAchB,CAAd,CAAR;;AACA,QAAIJ,CAAC,IAAI,IAAT,EAAe;AACX,aAAO,IAAP;AACH;;AACD,QAAImF,QAAQ,GAAGnF,CAAC,CAACwC,QAAF,CAAW,EAAX,EAAe4C,OAAf,CAAuB,QAAvB,EAAiC,EAAjC,CAAf;AACA,QAAIJ,MAAM,GAAGK,kBAAkB,CAACF,QAAD,CAA/B;AACA,WAAOH,MAAM,IAAIJ,YAAY,CAACxC,IAAD,CAAZ,CAAmBI,QAAnB,EAAjB;AACH,GATD;;AAUA,SAAO7B,MAAP;AACH,CA1O2B,EAA5B;;;;AA4OA;AACA,SAASoD,WAAT,CAAqBlD,CAArB,EAAwBpB,CAAxB,EAA2B;AACvB,MAAI6F,CAAC,GAAGzE,CAAC,CAAC0E,WAAF,EAAR;AACA,MAAIpF,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGmF,CAAC,CAAC5F,MAAN,IAAgB4F,CAAC,CAACnF,CAAD,CAAD,IAAQ,CAA/B,EAAkC;AAC9B,MAAEA,CAAF;AACH;;AACD,MAAImF,CAAC,CAAC5F,MAAF,GAAWS,CAAX,IAAgBV,CAAC,GAAG,CAApB,IAAyB6F,CAAC,CAACnF,CAAD,CAAD,IAAQ,CAArC,EAAwC;AACpC,WAAO,IAAP;AACH;;AACD,IAAEA,CAAF;;AACA,SAAOmF,CAAC,CAACnF,CAAD,CAAD,IAAQ,CAAf,EAAkB;AACd,QAAI,EAAEA,CAAF,IAAOmF,CAAC,CAAC5F,MAAb,EAAqB;AACjB,aAAO,IAAP;AACH;AACJ;;AACD,MAAI8F,GAAG,GAAG,EAAV;;AACA,SAAO,EAAErF,CAAF,GAAMmF,CAAC,CAAC5F,MAAf,EAAuB;AACnB,QAAIU,CAAC,GAAGkF,CAAC,CAACnF,CAAD,CAAD,GAAO,GAAf;;AACA,QAAIC,CAAC,GAAG,GAAR,EAAa;AAAE;AACXoF,MAAAA,GAAG,IAAIC,MAAM,CAACC,YAAP,CAAoBtF,CAApB,CAAP;AACH,KAFD,MAGK,IAAKA,CAAC,GAAG,GAAL,IAAcA,CAAC,GAAG,GAAtB,EAA4B;AAC7BoF,MAAAA,GAAG,IAAIC,MAAM,CAACC,YAAP,CAAqB,CAACtF,CAAC,GAAG,EAAL,KAAY,CAAb,GAAmBkF,CAAC,CAACnF,CAAC,GAAG,CAAL,CAAD,GAAW,EAAlD,CAAP;AACA,QAAEA,CAAF;AACH,KAHI,MAIA;AACDqF,MAAAA,GAAG,IAAIC,MAAM,CAACC,YAAP,CAAqB,CAACtF,CAAC,GAAG,EAAL,KAAY,EAAb,GAAoB,CAACkF,CAAC,CAACnF,CAAC,GAAG,CAAL,CAAD,GAAW,EAAZ,KAAmB,CAAvC,GAA6CmF,CAAC,CAACnF,CAAC,GAAG,CAAL,CAAD,GAAW,EAA5E,CAAP;AACAA,MAAAA,CAAC,IAAI,CAAL;AACH;AACJ;;AACD,SAAOqF,GAAP;AACH,EACD;;;AACA,IAAIG,cAAc,GAAG;AACjBC,EAAAA,GAAG,EAAE,sCADY;AAEjBC,EAAAA,GAAG,EAAE,sCAFY;AAGjBC,EAAAA,IAAI,EAAE,gCAHW;AAIjBC,EAAAA,MAAM,EAAE,wCAJS;AAKjBC,EAAAA,MAAM,EAAE,wCALS;AAMjBC,EAAAA,MAAM,EAAE,wCANS;AAOjBC,EAAAA,MAAM,EAAE,wCAPS;AAQjBC,EAAAA,SAAS,EAAE;AARM,CAArB;;AAUA,SAASpB,eAAT,CAAyBqB,IAAzB,EAA+B;AAC3B,SAAOT,cAAc,CAACS,IAAD,CAAd,IAAwB,EAA/B;AACH;;AACD,SAASf,kBAAT,CAA4BgB,GAA5B,EAAiC;AAC7B,OAAK,IAAIC,MAAT,IAAmBX,cAAnB,EAAmC;AAC/B,QAAIA,cAAc,CAACY,cAAf,CAA8BD,MAA9B,CAAJ,EAA2C;AACvC,UAAIxB,MAAM,GAAGa,cAAc,CAACW,MAAD,CAA3B;AACA,UAAIzG,GAAG,GAAGiF,MAAM,CAACpF,MAAjB;;AACA,UAAI2G,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc3G,GAAd,KAAsBiF,MAA1B,EAAkC;AAC9B,eAAOuB,GAAG,CAACG,MAAJ,CAAW3G,GAAX,CAAP;AACH;AACJ;AACJ;;AACD,SAAOwG,GAAP;AACH,EACD;AACA;AACA;AACA;AACA;AACA;AACA","sourceRoot":"/","sourcesContent":["// Depends on jsbn.js and rng.js\n// Version 1.1: support utf-8 encoding in pkcs1pad2\n// convert a (hex) string to a bignum object\nimport { BigInteger, nbi, parseBigInt } from \"./jsbn\";\nimport { SecureRandom } from \"./rng\";\n// function linebrk(s,n) {\n//   var ret = \"\";\n//   var i = 0;\n//   while(i + n < s.length) {\n//     ret += s.substring(i,i+n) + \"\\n\";\n//     i += n;\n//   }\n//   return ret + s.substring(i,s.length);\n// }\n// function byte2Hex(b) {\n//   if(b < 0x10)\n//     return \"0\" + b.toString(16);\n//   else\n//     return b.toString(16);\n// }\nfunction pkcs1pad1(s, n) {\n    if (n < s.length + 22) {\n        console.error(\"Message too long for RSA\");\n        return null;\n    }\n    var len = n - s.length - 6;\n    var filler = \"\";\n    for (var f = 0; f < len; f += 2) {\n        filler += \"ff\";\n    }\n    var m = \"0001\" + filler + \"00\" + s;\n    return parseBigInt(m, 16);\n}\n// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint\nfunction pkcs1pad2(s, n) {\n    if (n < s.length + 11) { // TODO: fix for utf-8\n        console.error(\"Message too long for RSA\");\n        return null;\n    }\n    var ba = [];\n    var i = s.length - 1;\n    while (i >= 0 && n > 0) {\n        var c = s.charCodeAt(i--);\n        if (c < 128) { // encode using utf-8\n            ba[--n] = c;\n        }\n        else if ((c > 127) && (c < 2048)) {\n            ba[--n] = (c & 63) | 128;\n            ba[--n] = (c >> 6) | 192;\n        }\n        else {\n            ba[--n] = (c & 63) | 128;\n            ba[--n] = ((c >> 6) & 63) | 128;\n            ba[--n] = (c >> 12) | 224;\n        }\n    }\n    ba[--n] = 0;\n    var rng = new SecureRandom();\n    var x = [];\n    while (n > 2) { // random non-zero pad\n        x[0] = 0;\n        while (x[0] == 0) {\n            rng.nextBytes(x);\n        }\n        ba[--n] = x[0];\n    }\n    ba[--n] = 2;\n    ba[--n] = 0;\n    return new BigInteger(ba);\n}\n// \"empty\" RSA key constructor\nvar RSAKey = /** @class */ (function () {\n    function RSAKey() {\n        this.n = null;\n        this.e = 0;\n        this.d = null;\n        this.p = null;\n        this.q = null;\n        this.dmp1 = null;\n        this.dmq1 = null;\n        this.coeff = null;\n    }\n    //#region PROTECTED\n    // protected\n    // RSAKey.prototype.doPublic = RSADoPublic;\n    // Perform raw public operation on \"x\": return x^e (mod n)\n    RSAKey.prototype.doPublic = function (x) {\n        return x.modPowInt(this.e, this.n);\n    };\n    // RSAKey.prototype.doPrivate = RSADoPrivate;\n    // Perform raw private operation on \"x\": return x^d (mod n)\n    RSAKey.prototype.doPrivate = function (x) {\n        if (this.p == null || this.q == null) {\n            return x.modPow(this.d, this.n);\n        }\n        // TODO: re-calculate any missing CRT params\n        var xp = x.mod(this.p).modPow(this.dmp1, this.p);\n        var xq = x.mod(this.q).modPow(this.dmq1, this.q);\n        while (xp.compareTo(xq) < 0) {\n            xp = xp.add(this.p);\n        }\n        return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);\n    };\n    //#endregion PROTECTED\n    //#region PUBLIC\n    // RSAKey.prototype.setPublic = RSASetPublic;\n    // Set the public key fields N and e from hex strings\n    RSAKey.prototype.setPublic = function (N, E) {\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\n            this.n = parseBigInt(N, 16);\n            this.e = parseInt(E, 16);\n        }\n        else {\n            console.error(\"Invalid RSA public key\");\n        }\n    };\n    // RSAKey.prototype.encrypt = RSAEncrypt;\n    // Return the PKCS#1 RSA encryption of \"text\" as an even-length hex string\n    RSAKey.prototype.encrypt = function (text) {\n        var maxLength = (this.n.bitLength() + 7) >> 3;\n        var m = pkcs1pad2(text, maxLength);\n        if (m == null) {\n            return null;\n        }\n        var c = this.doPublic(m);\n        if (c == null) {\n            return null;\n        }\n        var h = c.toString(16);\n        var length = h.length;\n        // fix zero before result\n        for (var i = 0; i < maxLength * 2 - length; i++) {\n            h = \"0\" + h;\n        }\n        return h;\n    };\n    // RSAKey.prototype.setPrivate = RSASetPrivate;\n    // Set the private key fields N, e, and d from hex strings\n    RSAKey.prototype.setPrivate = function (N, E, D) {\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\n            this.n = parseBigInt(N, 16);\n            this.e = parseInt(E, 16);\n            this.d = parseBigInt(D, 16);\n        }\n        else {\n            console.error(\"Invalid RSA private key\");\n        }\n    };\n    // RSAKey.prototype.setPrivateEx = RSASetPrivateEx;\n    // Set the private key fields N, e, d and CRT params from hex strings\n    RSAKey.prototype.setPrivateEx = function (N, E, D, P, Q, DP, DQ, C) {\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\n            this.n = parseBigInt(N, 16);\n            this.e = parseInt(E, 16);\n            this.d = parseBigInt(D, 16);\n            this.p = parseBigInt(P, 16);\n            this.q = parseBigInt(Q, 16);\n            this.dmp1 = parseBigInt(DP, 16);\n            this.dmq1 = parseBigInt(DQ, 16);\n            this.coeff = parseBigInt(C, 16);\n        }\n        else {\n            console.error(\"Invalid RSA private key\");\n        }\n    };\n    // RSAKey.prototype.generate = RSAGenerate;\n    // Generate a new random private key B bits long, using public expt E\n    RSAKey.prototype.generate = function (B, E) {\n        var rng = new SecureRandom();\n        var qs = B >> 1;\n        this.e = parseInt(E, 16);\n        var ee = new BigInteger(E, 16);\n        for (;;) {\n            for (;;) {\n                this.p = new BigInteger(B - qs, 1, rng);\n                if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {\n                    break;\n                }\n            }\n            for (;;) {\n                this.q = new BigInteger(qs, 1, rng);\n                if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {\n                    break;\n                }\n            }\n            if (this.p.compareTo(this.q) <= 0) {\n                var t = this.p;\n                this.p = this.q;\n                this.q = t;\n            }\n            var p1 = this.p.subtract(BigInteger.ONE);\n            var q1 = this.q.subtract(BigInteger.ONE);\n            var phi = p1.multiply(q1);\n            if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {\n                this.n = this.p.multiply(this.q);\n                this.d = ee.modInverse(phi);\n                this.dmp1 = this.d.mod(p1);\n                this.dmq1 = this.d.mod(q1);\n                this.coeff = this.q.modInverse(this.p);\n                break;\n            }\n        }\n    };\n    // RSAKey.prototype.decrypt = RSADecrypt;\n    // Return the PKCS#1 RSA decryption of \"ctext\".\n    // \"ctext\" is an even-length hex string and the output is a plain string.\n    RSAKey.prototype.decrypt = function (ctext) {\n        var c = parseBigInt(ctext, 16);\n        var m = this.doPrivate(c);\n        if (m == null) {\n            return null;\n        }\n        return pkcs1unpad2(m, (this.n.bitLength() + 7) >> 3);\n    };\n    // Generate a new random private key B bits long, using public expt E\n    RSAKey.prototype.generateAsync = function (B, E, callback) {\n        var rng = new SecureRandom();\n        var qs = B >> 1;\n        this.e = parseInt(E, 16);\n        var ee = new BigInteger(E, 16);\n        var rsa = this;\n        // These functions have non-descript names because they were originally for(;;) loops.\n        // I don't know about cryptography to give them better names than loop1-4.\n        var loop1 = function () {\n            var loop4 = function () {\n                if (rsa.p.compareTo(rsa.q) <= 0) {\n                    var t = rsa.p;\n                    rsa.p = rsa.q;\n                    rsa.q = t;\n                }\n                var p1 = rsa.p.subtract(BigInteger.ONE);\n                var q1 = rsa.q.subtract(BigInteger.ONE);\n                var phi = p1.multiply(q1);\n                if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {\n                    rsa.n = rsa.p.multiply(rsa.q);\n                    rsa.d = ee.modInverse(phi);\n                    rsa.dmp1 = rsa.d.mod(p1);\n                    rsa.dmq1 = rsa.d.mod(q1);\n                    rsa.coeff = rsa.q.modInverse(rsa.p);\n                    setTimeout(function () { callback(); }, 0); // escape\n                }\n                else {\n                    setTimeout(loop1, 0);\n                }\n            };\n            var loop3 = function () {\n                rsa.q = nbi();\n                rsa.q.fromNumberAsync(qs, 1, rng, function () {\n                    rsa.q.subtract(BigInteger.ONE).gcda(ee, function (r) {\n                        if (r.compareTo(BigInteger.ONE) == 0 && rsa.q.isProbablePrime(10)) {\n                            setTimeout(loop4, 0);\n                        }\n                        else {\n                            setTimeout(loop3, 0);\n                        }\n                    });\n                });\n            };\n            var loop2 = function () {\n                rsa.p = nbi();\n                rsa.p.fromNumberAsync(B - qs, 1, rng, function () {\n                    rsa.p.subtract(BigInteger.ONE).gcda(ee, function (r) {\n                        if (r.compareTo(BigInteger.ONE) == 0 && rsa.p.isProbablePrime(10)) {\n                            setTimeout(loop3, 0);\n                        }\n                        else {\n                            setTimeout(loop2, 0);\n                        }\n                    });\n                });\n            };\n            setTimeout(loop2, 0);\n        };\n        setTimeout(loop1, 0);\n    };\n    RSAKey.prototype.sign = function (text, digestMethod, digestName) {\n        var header = getDigestHeader(digestName);\n        var digest = header + digestMethod(text).toString();\n        var m = pkcs1pad1(digest, this.n.bitLength() / 4);\n        if (m == null) {\n            return null;\n        }\n        var c = this.doPrivate(m);\n        if (c == null) {\n            return null;\n        }\n        var h = c.toString(16);\n        if ((h.length & 1) == 0) {\n            return h;\n        }\n        else {\n            return \"0\" + h;\n        }\n    };\n    RSAKey.prototype.verify = function (text, signature, digestMethod) {\n        var c = parseBigInt(signature, 16);\n        var m = this.doPublic(c);\n        if (m == null) {\n            return null;\n        }\n        var unpadded = m.toString(16).replace(/^1f+00/, \"\");\n        var digest = removeDigestHeader(unpadded);\n        return digest == digestMethod(text).toString();\n    };\n    return RSAKey;\n}());\nexport { RSAKey };\n// Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext\nfunction pkcs1unpad2(d, n) {\n    var b = d.toByteArray();\n    var i = 0;\n    while (i < b.length && b[i] == 0) {\n        ++i;\n    }\n    if (b.length - i != n - 1 || b[i] != 2) {\n        return null;\n    }\n    ++i;\n    while (b[i] != 0) {\n        if (++i >= b.length) {\n            return null;\n        }\n    }\n    var ret = \"\";\n    while (++i < b.length) {\n        var c = b[i] & 255;\n        if (c < 128) { // utf-8 decode\n            ret += String.fromCharCode(c);\n        }\n        else if ((c > 191) && (c < 224)) {\n            ret += String.fromCharCode(((c & 31) << 6) | (b[i + 1] & 63));\n            ++i;\n        }\n        else {\n            ret += String.fromCharCode(((c & 15) << 12) | ((b[i + 1] & 63) << 6) | (b[i + 2] & 63));\n            i += 2;\n        }\n    }\n    return ret;\n}\n// https://tools.ietf.org/html/rfc3447#page-43\nvar DIGEST_HEADERS = {\n    md2: \"3020300c06082a864886f70d020205000410\",\n    md5: \"3020300c06082a864886f70d020505000410\",\n    sha1: \"3021300906052b0e03021a05000414\",\n    sha224: \"302d300d06096086480165030402040500041c\",\n    sha256: \"3031300d060960864801650304020105000420\",\n    sha384: \"3041300d060960864801650304020205000430\",\n    sha512: \"3051300d060960864801650304020305000440\",\n    ripemd160: \"3021300906052b2403020105000414\"\n};\nfunction getDigestHeader(name) {\n    return DIGEST_HEADERS[name] || \"\";\n}\nfunction removeDigestHeader(str) {\n    for (var name_1 in DIGEST_HEADERS) {\n        if (DIGEST_HEADERS.hasOwnProperty(name_1)) {\n            var header = DIGEST_HEADERS[name_1];\n            var len = header.length;\n            if (str.substr(0, len) == header) {\n                return str.substr(len);\n            }\n        }\n    }\n    return str;\n}\n// Return the PKCS#1 RSA encryption of \"text\" as a Base64-encoded string\n// function RSAEncryptB64(text) {\n//  var h = this.encrypt(text);\n//  if(h) return hex2b64(h); else return null;\n// }\n// public\n// RSAKey.prototype.encrypt_b64 = RSAEncryptB64;\n"]}