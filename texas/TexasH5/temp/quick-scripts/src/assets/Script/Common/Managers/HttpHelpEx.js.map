{"version":3,"sources":["assets\\Script\\Common\\Managers\\HttpHelpEx.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { AppConfig } from \"../../config/AppConfig\";\nimport HttpApi from \"../../modules/@slotsmaster/ui-common/lib/HttpApi\";\nimport { CommonCtr } from \"../../BaseFrame/CommonCtr\";\n\ninterface IRequestConfig {\n    headers?: any;\n}\ninterface HttpResponse {\n    code: number;\n    data: any;\n    isSuccessful: boolean;\n    message: string;\n    curl: string;\n}\nexport default class HttpHelpEx {\n    private static httpHelp: HttpHelpEx;\n    public static get instance(): HttpHelpEx {\n        if (this.httpHelp == null) {\n            this.httpHelp = new HttpHelpEx();\n        }\n        return this.httpHelp;\n    }\n    private _config: IRequestConfig = {};\n    private appid: string = \"1000000008\";\n    private SecurityKey: string = \"e0a953c3ee6040eaa9fae2b667060e09\";\n    /**\n       * get请求\n       * @param {string} url\n       */\n    public get(url: string, config: IRequestConfig = {}): Promise<HttpResponse> {\n        let xhr = cc.loader.getXMLHttpRequest();\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = function () {\n                if (xhr.status === 200 && xhr.readyState === 4) {\n                    let response = xhr.responseText;\n                    resolve(JSON.parse(response));\n                } else {\n                }\n            };\n            xhr.onerror = function (err) {\n                reject(err);\n            };\n            xhr.open(\"GET\", url, true);\n            console.log(\"url === \", url);\n            let nowTime = Math.floor(new Date().getTime() / 1000);\n            let dataString = this.appid + nowTime + this.SecurityKey;\n            console.log(\"dataString === \", dataString);\n            let encryptedStr = md5.hex_md5(dataString);\n            console.log(\"encryptedStr ==== \", encryptedStr);\n            xhr.setRequestHeader(\"timestamp\", \"\" + nowTime);\n            xhr.setRequestHeader(\"appid\", this.appid);\n            xhr.setRequestHeader(\"sign\", encryptedStr);\n            if (config && Object.keys(config).length > 0) {\n                this._config = Object.assign(this._config, config);\n            }\n            this.setXHRConfig(xhr);\n            xhr.ontimeout = function (e) {\n                fgui.GRoot.inst.closeModalWait();\n                reject(`connect timeout，error message：${JSON.stringify(e)}`);\n            };\n            xhr.send();\n        });\n    }\n    /**\n       * post请求\n       * @param {string} url\n       * @param {object} params\n       */\n    public post(url: string, params: any, config: IRequestConfig = {}): Promise<HttpResponse> {\n        // let secretkey = \"123456\", datakey = \"user\";\n        // let dataString = `abcd1234@@&90`;//要加密的字符串\n        // let encryptedStr = encrypt(dataString, secretkey, 256);\n        // console.log(\"加密后:\", JSON.stringify(encryptedStr));\n        // let cipherText = encryptedStr;//要解密的文本\n        // let dataString2 = decrypt(cipherText, secretkey, 256);//得到解密之后的文本\n        // console.log(\"解密后:\", JSON.stringify(dataString2));\n        return new Promise((resolve, reject) => {\n            var xhr = cc.loader.getXMLHttpRequest();\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === 4 && xhr.status === 200) {\n                    console.log(\"error == \", xhr.status);\n                    console.log(\"error == \", xhr.responseText);\n                    var response = xhr.responseText;\n                    resolve(JSON.parse(response));\n                } else {\n                }\n            };\n            xhr.onerror = function (err) {\n                console.log(\"error == \", err);\n                reject(err);\n            };\n\n            xhr.ontimeout = function (e) {\n                reject(`connect timeout，error message：${JSON.stringify(e)}`);\n            };\n\n            xhr.open(\"POST\", url, true);\n            xhr.timeout = 8000;\n            console.log(\"url == \", url);\n            console.log(\"params == \", JSON.stringify(params));\n            let nowTime = Math.floor(new Date().getTime() / 1000);\n            let dataString = this.appid + nowTime + this.SecurityKey;\n            console.log(\"dataString === \", dataString);\n            let encryptedStr = md5.hex_md5(dataString);\n            console.log(\"encryptedStr ==== \", encryptedStr);\n            xhr.setRequestHeader(\"timestamp\", \"\" + nowTime);\n            xhr.setRequestHeader(\"appid\", this.appid);\n            xhr.setRequestHeader(\"sign\", encryptedStr);\n            if (config && Object.keys(config).length > 0) {\n\n                console.log(\"aaaaaaaaaaaaaaaa\");\n                this._config = Object.assign(this._config, config);\n                this.setXHRConfig(xhr);\n                xhr.send(JSON.stringify(params));\n            } else {\n                console.log(\"bbbbbbbbbbbbbbb\");\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                let paramsStr = \"\";\n                for (let item in params) {\n                    paramsStr += item + \"=\" + params[item] + \"&\";\n                }\n                console.log(\"paramsStr +=== \", encodeURI(paramsStr));\n                xhr.send(encodeURI(paramsStr));\n            }\n        });\n    }\n\n    private setXHRConfig(xhr: XMLHttpRequest) {\n        xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n        // xhr.setRequestHeader(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE\");\n        // xhr.setRequestHeader(\"Access-Control-Allow-Headers\", \"device-uuid,Authorization\");\n        xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n        // if (this._config.headers) {\n        //     for (let i in this._config.headers) {\n        //         xhr.setRequestHeader(i, this._config.headers[i]);\n        //     }\n        // }\n        xhr.timeout = 8000; // 8 seconds for timeout\n    }\n\n    public setInterceptorParams(params: IRequestConfig): void {\n        this._config = params;\n    }\n\n    public RegisterAccount(pid: string, yzm: string, yqm: string, password: string, callback: Function): void {\n        let checkurl = \"\";\n        console.log(checkurl + \"...............\");\n    }\n\n    public static curServerListIndex: number = 0;\n    public static defaultServerListIndex: number = 0;\n    //拉取serverlist\n    public GetServerList(callback: Function, isCircle: boolean = true): void {\n        let defaultServeListIdx: string = localStorage.getItem(\"GameDefaultServerList\");\n        HttpHelpEx.defaultServerListIndex = defaultServeListIdx == null ? 0 : Number(defaultServeListIdx);\n        let list: string[] = this.GetHomeUrl();\n        if (HttpHelpEx.curServerListIndex >= list.length) {\n            HttpHelpEx.defaultServerListIndex = 0;\n        }\n        // 0注册1找回密码2交易密码3重置密码\n        let url: string = list[HttpHelpEx.defaultServerListIndex] + \"?st=\" + Date.now();//强制拉最新的\n        //Debug.LogError(\"all serverlist:\" + AppConfigList.Current.home_url);\n        //Debug.LogError(\"default serverlist url:\" + url); \n        if (isCircle) CommonCtr.instance.ShowLoad_Circle(true);\n        HttpApi.http\n            .get(url, {})\n            .then(\n                (res: any) => {\n                    callback(res.data);\n                    //Debug.LogError(\"www.text : \" + www.text);\n                    CommonCtr.instance.ShowLoad_Circle(false);\n                },\n                (err) => {\n                    cc.error(JSON.stringify(err));\n                    CommonCtr.instance.ShowLoad_Circle(false);\n                    this.LoadServerList(callback, isCircle);\n                    //CommonCtr.instance.ShowLoad_Circle(false);\n                    //CommonCtr.instance.ShowTip(LanguageConfig.getLanguageById(1503));//服务器连接失败，请检测网络并重启客户端。\n                }\n            )\n            .catch((err) => {\n                CommonCtr.instance.ShowLoad_Circle(false);\n                this.LoadServerList(callback, isCircle);\n                //CommonCtr.instance.ShowLoad_Circle(false);\n                //CommonCtr.instance.ShowTip(LanguageConfig.getLanguageById(1503));//服务器连接失败，请检测网络并重启客户端。\n            });\n    }\n    //先从本地缓存的serverlist读取homeurl，没有缓存就去config里面的homeurl\n    public GetHomeUrl(): Array<string> {\n\n        // fs.readFile(fPath, \"utf8\", function (err, data){\n        //   if (err) {\n\n        //   }\n        //   else\n        //   {\n        //     var key = CryptoJS.enc.Utf8.parse('fucktheworld');\n        //     var iv = CryptoJS.enc.Utf8.parse('fucktheworld');\n        //     let decrypted = CryptoJS.AES.decrypt(data, key, {\n        //       keySize: 128 / 8,\n        //       iv: iv,\n        //       mode: CryptoJS.mode.CBC,\n        //       padding: CryptoJS.pad.Pkcs7\n        //     });\n        //     let _dataLocal:ServerListPod = JSON.parse(decrypted);\n        //     if (_dataLocal != null && _dataLocal.home_url != null && _dataLocal.home_url != \"\"){\n        //       return _dataLocal.home_url.split('|');\n        //     }\n        //     else\n        //     {\n        //       return homeUrl.split('|');\n        //     }\n        //     console.log(data);\n        //     console.log(\"--------\", fPath);\n        //   }\n        // });\n        return AppConfig.homeUrl.split('|');\n    }\n    public LoadServerList(callback: Function, isCircle: boolean = true): void {\n        if (HttpHelpEx.curServerListIndex == HttpHelpEx.defaultServerListIndex) {\n            HttpHelpEx.curServerListIndex++;\n            this.LoadServerList(callback, isCircle);\n            return;\n        }\n        let list: string[] = AppConfig.homeUrl.split('|');\n        if (HttpHelpEx.curServerListIndex >= list.length) {\n            CommonCtr.instance.ShowLoad_Circle(false);\n            callback(\"\");//拉取失败直接读取本地serverlist配置\n            //CommonCtr.instance.ShowTip(LanguageConfig.getLanguageById(1503));//服务器连接失败，请检测网络并重启客户端。\n            return;\n        }\n        let url: string = list[HttpHelpEx.curServerListIndex] + \"?st=\" + Date.now();//强制拉最新的;\n        if (isCircle) CommonCtr.instance.ShowLoad_Circle(true);\n        HttpApi.http\n            .get(url, {})\n            .then(\n                (res: any) => {\n                    callback(res.data);\n                    //Debug.LogError(\"www.text : \" + www.text);\n                    CommonCtr.instance.ShowLoad_Circle(false);\n                    localStorage.setItem(\"GameDefaultServerList\", HttpHelpEx.curServerListIndex.toString());\n                    //Debug.LogError(\"Set default ServerList index:\" + curServerListIndex);\n                },\n                (err) => {\n                    cc.error(JSON.stringify(err));\n                    HttpHelpEx.curServerListIndex++;\n                    if (HttpHelpEx.curServerListIndex >= list.length) {\n                        //PlayerPrefs.SetInt(\"GameDefaultServerList\", 0);\n                        CommonCtr.instance.ShowLoad_Circle(false);\n                        callback(\"\");//拉取失败直接读取本地serverlist配置\n                        //CommonCtr.instance.ShowTip(LanguageConfig.getLanguageById(1503));//服务器连接失败，请检测网络并重启客户端。\n                    }\n                    else {\n                        CommonCtr.instance.ShowLoad_Circle(false);\n                        this.LoadServerList(callback, isCircle);\n                    }\n                }\n            )\n            .catch((err) => {\n                HttpHelpEx.curServerListIndex++;\n                if (HttpHelpEx.curServerListIndex >= list.length) {\n                    //PlayerPrefs.SetInt(\"GameDefaultServerList\", 0);\n                    CommonCtr.instance.ShowLoad_Circle(false);\n                    callback(\"\");//拉取失败直接读取本地serverlist配置\n                    //CommonCtr.instance.ShowTip(LanguageConfig.getLanguageById(1503));//服务器连接失败，请检测网络并重启客户端。\n                }\n                else {\n                    CommonCtr.instance.ShowLoad_Circle(false);\n                    this.LoadServerList(callback, isCircle);\n                }\n            });\n    }\n    public URI(fileName: string): string {\n\n        return null;\n    }\n}\n\n\n"]}