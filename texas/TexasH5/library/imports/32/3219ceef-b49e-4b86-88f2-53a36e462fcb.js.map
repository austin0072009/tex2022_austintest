{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\SymbolBoard\\SymbolSpineShowConfig.ts"],"names":[],"mappings":";;;;;;AAGA;;GAEG;AACH;IASI;;;;;;;;;;;OAWG;IACH,+BACI,IAAY,EACZ,SAAiB,EACjB,kBAA0B,EAC1B,cAA6C,EAC7C,IAAa,EACb,aAAsB,EACtB,KAAc,EACd,kBAA4B;QAxBxB,oBAAe,GAAkC,EAAE,CAAC;QACpD,mBAAc,GAAW,CAAC,CAAC;QAC3B,WAAM,GAAW,CAAC,CAAC;QACnB,wBAAmB,GAAY,IAAI,CAAC;QAuBxC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAA;QACnC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;QACnB,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAA;QAC7C,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;SAC7B;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,aAAa,IAAI,IAAI,EAAE;YACvB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;SAC3B;QACD,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACnB;QACD,IAAI,kBAAkB,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACnC;IACL,CAAC;IAID,sBAAW,uCAAI;QAHf;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAID,sBAAW,4CAAS;QAHpB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IAID,sBAAW,qDAAkB;QAH7B;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;;;OAAA;IAID,sBAAW,iDAAc;QAHzB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,eAAe,CAAC;QAChC,CAAC;;;OAAA;IAID,sBAAW,uCAAI;QAHf;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAMD,sBAAW,gDAAa;QALxB;;;;WAIG;aACH;YACI,OAAO,IAAI,CAAC,cAAc,CAAC;QAC/B,CAAC;;;OAAA;IAID,sBAAW,wCAAK;QAHhB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IAKD,sBAAW,qDAAkB;QAH7B;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;;;OAAA;IACL,4BAAC;AAAD,CAvGA,AAuGC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import SpineAnimationPlayParameter from \"../../../fairygui-component/lib/SpineAnimationPlayParameter\";\n\n\n/**\n *\n */\nexport default class SymbolSpineShowConfig {\n    private _code: number;\n    private _spineName: string;\n    private _spineComponentName: string;\n    private _skin: string;\n    private _playParameters: SpineAnimationPlayParameter[] = [];\n    private _completeCount: number = 1;\n    private _scale: number = 1;\n    private _premultipliedAlpha: boolean = true;\n    /**\n     * 构造函数\n     *\n     * @param code 棋子编码\n     * @param spineName spine名称\n     * @param spineComponentName spine组件名称\n     * @param playParameters 动画播放参数\n     * @param skin 皮肤，如果没有指定，使用默认皮肤\n     * @param completeCount 播放次数，没有指定为1\n     * @param scale 缩放，没有指定为1\n     * @param premultipliedAlpha 贴图预乘，没有指定为false 默认为true\n     */\n    constructor(\n        code: number,\n        spineName: string,\n        spineComponentName: string,\n        playParameters: SpineAnimationPlayParameter[],\n        skin?: string,\n        completeCount?: number,\n        scale?: number,\n        premultipliedAlpha?: boolean,\n    ) {\n        this._code = code;\n        this._spineName = spineName;\n        this._spineComponentName = spineComponentName;\n        this._playParameters = playParameters;\n        this._completeCount = completeCount\n        this._scale = scale\n        this._premultipliedAlpha = premultipliedAlpha\n        if (!this._playParameters) {\n            this._playParameters = [];\n        }\n        this._skin = skin;\n        if (completeCount == null) {\n            this._completeCount = 1;\n        }\n        if (scale == null) {\n            this._scale = 1;\n        }\n        if (premultipliedAlpha == null) {\n            this._premultipliedAlpha = true;\n        }\n    }\n    /**\n     * 获取棋子编码\n     */\n    public get code(): number {\n        return this._code;\n    }\n    /**\n     * 获取spine名称\n     */\n    public get spineName(): string {\n        return this._spineName;\n    }\n    /**\n     * 获取spine组件名称\n     */\n    public get spineComponentName(): string {\n        return this._spineComponentName;\n    }\n    /**\n     * 获取动画播放参数\n     */\n    public get playParameters(): SpineAnimationPlayParameter[] {\n        return this._playParameters;\n    }\n    /**\n     * 获取皮肤\n     */\n    public get skin(): string {\n        return this._skin;\n    }\n    /**\n     * Gets complete count\n     * 获取完成计数，当播放次数达到该数值是认为播放结束，\n     * 为0表示不计数\n     */\n    public get completeCount(): number {\n        return this._completeCount;\n    }\n    /**\n     * 获取缩放\n     */\n    public get scale(): number {\n        return this._scale;\n    }\n\n    /**\n     * 获取贴图预乘\n     */\n    public get premultipliedAlpha(): boolean {\n        return this._premultipliedAlpha;\n    }\n}\n"]}