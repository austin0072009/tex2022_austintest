{"version":3,"sources":["assets\\GameHall\\script\\Lobby\\Components\\Broadcast.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BaseFrameNative } from \"../../../../Script/BaseFrameNative\";\r\nimport { notice } from \"../LobbyNetData\";\r\n\r\n/**\r\n * @description 广播\r\n */\r\nexport default class Broadcast extends fgui.GComponent {\r\n    public constructor() {\r\n        super();\r\n    }\r\n    private bgImg: fgui.GImage;\r\n    private textLabel: fgui.GTextField;\r\n    protected onConstruct(): void {\r\n        this.textLabel = this.getChild(\"text\").asRichTextField;\r\n        this.bgImg = this.getChild(\"n2\").asImage;\r\n        this.node.opacity = 0;\r\n    }\r\n\r\n    public messages: string[] = [];\r\n\r\n    /**是否正在广播 */\r\n    private isOpend: boolean = false;\r\n    public clean() {\r\n        this.messages = [];\r\n    }\r\n\r\n    /**开始的时间 */\r\n    private startTime: number;\r\n    /**结束的时间 */\r\n    private endTime: number;\r\n    /**公告的内容 */\r\n    private content: string;\r\n\r\n    private noticelist: notice[] = [];\r\n\r\n    private nowIndex: number = 0;\r\n\r\n    public initNotice(noticelist: notice[]) {\r\n        // for (let i = 0; i < noticelist.length; i++) {\r\n        //     let now = Date.now();\r\n        //     let startTime = new Date(noticelist[i].starttime).getTime();\r\n        //     let endTime = new Date(noticelist[i].endtime).getTime();\r\n        //     if ((now >= startTime && now <= endTime) || endTime < 0) {\r\n        //         this.noticelist.push(noticelist[i]);\r\n        //     }\r\n        // }\r\n        // if (this.noticelist.length <= 0) {\r\n        //     return;\r\n        // }\r\n        // this.node.stopAllActions();\r\n        this.isOpend = false;\r\n        this.loopNotice();\r\n    }\r\n    public addNotice(Notice: notice) {\r\n        this.noticelist.push(Notice);\r\n    }\r\n    public loopNotice() {\r\n        this.noticelist = BaseFrameNative.broadnotice;\r\n        if (this.noticelist.length <= 0) {\r\n            return;\r\n        }\r\n        this.content = this.noticelist[this.nowIndex].content;\r\n        this.startTime = new Date(this.noticelist[this.nowIndex].starttime).getTime();\r\n        this.endTime = new Date(this.noticelist[this.nowIndex].endtime).getTime();\r\n\r\n        this.node.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(3),\r\n                cc.callFunc(() => {\r\n                    if (this.noticelist.length <= 0) {\r\n                        return;\r\n                    }\r\n                    let now = Date.now();\r\n                    this.nowIndex += 1;\r\n                    if ((now >= this.startTime && now <= this.endTime) || this.endTime < 0) {\r\n                        this.addMessage(this.content);\r\n                    } else {\r\n                        this.noticelist.splice(this.nowIndex, 1);\r\n                    }\r\n                    if (this.nowIndex > this.noticelist.length - 1) {\r\n                        this.nowIndex = 0;\r\n                        this.loopNotice();\r\n                    }\r\n                    // this.loopNotice();\r\n                })))\r\n    }\r\n\r\n    public addMessage(str: string, lv?: boolean) {\r\n        if (lv) {\r\n            this.messages.unshift(str);\r\n        } else {\r\n            this.messages.push(str);\r\n        }\r\n        if (!this.isOpend) {\r\n            this.showBroadcast();\r\n        }\r\n    }\r\n\r\n    private showBroadcast() {\r\n        let mess = this.messages.shift();\r\n        if (!mess) {\r\n            this.isOpend = false;\r\n            this.node.opacity = 0;\r\n            this.bgImg.visible = false;\r\n            return;\r\n        }\r\n        this.bgImg.visible = true;\r\n        this.isOpend = true;\r\n        this.textLabel.text = mess;\r\n        this.textLabel.node.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(3),\r\n                cc.callFunc(() => { (this.node.opacity != 255) && (this.node.opacity = 255); }),\r\n                cc.moveBy(10, cc.v2(-(this.textLabel.width + this.node.width), 0)),\r\n                cc.callFunc(() => {\r\n                    this.textLabel.text = '';\r\n                    this.textLabel.node.x = this.node.width;\r\n                    this.isOpend = false;\r\n                    this.loopNotice();\r\n                    this.bgImg.visible = false;\r\n                    this.node.opacity = 0;\r\n                }))\r\n        );\r\n    }\r\n\r\n    onDestroy() {\r\n        console.log(\"Broadcast onDestroy\");\r\n        this.textLabel.node.stopAllActions();\r\n        this.node.stopAllActions();\r\n    }\r\n\r\n}"]}