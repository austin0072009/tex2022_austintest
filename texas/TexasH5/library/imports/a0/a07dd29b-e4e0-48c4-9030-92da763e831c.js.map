{"version":3,"sources":["assets\\Script\\Encrypt\\lib\\jsbn\\prng4.js"],"names":["Arcfour","i","j","S","prototype","init","key","t","length","next","prng_newstate","rng_psize"],"mappings":";;;;;;;;;;AAAA;AACA,IAAIA,OAAO;AAAG;AAAe,YAAY;AACrC,WAASA,OAAT,GAAmB;AACf,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,EAAT;AACH,GALoC,CAMrC;AACA;;;AACAH,EAAAA,OAAO,CAACI,SAAR,CAAkBC,IAAlB,GAAyB,UAAUC,GAAV,EAAe;AACpC,QAAIL,CAAJ;AACA,QAAIC,CAAJ;AACA,QAAIK,CAAJ;;AACA,SAAKN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqB,EAAEA,CAAvB,EAA0B;AACtB,WAAKE,CAAL,CAAOF,CAAP,IAAYA,CAAZ;AACH;;AACDC,IAAAA,CAAC,GAAG,CAAJ;;AACA,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqB,EAAEA,CAAvB,EAA0B;AACtBC,MAAAA,CAAC,GAAIA,CAAC,GAAG,KAAKC,CAAL,CAAOF,CAAP,CAAJ,GAAgBK,GAAG,CAACL,CAAC,GAAGK,GAAG,CAACE,MAAT,CAApB,GAAwC,GAA5C;AACAD,MAAAA,CAAC,GAAG,KAAKJ,CAAL,CAAOF,CAAP,CAAJ;AACA,WAAKE,CAAL,CAAOF,CAAP,IAAY,KAAKE,CAAL,CAAOD,CAAP,CAAZ;AACA,WAAKC,CAAL,CAAOD,CAAP,IAAYK,CAAZ;AACH;;AACD,SAAKN,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACH,GAhBD,CARqC,CAyBrC;;;AACAF,EAAAA,OAAO,CAACI,SAAR,CAAkBK,IAAlB,GAAyB,YAAY;AACjC,QAAIF,CAAJ;AACA,SAAKN,CAAL,GAAU,KAAKA,CAAL,GAAS,CAAV,GAAe,GAAxB;AACA,SAAKC,CAAL,GAAU,KAAKA,CAAL,GAAS,KAAKC,CAAL,CAAO,KAAKF,CAAZ,CAAV,GAA4B,GAArC;AACAM,IAAAA,CAAC,GAAG,KAAKJ,CAAL,CAAO,KAAKF,CAAZ,CAAJ;AACA,SAAKE,CAAL,CAAO,KAAKF,CAAZ,IAAiB,KAAKE,CAAL,CAAO,KAAKD,CAAZ,CAAjB;AACA,SAAKC,CAAL,CAAO,KAAKD,CAAZ,IAAiBK,CAAjB;AACA,WAAO,KAAKJ,CAAL,CAAQI,CAAC,GAAG,KAAKJ,CAAL,CAAO,KAAKF,CAAZ,CAAL,GAAuB,GAA9B,CAAP;AACH,GARD;;AASA,SAAOD,OAAP;AACH,CApC4B,EAA7B;;;;AAsCA;AACO,SAASU,aAAT,GAAyB;AAC5B,SAAO,IAAIV,OAAJ,EAAP;AACH,EACD;AACA;;;AACO,IAAIW,SAAS,GAAG,GAAhB","sourceRoot":"/","sourcesContent":["// prng4.js - uses Arcfour as a PRNG\nvar Arcfour = /** @class */ (function () {\n    function Arcfour() {\n        this.i = 0;\n        this.j = 0;\n        this.S = [];\n    }\n    // Arcfour.prototype.init = ARC4init;\n    // Initialize arcfour context from key, an array of ints, each from [0..255]\n    Arcfour.prototype.init = function (key) {\n        var i;\n        var j;\n        var t;\n        for (i = 0; i < 256; ++i) {\n            this.S[i] = i;\n        }\n        j = 0;\n        for (i = 0; i < 256; ++i) {\n            j = (j + this.S[i] + key[i % key.length]) & 255;\n            t = this.S[i];\n            this.S[i] = this.S[j];\n            this.S[j] = t;\n        }\n        this.i = 0;\n        this.j = 0;\n    };\n    // Arcfour.prototype.next = ARC4next;\n    Arcfour.prototype.next = function () {\n        var t;\n        this.i = (this.i + 1) & 255;\n        this.j = (this.j + this.S[this.i]) & 255;\n        t = this.S[this.i];\n        this.S[this.i] = this.S[this.j];\n        this.S[this.j] = t;\n        return this.S[(t + this.S[this.i]) & 255];\n    };\n    return Arcfour;\n}());\nexport { Arcfour };\n// Plug in your RNG constructor here\nexport function prng_newstate() {\n    return new Arcfour();\n}\n// Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\nexport var rng_psize = 256;\n"]}