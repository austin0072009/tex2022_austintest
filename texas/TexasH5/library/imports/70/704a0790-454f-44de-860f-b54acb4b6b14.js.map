{"version":3,"sources":["assets\\Script\\BaseFrame\\WebSocketManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { NotificationCenter } from \"../Common/Managers/NotificationCenter\";\nimport NotificationName from \"../Common/Managers/NotificationName\";\nimport { OuterMessage } from '../modules/@mogafa/utils/lib/proto/OuterMessage.pb';\nimport { proto } from \"../modules/@mogafa/utils/lib/proto/MessageID.pb\";\nimport { HotfixMessage } from \"../modules/@mogafa/utils/lib/proto/HotfixMessage.pb\";\nimport WebSocketApi from \"../modules/@slotsmaster/ui-common/lib/WebSocketApi\";\nimport { AppConst } from \"../modules/@slotsmaster/ui-common/lib/AppConst\";\nimport * as ClientMessage from \"../modules/@mogafa/utils/lib/ClientMessage\";\nimport WebSocket from \"../modules/@mogafa/utils/lib/WebSocket\";\nimport { CommonCtr } from \"./CommonCtr\";\nimport { sc_login } from \"../modules/@mogafa/utils/lib/ClientMessage\";\nimport { BaseFrameNative } from \"../../Script/BaseFrameNative\";\nimport { MgrNative } from \"../MgrNative\";\n\nexport class WebSocketManager {\n    private static instance: WebSocketManager; //类型为这个类\n    private _recieveCallBKs: Function[] = [];\n    private pushMesagesMap: Map<string, Function>;\n    private _port: string;\n    private _host: string;\n    public EnterRoomCallback: Function;\n    public CSLoginCallback: Function;\n\n    private pid: string;\n    private pwd: string;\n    private constructor() { }\n\n    private msgID: number = -999; // 消息ID\n    public offlineCallback: Function = null; // 踢下线的回调\n\n    public timer: NodeJS.Timeout = null;\n    public time: number = 20;\n    public TimeOutList: string[] = [];\n\n    //单例\n    static get getInstance() {\n        if (!this.instance) {\n            this.instance = new WebSocketManager();\n            this.instance.Init();\n        }\n        return this.instance;\n    }\n\n    public get webSocket(): WebSocket {\n        return WebSocketApi.socket;\n    }\n\n\n    public Init() {\n        this.pushMesagesMap = new Map<string, Function>();\n        //推送消息\n        this.webSocket.setActorMessageCallback((msg) => {\n            let data = null\n            if (msg.Info && msg.Info.length > 0) {\n                data = JSON.parse(msg.Info[0].Message)\n                console.warn(\"fn:\" + data.fn + \"->\" + msg.Info[0].Message);\n                // console.log(\"%cfn:\" + data.fn + \"->\" + msg.Info[0].Message, 'color:yellow');\n                if (data.result == \"-444444\") {\n                    console.log(\"账号在其他地方登录，请退出重新登录！\");\n                    WebSocketApi.socket._isTopAccount = true;\n                    let remindStr = \"账号在其他地方登录，请退出重新登录！\";\n                    if (WebSocketApi.socket.topAccountCallback) {\n                        WebSocketApi.socket.topAccountCallback(remindStr);\n                    }\n                    // 停止心跳\n                    WebSocketApi.socket.clearTimer();\n                    // 清空回调 断开连接\n                    this.DisConnect();\n                    return;\n                }\n                this.isContinuousInID(data._msgid);\n                if (this.pushMesagesMap.has(data.fn)) {\n                    this.pushMesagesMap.get(data.fn)(data);\n                }\n            }\n        });\n    }\n\n    public GateServer(value: string) {\n        WebSocketApi.gateServer = value;\n    }\n\n    public GatePort(value: number) {\n        WebSocketApi.gatePort = value;\n    }\n\n    public Reconnect() {\n        this.CSLoginCallback = null;\n        let params =\n        {\n            host: WebSocketApi.gateServer,\n            port: WebSocketApi.gatePort,\n            callback: this.reconnectCallback.bind(this)\n        };\n        WebSocketApi.socket.reconnect(params);\n    }\n\n    public DisConnect() {\n        console.log(\"主动断开socket连接 DisConnect !\");\n        WebSocketApi.socket.disconnect();\n        this._recieveCallBKs = [];\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n    }\n\n    public reconnectCallback() {\n        NotificationCenter.Instance.emit(NotificationName.NetWork_Event.SOCKET_CONNECT_SUC_EVENT);\n    }\n\n    //注册推送消息\n    public RegistNotify(msgFn: string, callbak: Function) {\n        if (this.pushMesagesMap == null) {\n            return;\n        }\n        this.pushMesagesMap.set(msgFn, callbak);\n    }\n\n    //移除推送消息\n    public UnRegistNotify(msgFn: string) {\n        if (this.pushMesagesMap == null || this.pushMesagesMap.size == 0) {\n            return;\n        }\n        if (this.pushMesagesMap.has(msgFn)) {\n            this.pushMesagesMap.delete(msgFn);\n        }\n    }\n\n    public Send(json: any, callback: Function): void {\n        let req = OuterMessage.C2SS_ActorRPCRequest.create();\n        req.ActorId = AppConst.Unitid;\n        req.request = json;\n        this._recieveCallBKs.push(callback);\n        this.webSocket.request(\n            proto.MsgID.C2SS_ActorRPCRequest,\n            req,\n            this.OnenterActorRPCRequest.bind(this),\n            this.RecieveFailBack.bind(this)\n        );\n    }\n    public SendJSON(pkg: any, callback: Function): void {\n        let req = OuterMessage.C2SS_ActorRPCRequest.create();\n        req.ActorId = AppConst.Unitid;\n        req.request = JSON.stringify(pkg);\n        this._recieveCallBKs.push(callback);\n        this.webSocket.request(\n            proto.MsgID.C2SS_ActorRPCRequest,\n            req,\n            this.OnenterActorRPCRequest.bind(this),\n            this.RecieveFailBack.bind(this)\n        );\n    }\n\n    public SendJSONTimeOut(pkg: any, callback: Function) {\n        // 显示转圈\n        CommonCtr.instance.view.showLoading();\n        this.SendJSON(pkg, callback);\n        let fnList = pkg.fn.split(\"_\");\n        this.TimeOutList.push(fnList[1]);\n        this.timer = setTimeout(() => {\n            CommonCtr.instance.view.hideLoading();\n            CommonCtr.instance.view.ShowTipLabel(\"连接服务器超时，请重试！\");\n        }, this.time * 1000);\n    }\n\n    private OnenterActorRPCRequest(ret) {\n        // 接受到数据，重新定时收数据计时器\n        // WebSocketApi.socket.resetReceiveMsgTimer();\n        // WebSocketApi.socket.resetHearbeatTimer();  // 重置心跳包发送器\n        if (ret && ret.route == proto.MsgID.C2SS_ActorRPCRequest) {\n            if (ret.Message) {\n                let msgResult: any = JSON.parse(ret.Message);\n                if (this.TimeOutList.length > 0) {\n                    let fnList = msgResult.fn.split(\"_\");\n                    let fnNameList: string[] = [...this.TimeOutList];\n                    for (let index = 0; index < this.TimeOutList.length; index++) {\n                        let fnName = this.TimeOutList[index];\n                        if (fnName == fnList[1]) {\n                            fnNameList.splice(index, 1);\n                            break;\n                        }\n                    }\n                    this.TimeOutList = [...fnNameList];\n                    if (this.TimeOutList.length <= 0) {\n                        if (CommonCtr.instance.view) CommonCtr.instance.view.hideLoading();\n                        if (this.timer) {\n                            clearTimeout(this.timer);\n                            this.timer = null;\n                        }\n                    }\n                }\n                var callback = this._recieveCallBKs.shift();\n                if (callback != null) callback(msgResult);\n            }\n        }\n    }\n\n    private RecieveFailBack() {\n\n    }\n\n    // 判断消息ID是否连续\n    private isContinuousInID(msgID: number) {\n        if (this.msgID >= 0 && msgID - 1 != this.msgID) {\n            // 有掉包，需要刷新\n            let callback = this.webSocket._refreshCallback;\n            if (callback) callback();\n        }\n        this.msgID = msgID;\n    }\n\n    LoginByPIDPWD(pid: string, pwd: string): void {\n        this.pid = pid;\n        this.pwd = pwd;\n        this.Login_C2R_Login();\n    }\n    //#region test code\n\n    Login_C2R_Login(): void {\n        MgrNative.getInstance().getDeviceGPS();\n        this._host = BaseFrameNative.serverlistItem.url;\n        this._port = BaseFrameNative.serverlistItem.port;\n        WebSocketApi.gateServer = this._host;\n        // this._host = \"129.204.109.218\";\n        // this._host = \"106.13.207.246\";\n        // this._port = \"10002\";\n        // this._host = \"106.13.222.130\"\n        console.log(\" LoginRoom host : \" + this._host + \" this._port:\" + this._port);\n        if (this._port && this._host) {\n            let reqlogin = HotfixMessage.C2R_Login.create();\n            reqlogin.Account = this.pid;\n            reqlogin.RpcId = 1;\n            reqlogin.Password = this.pwd;\n            let params = {\n                host: this._host,\n                port: this._port,\n                callback: () => {\n                    WebSocketApi.socket.request(proto.MsgID.C2R_Login, reqlogin, this.Login_C2R_Login_Back.bind(this));\n                },\n            };\n            WebSocketApi.socket.reconnect(params);\n        }\n    }\n\n    public Login_C2R_Login_Back(ret) {\n        console.log(\"---Login_C2R_Login_Back---\", ret);\n        if (ret.Error && ret.Error == \"200102\") {\n            if (this.CSLoginCallback) {\n                this.CSLoginCallback(null);\n            }\n            CommonCtr.instance.view.ShowTipLabel(\"登录失败，账号或密码错误\");\n            return;\n        }\n        this.DisConnect();\n        setTimeout(() => {\n            this.LoginGate(ret);\n        }, 300);\n    }\n\n    public LoginGate(msg): void {\n        let str = msg.Address.split(\":\", 2);\n        this._host = str[0];\n        this._port = str[1];\n        if (this._port && this._host) {\n            let reqlogin = HotfixMessage.C2G_LoginGate.create();\n            reqlogin.userid = msg.userid;\n            reqlogin.Key = msg.Key;\n            let params = {\n                host: this._host,\n                port: this._port,\n                callback: () => {\n                    WebSocketApi.socket.request(proto.MsgID.C2G_LoginGate, reqlogin, this.LoginGate_back.bind(this));\n                },\n            };\n            WebSocketApi.socket.reconnect(params);\n        }\n    }\n\n    public LoginGate_back(): void {\n        if (this._port && this._host) {\n            let reqlogin = OuterMessage.C2G_EnterMap.create();\n            WebSocketApi.socket.request(proto.MsgID.C2G_EnterMap, reqlogin, this.EnterMap_Back.bind(this),);\n        }\n    }\n\n    public EnterMap_Back(ret) {\n        let login = new ClientMessage.cs_login();\n        login.fn = \"cs_login\";\n        login.accountId = AppConst.Account;\n        let json_login = JSON.stringify(login);\n        this.Send(json_login, this.sc_login.bind(this));\n    }\n\n\n    public sc_login(data: sc_login) {\n        console.log(\"---sc_login---\", data);\n        if (data.result == 1) {\n            AppConst.Account = data.user.userid;\n            AppConst.gameId = data.gameid;\n            AppConst.cidx = data.cidx;\n            AppConst.mPlayerModel = data.user;\n\n            if (this.CSLoginCallback != null) {\n                this.CSLoginCallback(data);\n                this.CSLoginCallback = null;\n                return;\n            }\n        }\n        else if (data.result == -1005) {   //go to creator 1005\n            if (this.CSLoginCallback != null) {\n                this.CSLoginCallback(data);\n                this.CSLoginCallback = null;\n                return;\n            }\n        }\n        else {\n            CommonCtr.instance.ShowTipLabel(\"登录失败 error code:\" + data.result);\n        }\n    }\n\n    public clearTimer() {\n        this.webSocket.clearTimer();\n    }\n\n    //#endregion\n}"]}