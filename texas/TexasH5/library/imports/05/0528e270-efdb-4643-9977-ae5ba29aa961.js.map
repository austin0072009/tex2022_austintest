{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\utils\\lib\\Utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nexport class Utils {\n    /**\n     * 数字分割\n     * @param number 转换目标值\n     * @param places 保留小数点\n     */\n    public static formatNumberToInt(number: number | string, places: number = 0) {\n        places = places || 0;\n        const thousand = \",\";\n        var negative = number < 0 ? \"-\" : \"\",\n            i = parseInt((number = Math.abs(+number || 0).toFixed(places)), 10) + \"\",\n            j = (j = i.length) > 3 ? j % 3 : 0;\n        return negative + (j ? i.substr(0, j) + thousand : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousand);\n    }\n\n    /**\n     * 转换为计数单位数据\n     * @param num\n     */\n    public static numToCountingNnit(num: number): string {\n        if (num < 1000) {\n            return num + \"\";\n        } else if (num >= 1000000000) {\n            return num / 1000000000 + \"B\";\n        } else if (num >= 1000000) {\n            return num / 1000000 + \"M\";\n        } else if (num >= 1000) {\n            return num / 1000 + \"K\";\n        }\n    }\n\n    /**\n     * 转换为普通数据\n     * @param num\n     */\n    public static CountingNnitToNum(str: string): number {\n        str = str + \"\";\n        const unit = str.substr(str.length - 1, str.length);\n        if (unit == \"K\" || unit == \"k\") {\n            let num: string = str.substr(0, str.length - 1);\n            return Number(num) * 1000;\n        } else if (unit == \"M\" || unit == \"m\") {\n            let _num: string = str.substr(0, str.length - 1);\n            return Number(_num) * 1000000;\n        } else if (unit == \"B\" || unit == \"b\") {\n            let _num2: string = str.substr(0, str.length - 1);\n            return Number(_num2) * 1000000000;\n        }\n    }\n\n    /**\n     * 加载Spine动画\n     * @param url 全路径\n     * @param node 添加到某节点\n     * @calFun\n     * @param ifPreAlpha 是否开始贴图预乘\n     */\n    public static addSpine(url: string, node: any, calFun: any, ifPreAlpha: boolean = false) {\n        let spine: sp.Skeleton = null;\n        cc.loader.loadRes(url, sp.SkeletonData, (err, res) => {\n            spine = node.addComponent(sp.Skeleton);\n            spine.skeletonData = res;\n            spine.premultipliedAlpha = ifPreAlpha;\n            if (spine) calFun(spine);\n        });\n    }\n\n    public static create(\n        time: number,\n        startPointX: number,\n        startPointY: number,\n        endPointX: number,\n        endPointY: number,\n        height: number,\n        angle: number\n    ) {\n        // 把角度转换为弧度\n        let radian: number = (angle * 3.14159) / 180;\n        // 第一个控制点为抛物线左半弧的中点\n        let q1x = startPointX + (endPointX - startPointX) / 4;\n        let q1 = cc.v2(q1x, height + startPointY + Math.cos(radian) * q1x);\n        // 第二个控制点为整个抛物线的中点\n        let q2x = startPointX + (endPointX - startPointX) / 2;\n        let q2 = cc.v2(q2x, height + startPointY + Math.cos(radian) * q2x);\n        // 曲线配置\n        return cc.bezierTo(time, [q1, q2, cc.v2(endPointX, endPointY)]);\n    }\n\n    //生成UUID\n    public static generateUUID(): string {\n        let chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\n        let uuid = [],\n            i;\n        let r;\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = \"-\";\n        uuid[14] = \"4\";\n        for (i = 0; i < 36; i++) {\n            if (!uuid[i]) {\n                r = 0 | (Math.random() * 16);\n                uuid[i] = chars[i == 19 ? (r & 0x3) | 0x8 : r];\n            }\n        }\n        return uuid.join(\"\");\n    }\n    //将带\",\"转化为number\n    public static strToNumber(str): number {\n        var strArr = str.split(\",\");\n        var newStr = \"\";\n        strArr.forEach((i) => {\n            newStr += i;\n        });\n        return Number(newStr);\n    }\n    //将数字转为有\",\"隔开数据格式\n    public static numToStr(number): string {\n        var coin = String(number).split(\"\");\n        var newCoin = \"\";\n        var curindex = 0;\n        for (let index = coin.length - 1; index >= 0; index--) {\n            const element = coin[index];\n            if (curindex == 3) {\n                newCoin += \",\";\n                curindex = 0;\n            }\n            curindex++;\n            newCoin += element;\n        }\n\n        var reverse = function (str) {\n            return str.split(\"\").reverse().join(\"\");\n        };\n        return reverse(newCoin);\n    }\n\n    //限制字符串为指定长度\n    public static subStrLen(str, len): string {\n        var strLength = 0;\n        var strLen = 0;\n        var strCut = \"\";\n        strLen = str.length;\n        for (var i = 0; i < strLen; i++) {\n            var a = str.charAt(i);\n            strLength++;\n            if (escape(a).length > 4) {\n                strLength++;\n            }\n            strCut = strCut.concat(a);\n            if (strLength >= len) {\n                strCut = strCut.concat(\"..\");\n                return strCut;\n            }\n        }\n        if (strLength < len) {\n            return str;\n        }\n        return \"?\";\n    }\n    /**\n     * 格式化秒为时、分、秒\n     * @param value\n     */\n    public formatSeconds(value: number): { [key: string]: any } {\n        if (value <= 0) {\n            cc.error(\"倒计时不能小于等于0\");\n            return;\n        }\n        let h = Math.floor(value / 3600) < 10 ? \"0\" + Math.floor(value / 3600) : Math.floor(value / 3600);\n        let m =\n            Math.floor((value / 60) % 60) < 10 ? \"0\" + Math.floor((value / 60) % 60) : Math.floor((value / 60) % 60);\n        let s = Math.floor(value % 60) < 10 ? \"0\" + Math.floor(value % 60) : Math.floor(value % 60);\n\n        return {\n            hour: h,\n            minute: m,\n            second: s,\n        };\n    }\n    public static getTimeString(timer: number): string {\n        let second = Math.floor(timer % 60) < 10 ? \"0\" + Math.floor(timer % 60) : Math.floor(timer % 60);\n        let minute =\n            Math.floor((timer / 60) % 60) < 10 ? \"0\" + Math.floor((timer / 60) % 60) : Math.floor((timer / 60) % 60);\n        let hour = Math.floor(timer / 3600) < 10 ? \"0\" + Math.floor(timer / 3600) : Math.floor(timer / 3600);\n        let timeStr = \"\";\n        timeStr = hour.toString() + \":\" + minute.toString() + \":\" + second.toString();\n        return timeStr;\n    }\n}\n"]}