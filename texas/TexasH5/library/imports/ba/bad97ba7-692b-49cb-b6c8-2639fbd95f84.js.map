{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\SymbolBoard\\ReelBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import CellBase from \"./CellBase\";\n//import { fgui } from \"fairygui\";\nimport { SymbolBoardEvent } from \"./SymbolBoardEvent\";\nimport HoldWinBase from \"./HoldWinBase\";\nimport SymbolBoardBase from \"./SymbolBoardBase\";\nimport { MogafaSlots } from \"../MogafaSlots\";\nimport { SymbolBoardStatus } from \"./SymbolBoardStatus\";\n\nimport { IResilienceMove } from \"../IResilienceMove\";\nimport SlotGameStageBase from \"../GameStage/SlotGameStageBase\";\nimport FguiComponentBase from \"../../../fairygui-component/lib/FguiComponentBase\";\nimport NumberUtils from \"../../../utils/lib/NumberUtils\";\nimport SpinResultsColumn from \"../../../../spin-result/SpinResultsColumn\";\n\n\nexport default abstract class ReelBase extends FguiComponentBase implements MogafaSlots {\n    /**\n     * 关卡编码\n     */\n    private _stageCode: string;\n    /**\n     * 所属holdWin\n     */\n    private _holdWin: HoldWinBase;\n    /**\n     * 所属棋盘\n     */\n    private _symbolBoard: SymbolBoardBase;\n    /**\n     * 启动回弹开始\n     */\n    private _startUpResilience: IResilienceMove = null;\n    /**\n     * 启动回弹\n     */\n    private _startDownResilience: IResilienceMove = null;\n    /**\n     * 结束回弹开始\n     */\n    private _endDownResilience: IResilienceMove = null;\n    /**\n     * 结束回弹结束\n     */\n    private _endUpResilience: IResilienceMove = null;\n    /**\n     * 能否结束回弹\n     */\n    private _canEndResilience: boolean = true;\n    /**\n     * 获取关卡编码\n     */\n    get stageCode(): string {\n        return this._stageCode;\n    }\n    /**\n     * 设置关卡编码\n     */\n    set stageCode(value: string) {\n        this._stageCode = value;\n\n        for (let i = 0; i < this._cells.length; i++) {\n            this._cells[i].stageCode = value;\n        }\n        for (let i = 0; i < this._mustBeFixedCells.length; i++) {\n            this._mustBeFixedCells[i].stageCode = value;\n        }\n    }\n    /**\n     * 设置holdWin\n     */\n    get holdWin(): HoldWinBase {\n        return this._holdWin;\n    }\n    /**\n     * 获取holdWin\n     */\n    set holdWin(value: HoldWinBase) {\n        this._holdWin = value;\n    }\n    /**\n     * 获取棋盘\n     */\n    get symbolBoard(): SymbolBoardBase {\n        return this._symbolBoard;\n    }\n    /**\n     * Sets symbol board\n     * 设置棋盘\n     */\n    set symbolBoard(value: SymbolBoardBase) {\n        this._symbolBoard = value;\n    }\n    /**\n     * Board status of symbol base\n     * 棋盘状态\n     */\n    private _boardStatus: SymbolBoardStatus;\n    get boardStatus(): SymbolBoardStatus {\n        return this._boardStatus;\n    }\n    set boardStatus(value: SymbolBoardStatus) {\n        this._boardStatus = value;\n        for (let i = 0; i < this._cells.length; i++) {\n            this._cells[i].boardStatus = value;\n        }\n        this.status = value;\n    }\n\n    /**\n     * Status  of symbol base\n     * 棋子状态\n     */\n    private _status: SymbolBoardStatus;\n    get status(): SymbolBoardStatus {\n        return this._status;\n    }\n    set status(value: SymbolBoardStatus) {\n        this._status = value;\n        for (let i = 0; i < this._cells.length; i++) {\n            this._cells[i].status = value;\n        }\n    }\n    /**\n     * 能否结束回弹\n     */\n    set canEndResilience(value: boolean) {\n        this._canEndResilience = value\n    }\n    get canEndResilience(): boolean {\n        return this._canEndResilience\n    }\n    protected abstract get maxCode(): number;\n    protected abstract get maskComponentName(): string;\n    /**\n     * 最下面一个格子的Y坐标（包含用于转动的多余的格子）\n     */\n    protected abstract get theFinalBottomCellY(): number;\n    protected _cells: CellBase[] = [];\n    protected _finalCodes: number[] = [];\n    private _finalFixeds: boolean[] = [];\n    private _finalFixedsReseted: boolean = false;\n    private _nextFixeds: boolean[] = [];\n    private _fixedUuids: string[] = [];\n    private _fixedPositions: number[] = [];\n    private _mustBeFixedCells: CellBase[] = [];\n    protected _mockCodes: number[][] = [];\n    private _mask: fgui.GObject;\n    private _moveEnd: boolean;\n    private _index: number;\n    private isFirstMove: boolean;\n\n    public get cells(): CellBase[] {\n        return this._cells;\n    }\n    protected get mustBeFixedCells(): CellBase[] {\n        return this._mustBeFixedCells;\n    }\n    public set index(value: number) {\n        this._index = value;\n    }\n    public get index(): number {\n        return this._index;\n    }\n    // public get moveEnd(): boolean {\n    //     return this._moveEnd;\n    // }\n    public get finalCodes(): number[] {\n        return this._finalCodes;\n    }\n    public set finalCodes(value: number[]) {\n        this._finalCodes = value;\n        if (!this._finalCodes) {\n            this._finalCodes = [];\n        }\n    }\n    public get mockCodes(): number[][] {\n        return this._mockCodes;\n    }\n    public set mockCodes(value: number[][]) {\n        this._mockCodes = value;\n        if (!this._mockCodes) {\n            this._mockCodes = [];\n        }\n    }\n    /**\n     * 用于转动的顶部多余的格子数\n     */\n    public get topExtraCells(): number {\n        return 1;\n    }\n    /**\n     * 用于转动的底部多余的格子数\n     */\n    public get bottomExtraCells(): number {\n        return 0;\n    }\n    private reelResults: SpinResultsColumn;\n    public set spinResults(value: SpinResultsColumn) {\n        this.reelResults = value;\n        this._nextFixeds = [];\n        for (let i = 0; i < value.cells.length; i++) {\n            const cell = this.cells[i + this.topExtraCells];\n            cell.spinResult = value.cells[i];\n            this._nextFixeds.push(value.cells[i].fixed);\n            if (this.mustBeFixedCells && this.mustBeFixedCells.length > 0) {\n                this.mustBeFixedCells[i].spinResult = value.cells[i];\n            }\n        }\n    }\n    protected createChildComponents() {\n        super.createChildComponents();\n        this._mask = this.fguiComponent.mask;\n        this.fguiComponent.setMask(null, false);\n    }\n    public addFguiComponent<T extends FguiComponentBase>(type: { new(): T }, changeSize: boolean = true): T {\n        let child = super.addFguiComponent(type, changeSize);\n        if (child instanceof CellBase) {\n            const cell = (child as unknown) as CellBase;\n            cell.stageCode = this.stageCode;\n            cell.reel = this;\n            this._cells.push(cell);\n            cell.index = this._cells.length - 1;\n            cell.mogafaId = cell.index.toString();\n        }\n        return child;\n    }\n    public beforeStartWaitingResults(): void {\n        this._moveEnd = false;\n        //this.fguiComponent.setMask(this._mask, false);\n    }\n    public beforeStopWaitingResults(): void { }\n    protected afterStopWaitingResults(): void {\n        //this.fguiComponent.setMask(null, false);\n        const parent = this.parent;\n        if (parent && parent instanceof HoldWinBase) {\n            <HoldWinBase>(<any>parent.unholdWin(this.index));\n        }\n    }\n    public replaceMockCodes(cellIndex?: number, code?: number): void {\n        if (cellIndex != null && code != null) {\n            const cell = this.getCell(cellIndex);\n            cell.replaceMockCodeInternal(code);\n            return;\n        }\n        let finalIndex = 0;\n        for (let i = 0; i < this.finalCodes.length; i++) {\n            let cell = this.getFinalCell(i);\n            if (cell) {\n                cell.index = finalIndex;\n                let finalCode = this._finalCodes[i];\n                cell.finalCode = finalCode;\n                cell.mockCodes = this.mockCodes[i];\n                if (cell.mockCodes && cell.mockCodes.length > 0) {\n                    cell.replaceMockCodeInternal();\n                }\n            }\n        }\n    }\n    setReelStartResilience(up: IResilienceMove, down: IResilienceMove) {\n        this._startUpResilience = up;\n        this._startDownResilience = down;\n    }\n    setReelEndResilience(down: IResilienceMove, up: IResilienceMove) {\n        this._endDownResilience = down;\n        this._endUpResilience = up;\n    }\n    reelStartResilience() {\n        this.startResilienced = false;\n        this.sortCell();\n        //todo 第一次启动回弹移动到末尾的第一个棋子未显示的原因是当前的code为undefined\n        //todo 因此临时的给当前棋子随机赋一个值\n        this.cells[0].code = NumberUtils.random(0, 11);\n        this.cells[0].fguiY = this.cells[this.cells.length - 1].fguiY + this.cells[0].fguiHeight;\n        let action = cc.sequence(\n            cc.moveTo(\n                this._startUpResilience.duration,\n                this._startUpResilience.xPosition,\n                this._startUpResilience.yPosition\n            ),\n            cc.moveTo(\n                this._startDownResilience.duration,\n                this._startDownResilience.xPosition,\n                this._startDownResilience.yPosition\n            ),\n            cc.callFunc(() => {\n                this.startResilienced = true;\n                this.stopResilienced = false;\n                this.fguiComponent.setMask(this._mask, false);\n            })\n        );\n        this.holdWin.showMask();\n        this.fguiComponent.node.runAction(action);\n    }\n    reelStopResilience() {\n        this.sortCell();\n        this.cells[0].fguiComponent.visible = true;\n        if (!this.canEndResilience) {\n            this.canEndResilience = true;\n            return;\n        }\n        let action = cc.sequence(\n            cc.moveTo(\n                this._endDownResilience.duration,\n                this._endDownResilience.xPosition,\n                this._endDownResilience.yPosition\n            ),\n            cc.moveTo(this._endUpResilience.duration, this._endUpResilience.xPosition, this._endUpResilience.yPosition),\n            cc.callFunc(() => {\n                if (this._startUpResilience && this._startDownResilience) {\n                    this.startResilienced = false;\n                    this.stopResilienced = true;\n                    // this.cells[0].fguiComponent.visible = false;\n                    this.holdWin.hideMask();\n                } else {\n                    this.holdWin.showMask();\n                }\n            })\n        );\n        this.fguiComponent.node.runAction(action);\n    }\n    private startResilienced: boolean = true;\n    private stopResilienced: boolean = false;\n    private firstMove(): void {\n        this._fixedUuids = [];\n        this._fixedPositions = [];\n        if (this._startUpResilience && this._startDownResilience) {\n            this.reelStartResilience();\n        }\n        //* 设置一个布尔变量，每次spin时只让一个固定棋子触发效果\n        //todo 目前暂时只有埃及这个关卡有这个需求，若要优化需要将转轴基类抽离的更纯粹\n        //todo 只涉及最基本的spin，其余的特殊功能全部通过继承实现\n        let respinFlag: boolean = true;\n        for (let i = 0; i < this._cells.length; i++) {\n            const cell = this._cells[i];\n            cell.startMove();\n            if (!cell.fguiComponent.visible) {\n                cell.fguiComponent.visible = true;\n            }\n            if (this.mustBeFixedCells && this.mustBeFixedCells.length > 0 && i >= this.topExtraCells) {\n                const fixedCell = this.mustBeFixedCells[i - this.topExtraCells];\n                if (this._finalFixeds[i - this.topExtraCells]) {\n                    fixedCell.code = cell.code;\n                    if (respinFlag) {\n                        fixedCell.fixedCellShow();\n                    }\n                    respinFlag = false;\n                    fixedCell.fguiComponent.visible = true;\n                } else {\n                    fixedCell.fixedCellHide();\n                    fixedCell.fguiComponent.visible = false;\n                }\n            }\n        }\n    }\n    public moveY(step: number, code?: number): boolean {\n        if (this._moveEnd) {\n            return false;\n        }\n        if (this.isFirstMove) {\n            this.firstMove();\n            this.isFirstMove = false;\n        }\n        if (!this.startResilienced) {\n            return false;\n        }\n        this.holdWin.showMask();\n        this.sortCell();\n        const theTopCell = this._cells[0];\n        const theBottomCell = this._cells[this._cells.length - 1];\n        if (theBottomCell.isFinal) {\n            if (theBottomCell.fguiY + step >= this.theFinalBottomCellY) {\n                step = this.theFinalBottomCellY - theBottomCell.fguiY;\n                this._moveEnd = true;\n            }\n        }\n        for (let i = 0; i < this._cells.length; i++) {\n            const cell = this._cells[i];\n            cell.fguiY += step;\n        }\n        if (this._moveEnd) {\n            theTopCell.fguiComponent.visible = false;\n            this.status = SymbolBoardStatus.Stopped;\n            if (this._endDownResilience && this._endUpResilience) {\n                this.reelStopResilience();\n            }\n\n            if (this._endDownResilience && this._endUpResilience && this.stopResilienced) {\n                return false;\n            }\n            this.notifyReelStopped(this._index);\n            this.status = SymbolBoardStatus.Stopped;\n            this.isFirstMove = true;\n            this.fguiComponent.setMask(null, false);\n            // this.holdWin.hideMask();\n            this._finalFixeds = this._finalFixeds || [];\n            for (let i = 0; i < this._nextFixeds.length; i++) {\n                if (this._finalFixeds[i] === true) {\n                    continue;\n                }\n                this._finalFixeds[i] = this._nextFixeds[i];\n            }\n            // if (SlotGameStageBase.spinResults.nextGameMode < 1) {\n            //     //todo 暂时用延时处理，完善做法应该是在holdwin基类中的receiveReelStopped的方法来触发\n            //     this.scheduleOnce(() => {\n            //         for (let i = 0; i < this._cells.length; i++) {\n            //             if (this.mustBeFixedCells && this.mustBeFixedCells.length > 0 && i >= this.topExtraCells) {\n            //                 const fixedCell = this.mustBeFixedCells[i - this.topExtraCells];\n            //                 fixedCell.fixedCellHide();\n            //             }\n            //         }\n            //     }, 0.5);\n            // }\n            this._finalFixedsReseted = false;\n            this.afterStopWaitingResults();\n            return false;\n        }\n        let useCode: boolean = false;\n        if (step > 0) {\n            if (theBottomCell.fguiY >= this.fguiHeight) {\n                theBottomCell.fguiY = theTopCell.fguiY - theTopCell.fguiHeight;\n                if (code || code == 0) {\n                    useCode = true;\n                    theBottomCell.code = code;\n                }\n            }\n        }\n        if (step < 0) {\n            if (theTopCell.fguiY <= 0) {\n                theTopCell.fguiY = theBottomCell.fguiY + theBottomCell.fguiHeight;\n                if (code || code == 0) {\n                    useCode = true;\n                    theTopCell.code = code;\n                }\n            }\n        }\n        if (useCode) {\n            this.sortCell();\n        }\n        return useCode;\n    }\n    private sortCell(): void {\n        this._cells = this._cells.sort((c1, c2) => {\n            return c1.fguiY - c2.fguiY;\n        });\n        for (let i = 0; i < this._cells.length; i++) {\n            this._cells[i].index = i;\n        }\n    }\n    protected getCell(cellIndex: number): CellBase {\n        if (cellIndex < 0 || cellIndex >= this._cells.length) {\n            cc.error(`索引${cellIndex}超出范围`);\n            return null;\n        }\n        let cell = this._cells[cellIndex];\n        const position = cellIndex - this.topExtraCells;\n        if (position >= 0 && this._finalFixeds[position]) {\n            const code = cell.code;\n            if (!this.notFixedCodes.find((c) => c == code)) {\n                cell.fguiComponent.visible = false;\n                cell = this.mustBeFixedCells[position];\n                cell.code = code;\n                cell.fguiComponent.visible = true;\n            }\n        }\n        if (position >= 0 && this.reelResults) {\n            cell.finalAssets = this.reelResults.cells[position].assets;\n        }\n        return cell;\n    }\n    protected get notFixedCodes(): number[] {\n        return [];\n    }\n    protected getFinalCell(cellIndex: number): CellBase {\n        return this.getCell(cellIndex);\n    }\n    cellMoveY(cellIndex: number, step: number, code?: number): boolean {\n        const cell = this.getCell(cellIndex);\n        if (!cell) {\n            return false;\n        }\n        return cell.moveY(step, code);\n    }\n    getExtraCellCount(): { top: number; bottom: number } {\n        return { top: 1, bottom: 0 };\n    }\n    public setFinalResultsImmediately(codes: number[], assets: number[]): void {\n        if (!codes || codes.length == 0) {\n            cc.warn(`最终结果为空`);\n            return;\n        }\n        const finalResultsLength = codes.length;\n        for (let i = 0; i < this._cells.length; i++) {\n            if (i >= finalResultsLength) {\n                break;\n            }\n            this._cells[i].code = codes[i];\n            this._cells[i].finalAssets = assets[i];\n            this._cells[i].initAssetShow();\n        }\n    }\n    public setFinalResultImmediately(cellIndex: number, code: number): void {\n        const cell = this.getCell(cellIndex);\n        if (!cell) {\n            return;\n        }\n        cell.code = code;\n    }\n    public onColumnStopped(listener: Function, target?: any): void {\n        this.node.on(SymbolBoardEvent.COLUMN_STOPPED, listener, target);\n    }\n    public onBeforeColumnStopped(index: number): void { }\n\n    public reset(): void {\n        this.unscheduleAllCallbacks();\n        for (let i = 0; i < this._cells.length; i++) {\n            this._cells[i].reset();\n        }\n        if (!this._finalFixedsReseted) {\n            this._finalFixeds = [];\n            for (let i = 0; i < this._nextFixeds.length; i++) {\n                this._finalFixeds.push(this._nextFixeds[i]);\n            }\n            this._finalFixedsReseted = true;\n        }\n        //this._finalCodes = [];\n        this._nextFixeds = [];\n        this._mockCodes = [];\n        this._moveEnd = false;\n        this.isFirstMove = true;\n    }\n    public prizeShow(position: number, cellIndex: number): void {\n        const cell = this.getCell(cellIndex);\n        cell.prizeShow(position);\n    }\n    public receivePrizeShowCompleted(position: number): void {\n        let parentHoldWin = (this.parent as any) as HoldWinBase;\n        if (parentHoldWin) {\n            parentHoldWin.receivePrizeShowCompleted(position);\n            return;\n        }\n        let parent = (this.parent as any) as SymbolBoardBase;\n        if (parent) {\n            parent.receivePrizeShowCompleted(position);\n        }\n    }\n    public receiveMockCodeReplaced(columnIndex: number, cellIndex: number): void {\n        const parentHoldWin = (this.parent as unknown) as HoldWinBase;\n        if (parentHoldWin) {\n            parentHoldWin.receiveMockCodeReplaced(columnIndex, cellIndex);\n            return;\n        }\n        const parent = (this.parent as unknown) as SymbolBoardBase;\n        if (parent) {\n            parent.receiveMockCodesReplaced(columnIndex, cellIndex);\n        }\n    }\n\n    private notifyReelStopped(columnIndex: number): void {\n        const parentHoldWin = (this.parent as unknown) as HoldWinBase;\n        for (let i = 0; i < this.cells.length; i++) {\n            let cell = this.getCell(i);\n            cell.stopShow();\n        }\n        if (parentHoldWin) {\n            parentHoldWin.receiveReelStopped(columnIndex);\n            return;\n        }\n        const parent = (this.parent as unknown) as SymbolBoardBase;\n        if (parent) {\n            parent.receiveReelStopped(columnIndex);\n        }\n    }\n    receiveCellStopped(cellIndex: number): void {\n        let allStopped: boolean = true;\n        this.symbolBoard.receiveCellStopped(this.index, cellIndex);\n        for (let i = 0; i < this._cells.length; i++) {\n            const cell = this.getCell(i);\n            if (!cell.moveEnd) {\n                allStopped = false;\n                break;\n            }\n        }\n        if (!allStopped) {\n            return;\n        }\n        //this._moveEnd = true;\n        this.status = SymbolBoardStatus.Stopped;\n        const parent = (this.parent as unknown) as SymbolBoardBase;\n        if (parent) {\n            parent.receiveReelStopped(this.index);\n        }\n    }\n    public cellHoldWin(cellIndex: number): void {\n        const cell = this.getCell(cellIndex);\n        cell.holdWin();\n    }\n    public unCellHoldWin(cellIndex: number): void {\n        const cell = this.getCell(cellIndex);\n        cell.unholdWin();\n    }\n    //#region 控制器操作\n    public setCellControllerProperty(cellIndex: number, controllerName: string, code: number): void {\n        const cell = this.getCell(cellIndex);\n        cell.setControllerProperty(controllerName, code);\n    }\n    public setSymbolControllerProperty(cellIndex: number, controllerName: string, code: number): void {\n        const cell = this.getCell(cellIndex);\n        cell.setSymbolControllerProperty(controllerName, code);\n    }\n    //#endregion\n    public playSpineByConfig(cellIndex: number, configName: string, callback?: Function): void {\n        const cell = this.getCell(cellIndex);\n        cell.playSpineByConfig(configName, callback);\n    }\n    protected checkAllChildCreated(): void {\n        super.checkAllChildCreated();\n        while (this.cells.find((c) => c.mustBeFixed)) {\n            let index = this.cells.findIndex((c) => c.mustBeFixed);\n            if (index !== -1) {\n                this.cells.splice(index, 1);\n            }\n        }\n    }\n    notifyPrizeCellSettleCompletedOnceCallback() { }\n    prizeChipCellSettle(position: number, symbolCode: number, assets: number, callback: Function): void {\n        let cell = this.getCell(position % this.cells.length);\n        cell.prizeChipCellSettle(position, symbolCode, assets, callback);\n    }\n    notifyShowDoubleAssets(): void {\n        for (let index = 0; index < this.cells.length; index++) {\n            const cell = this.cells[index];\n            cell.notifyShowDoubleAssets();\n        }\n    }\n    doubleChessShow(): void {\n        for (let index = 0; index < this.cells.length; index++) {\n            const cell = this.cells[index];\n            cell.doubleChessShow();\n        }\n    }\n\n    public setAssetsAfterChessboardStopped(): void {\n        this.cells.map((cell) => {\n            cell.setAssetAfterChessboardStopped();\n        });\n    }\n}\n"]}