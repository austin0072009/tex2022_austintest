{"version":3,"sources":["assets\\GameHall\\script\\NativeMethod.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { AppConst } from \"../../Script/modules/@slotsmaster/ui-common/lib/AppConst\";\r\n\r\nexport default class NativeMethod {\r\n    /**显示状态栏 \r\n     *  @param flag true  显示    false  不显示\r\n    */\r\n    // public static showState(flag: boolean) {\r\n    // if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n    //     let method = \"fullscreen\";\r\n    //     let bool = flag;\r\n    //     let methodSignature = \"(Z)V\";\r\n    //     jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/TSJavaBridge\", method, methodSignature, bool);\r\n    // } else if (cc.sys.os == cc.sys.OS_IOS) {\r\n\r\n    // }\r\n    // }\r\n\r\n\r\n    /**切换横竖屏\r\n     * @param flag true  横屏    false  竖屏\r\n     */\r\n    public static changeOrientationH(flag: boolean) {\r\n        if (cc.sys.os == cc.sys.OS_ANDROID && cc.sys.isNative) {\r\n            let method = \"changeOrientationH\";\r\n            let bool = flag;\r\n            let methodSignature = \"(Z)V\";\r\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/TSJavaBridge\", method, methodSignature, bool);\r\n            let w = cc.view.getFrameSize().width;\r\n            let h = cc.view.getFrameSize().height;\r\n            if (flag) {\r\n                if (h > w) {\r\n                    cc.view.setFrameSize(h, w);\r\n                }\r\n                // cc.Canvas.instance.designResolution = cc.size(2340, 1080);\r\n            } else {\r\n                //  if (w > h) {\r\n                cc.view.setFrameSize(h, w);\r\n                // }\r\n                // cc.Canvas.instance.designResolution = cc.size(1080, 2340);\r\n                let size: number;\r\n                w > h ? (size = w) : (size = h);\r\n                if (cc.Canvas.instance.node) {\r\n                    cc.Canvas.instance.node.y = size / 2;\r\n                }\r\n            }\r\n\r\n        } else if (cc.sys.os == cc.sys.OS_IOS && cc.sys.isNative) {\r\n            let dict = {\r\n                isLand: flag ? \"1\" : \"0\"\r\n            }\r\n            jsb.reflection.callStaticMethod(\"TSObjectCBridge\", \"changeOrientationH:\", JSON.stringify(dict));\r\n            let w = cc.view.getFrameSize().width;\r\n            let h = cc.view.getFrameSize().height;\r\n            if (flag) {\r\n                if (h > w) {\r\n                    cc.view.setFrameSize(h, w);\r\n                }\r\n                // cc.Canvas.instance.designResolution = cc.size(2340, 1080);\r\n            } else {\r\n                //  if (w > h) {\r\n                cc.view.setFrameSize(h, w);\r\n                // }\r\n                // cc.Canvas.instance.designResolution = cc.size(1080, 2340);\r\n                let size: number;\r\n                w > h ? (size = w) : (size = h);\r\n                if (cc.Canvas.instance.node) {\r\n                    cc.Canvas.instance.node.y = size / 2;\r\n                }\r\n            }\r\n        } else {\r\n            let w = cc.view.getFrameSize().width;\r\n            let h = cc.view.getFrameSize().height;\r\n            if (flag) {\r\n                cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);\r\n                if (h > w) {\r\n                    cc.view.setFrameSize(h, w);\r\n                }\r\n                // cc.Canvas.instance.designResolution = cc.size(2340, 1080);\r\n            } else {\r\n                cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\r\n                if (w > h) {\r\n                    cc.view.setFrameSize(h, w);\r\n                }\r\n                // cc.Canvas.instance.designResolution = cc.size(1080, 2340);\r\n                if (cc.Canvas.instance.node) {\r\n                    cc.Canvas.instance.node.y = cc.view.getVisibleSize().height / 2;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**複製到剪切板 */\r\n    public static copyTextString(text: string) {\r\n        if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/TSJavaBridge\", \"copyUserId\", \"(Ljava/lang/String;)V\", text);\r\n        } else if (cc.sys.os == cc.sys.OS_IOS) {\r\n            let dict = {\r\n                userID: text\r\n            }\r\n            jsb.reflection.callStaticMethod(\"TSObjectCBridge\", \"copyUserId:\", JSON.stringify(dict));\r\n        }\r\n    }\r\n\r\n    public static setUrlByLanguage(loader: fgui.GLoader) {\r\n        let url = loader[\"_contentItem\"].name;\r\n        url = url.substr(0, url.length - 1);\r\n        switch (AppConst.languageType) {\r\n            case 1: //繁体\r\n                url = \"ui://Lobby/\" + url + \"1\";\r\n                break;\r\n            case 2:  //简体\r\n                url = \"ui://Lobby/\" + url + \"2\";\r\n                break;\r\n            case 3:\r\n                break;\r\n            case 4:\r\n                break;\r\n        }\r\n        loader.url = url;\r\n    }\r\n}"]}