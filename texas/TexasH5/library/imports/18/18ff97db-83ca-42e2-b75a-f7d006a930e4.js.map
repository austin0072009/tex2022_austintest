{"version":3,"sources":["assets\\Script\\modules\\@slotsmaster\\ui-common\\lib\\SlotsMasterGameStageBase.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,4FAAuF;AAKvF,2CAA2C;AAC3C;IAA+D,4CAAiB;IAAhF;;IAiHA,CAAC;IA9GG,sBAAc,4CAAM;aAApB;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aACD,UAAqB,KAAa;YAC9B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAHA;IAKD,wDAAqB,GAArB;QACI,mDAAmD;QACnD,kDAAkD;QAClD,iDAAiD;IACrD,CAAC;IAED,kDAAe,GAAf;QAAA,iBAKC;QAJG,iBAAM,eAAe,WAAE,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC;YACd,KAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAED;;OAEG;IACK,oDAAiB,GAAzB;QACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACK,4CAAS,GAAjB;QACI,oEAAoE;IACxE,CAAC;IAED;;;OAGG;IACK,sDAAmB,GAA3B,UAA4B,IAAS;QACjC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClC;aAAM;YACH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACtC;IACL,CAAC;IAED;;;OAGG;IACK,gDAAa,GAArB,UAAsB,IAAY;QAC9B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;;OAGG;IACK,oDAAiB,GAAzB,UAA0B,QAAgB;QACtC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAES,6CAAU,GAApB;QACI,QAAQ;QACR,IAAI,2BAAiB,CAAC,WAAW,CAAC,cAAc,EAAE;YAC9C,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACtF;QACD,wDAAwD;QACxD,iBAAM,UAAU,WAAE,CAAC;IACvB,CAAC;IAED;;;OAGG;IACO,sDAAmB,GAA7B,UAA8B,OAA2B;QACrD,iBAAM,mBAAmB,YAAC,OAAO,CAAC,CAAC;QACnC,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC1F;IACL,CAAC;IAED;;OAEG;IACK,6CAAU,GAAlB;QACI,EAAE,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAC1C,uBAAuB;IAC3B,CAAC;IAED;;;OAGG;IACK,+CAAY,GAApB,UAAqB,QAAkB;QACnC,uBAAuB;IAE3B,CAAC;IAED;;;OAGG;IACO,+CAAY,GAAtB,UAAuB,SAA4B;QAC/C,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,4CAA4C;QAC5C,kCAAkC;QAClC,MAAM;IACV,CAAC;IACL,+BAAC;AAAD,CAjHA,AAiHC,CAjH8D,2BAAiB,GAiH/E","file":"","sourceRoot":"/","sourcesContent":["\nimport SlotGameStageBase from \"../../../@mogafa/slots/lib/GameStage/SlotGameStageBase\";\nimport { AppConst } from \"./AppConst\";\nimport SpinResultsUpgrade from \"../../../spin-result/SpinResultsUpgrade\";\nimport SpinResultsCard from \"../../../spin-result/SpinResultsCard\";\n\n//import { CardGet } from \"./Card/CardGet\";\nexport default abstract class SlotsMasterGameStageBase extends SlotGameStageBase {\n\n    private _adName: string;\n    protected get adName(): string {\n        return this._adName;\n    }\n    protected set adName(value: string) {\n        this._adName = value;\n    }\n\n    createChildComponents(): void {\n        //this._adPanel = this.addFguiComponent(AdBalloon);\n        //this._cardView = this.addFguiComponent(CardGet);\n        //this.$message = this.addFguiComponent(Message);\n    }\n\n    allChildCreated(): void {\n        super.allChildCreated();\n        this.scheduleOnce(() => {\n            this.showPlane();\n        }, 1);\n    }\n\n    /**\n     * 周期性加载飞机广告\n     */\n    private scheduleShowPlane(): void {\n        this.scheduleOnce(this.showPlane, 5);\n    }\n\n    /**\n     * 显示飞机\n     */\n    private showPlane(): void {\n        //this._adPanel.balloonShow(this.setTopBarPermission.bind(this), 1);\n    }\n\n    /**\n     * 允许设置顶部栏\n     * @param data\n     */\n    private setTopBarPermission(data: any): void {\n        this.scheduleShowPlane();\n        if (data.type === 0) {\n            this.setTopBarCoin(data.award);\n        } else {\n            this.setTopBarIntegral(data.award);\n        }\n    }\n\n    /**\n     * 设置顶部栏金币\n     * @param coin\n     */\n    private setTopBarCoin(coin: number): void {\n        this.topBar.setUserCoins(coin);\n    }\n\n    /**\n     * 设置顶部栏积分\n     * @param integral\n     */\n    private setTopBarIntegral(integral: number): void {\n        this.topBar.setUserIntegral(integral);\n    }\n\n    protected bigWinShow(): void {\n        //* 存在广告\n        if (SlotGameStageBase.spinResults.bigWinAdAwards) {\n            this.win.onAdButtonClick(this.watchAdClick.bind(this, this.adComplete.bind(this)));\n        }\n        // this.adName = AppConst.AD_POSITION.AD_BIG_WIN_DOUBLE;\n        super.bigWinShow();\n    }\n\n    /**\n     * 升级经验条增长完后的回调\n     * @param upgrade\n     */\n    protected updateLevelCallback(upgrade: SpinResultsUpgrade): void {\n        super.updateLevelCallback(upgrade);\n        if (upgrade) {\n            this.levelUp.onAdButtonClick(this.watchAdClick.bind(this, this.adComplete.bind(this)));\n        }\n    }\n\n    /**\n     * 广告看完后的回调\n     */\n    private adComplete(): void {\n        cc.log(\"Ad has been played successfully\");\n        //todo 根据对应的广告Id获取对应的奖励\n    }\n\n    /**\n     * 广告点击事件\n     * @param callback\n     */\n    private watchAdClick(callback: Function): void {\n        //跳转到广告  看完之后回调 然后关闭该界面\n\n    }\n\n    /**\n     *获得卡片的时候调用\n     * @param cardsData 卡片数据\n     */\n    protected cardViewShow(cardsData: SpinResultsCard[]): void {\n        this.pauseSymbolBoard();\n        // this._cardView.setData(cardsData, () => {\n        //     this.continueSymbolBoard();\n        // });\n    }\n}\n"]}