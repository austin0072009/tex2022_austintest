{"version":3,"sources":["assets\\Script\\modules\\@slotsmaster\\ui-common\\lib\\Coin\\BigWinSpread.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport FguiComponentBase from \"../../../../@mogafa/fairygui-component/lib/FguiComponentBase\";\n\n\nexport class BigWinSpread extends FguiComponentBase {\n    protected get packageResourceName(): string {\n        return \"GameCommon\";\n    }\n    protected get packageName(): string {\n        return \"Common\";\n    }\n    protected get componentName(): string {\n        return \"BigWinCoin\";\n    }\n\n    private _coin: cc.Node;\n    private _windowWidth: number;\n    private _windowHeight: number;\n\n    protected createChildComponents() {\n        super.createChildComponents();\n        this._windowWidth = fairygui.GRoot.inst.width;\n        this._windowHeight = fairygui.GRoot.inst.height;\n        this._coin = this.fguiComponent.node;\n        this._coin.anchorX = 0.5;\n        this._coin.anchorY = 0.5;\n        this._coin.x = fairygui.GRoot.inst.width / 2;\n        this._coin.y = -fairygui.GRoot.inst.height / 2;\n        this._coin.scale = Math.random() + 0.4;\n        this._coin.angle = Math.random() * 360;\n        this._radius = this._windowWidth / 4;\n        console.log(\"BigWinCoin  createChildComponents\")\n        this._startPosition = cc.v2(this._coin.x, this._coin.y);\n        this._bezierTime = 2;\n    }\n\n    protected allChildCreated(): void {\n        super.allChildCreated();\n    }\n\n    private _radius: number;\n    private _startPosition: cc.Vec2;\n    private _bezierTime: number;\n    private bezierArr: cc.Vec2[];\n    public coinFlyByCurve(startPos: cc.Vec2, endPos: cc.Vec2, angle: number = 30): void {\n        this._coin.position = cc.v3(startPos.x, startPos.y, 0);\n        this._coin.scale = 0.4;\n        this._coin.angle = 360 * Math.random();\n        let radius: number = ((Math.abs(endPos.y) / Math.cos((Math.PI * 2) / 360)) * angle) / 2;\n        let trangleLen: number = radius * Math.sin((Math.PI * 2) / 360) * angle;\n        let peak1: cc.Vec2 = cc.v2(startPos.x + trangleLen, startPos.y - startPos.y / 2);\n        let trough1: cc.Vec2 = cc.v2(startPos.x - trangleLen * 2, startPos.y - startPos.y / 2);\n        let peak2: cc.Vec2 = cc.v2(endPos.x - trangleLen * 2, endPos.y + startPos.y / 2);\n        let bezierCurve: cc.Vec2[] = [peak1, peak2, endPos];\n        this._coin.runAction(\n            cc\n                .sequence(\n                    cc.bezierTo(0.5, bezierCurve),\n                    cc.callFunc(() => {\n                        if (this._coin.isValid) {\n                            this._coin.destroy();\n                        }\n                    })\n                )\n                .easing(cc.easeInOut(1.2))\n        );\n    }\n\n    public degree30CoinsLeft(): void {\n        let nodeLeftX: number = this._radius;\n        let nodeY: number = this._radius * Math.tan(((Math.PI * 2) / 360) * (60 + Math.random() * 10));\n        let nodeLeftPosition: cc.Vec2 = cc.v2(nodeLeftX, nodeY);\n        let endLeftX: number = 300 * Math.random();\n        let endY: number = -fairygui.GRoot.inst.height;\n        let endPosition: cc.Vec2 = cc.v2(endLeftX, endY);\n        this.bezierArr = [this._startPosition, nodeLeftPosition, endPosition];\n        this.bezier(this._bezierTime, this.bezierArr);\n    }\n    public degree30CoinsRight(): void {\n        let nodeRightX: number = this._windowWidth / 2 + this._radius;\n        let nodeY: number = this._radius * Math.tan(((Math.PI * 2) / 360) * (60 + Math.random() * 10));\n        let nodeRightPosition: cc.Vec2 = cc.v2(nodeRightX, nodeY);\n        let endRightX: number = this._windowWidth + 100 * Math.random();\n        let endY: number = -fairygui.GRoot.inst.height;\n        let endPosition: cc.Vec2 = cc.v2(endRightX, endY);\n        this.bezierArr = [this._startPosition, nodeRightPosition, endPosition];\n        this.bezier(this._bezierTime, this.bezierArr);\n    }\n    public degree50CoinsLeft(): void {\n        let nodeLeftX: number = this._radius;\n        let nodeY: number = this._radius * Math.tan(((Math.PI * 2) / 360) * (50 + Math.random() * 10));\n        let nodeLeftPosition: cc.Vec2 = cc.v2(nodeLeftX, nodeY);\n        let endLeftX: number = 300 * Math.random();\n        let endY: number = -fairygui.GRoot.inst.height;\n        let endPosition: cc.Vec2 = cc.v2(endLeftX, endY);\n        this.bezierArr = [this._startPosition, nodeLeftPosition, endPosition];\n        this.bezier(this._bezierTime, this.bezierArr);\n    }\n    public degree50CoinsRight(): void {\n        let nodeRightX: number = this._windowWidth / 2 + this._radius;\n        let nodeY: number = this._radius * Math.tan(((Math.PI * 2) / 360) * (50 + Math.random() * 10));\n        let nodeRightPosition: cc.Vec2 = cc.v2(nodeRightX, nodeY);\n        let endRightX: number = this._windowWidth + 100 * Math.random();\n        let endY: number = -fairygui.GRoot.inst.height;\n        let endPosition: cc.Vec2 = cc.v2(endRightX, endY);\n        this.bezierArr = [this._startPosition, nodeRightPosition, endPosition];\n        this.bezier(this._bezierTime, this.bezierArr);\n    }\n    public degree70CoinsLeft(): void {\n        let nodeLeftX: number = this._radius;\n        let nodeY: number = this._radius * Math.tan(((Math.PI * 2) / 360) * (60 + Math.random() * 5));\n        let nodeLeftPosition: cc.Vec2 = cc.v2(nodeLeftX, nodeY);\n        let endLeftX: number = this._coin.x - 600 * Math.random();\n        let endY: number = -fairygui.GRoot.inst.height;\n        let endPosition: cc.Vec2 = cc.v2(endLeftX, endY);\n        this.bezierArr = [this._startPosition, nodeLeftPosition, endPosition];\n        this.bezier(this._bezierTime, this.bezierArr);\n    }\n    public degree70CoinsRight(): void {\n        let nodeRightX: number = this._windowWidth / 2 + this._radius;\n        let nodeY: number = this._radius * Math.tan(((Math.PI * 2) / 360) * (60 + Math.random() * 5));\n        let nodeRightPosition: cc.Vec2 = cc.v2(nodeRightX, nodeY);\n        let endRightX: number = this._coin.x + 600 * Math.random();\n        let endY: number = -fairygui.GRoot.inst.height;\n        let endPosition: cc.Vec2 = cc.v2(endRightX, endY);\n        this.bezierArr = [this._startPosition, nodeRightPosition, endPosition];\n        this.bezier(this._bezierTime, this.bezierArr);\n    }\n    public verticalCoinsLeft(): void {\n        let nodeLeftX: number = this._windowWidth / 2 - (80 + Math.random() * 100);\n        let nodeLeftPosition: cc.Vec2 = cc.v2(nodeLeftX, this._windowHeight + (50 + Math.random() * 100));\n        let endLeftX: number = this._windowWidth / 2 - (80 + Math.random() * 100);\n        let endY: number = -fairygui.GRoot.inst.height;\n        this.bezierArr = [this._startPosition, nodeLeftPosition, cc.v2(endLeftX, endY)];\n        this.bezier(this._bezierTime, this.bezierArr);\n    }\n    public verticalCoinsRight(): void {\n        let nodeRightX: number = this._windowWidth / 2 + (80 + Math.random() * 100);\n        let nodeRightPosition: cc.Vec2 = cc.v2(nodeRightX, this._windowHeight + (50 + Math.random() * 100));\n        let endRightX: number = this._windowWidth / 2 + (80 + Math.random() * 100);\n        let endY: number = -fairygui.GRoot.inst.height;\n        this.bezierArr = [this._startPosition, nodeRightPosition, cc.v2(endRightX, endY)];\n        this.bezier(this._bezierTime, this.bezierArr);\n    }\n    private bezier(time: number, bezierArr: cc.Vec2[]) {\n        this.fguiComponent.node.runAction(\n            cc.sequence(\n                cc.bezierTo(time, bezierArr),\n                cc.callFunc(() => {\n                    if (this.fguiComponent.node.isValid) {\n                        this.fguiComponent.node.destroy();\n                    }\n                })\n            )\n        );\n    }\n}\n"]}