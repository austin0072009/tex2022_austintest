{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\utils\\lib\\proto\\OuterMessage.pb.js"],"names":["protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","OuterMessage","C2SS_ActorRPCRequest","p","ks","Object","keys","i","length","prototype","RpcId","ActorId","Long","fromBits","request","create","properties","encode","m","w","hasOwnProperty","call","uint32","string","int32","int64","decode","r","l","c","undefined","len","pos","t","skipType","SS2C_ActorRPCReply","Error","Message","SS2C_ActorMessage","Info","emptyArray","BroadcastInfo","fork","ldelim","push","UnitId","C2SS_ActorMessage","C2M_TestRequest","M2C_TestResponse","response","Actor_TransferRequest","MapIndex","Actor_TransferResponse","C2G_EnterMap","G2C_EnterMap","Units","UnitInfo","X","Y","Z","M2C_CreateUnits","Frame_ClickMap","Id","M2C_PathfindingResult","Xs","Ys","Zs","c2","C2R_Ping","R2C_Ping","G2C_Test","C2M_Reload","Account","Password","M2C_Reload","SS2C_BaseNotify","data","C2G_Heartbeat","G2C_Heartbeat","ServerTime","module","exports"],"mappings":";;;;AAAA;AACA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB,EAGA;;;AACA,IAAIC,OAAO,GAAGF,QAAQ,CAACG,MAAvB;AAAA,IAA+BC,OAAO,GAAGJ,QAAQ,CAACK,MAAlD;AAAA,IAA0DC,KAAK,GAAGN,QAAQ,CAACO,IAA3E,EAEA;;AACA,IAAIC,KAAK,GAAGR,QAAQ,CAACS,KAAT,CAAe,SAAf,MAA8BT,QAAQ,CAACS,KAAT,CAAe,SAAf,IAA4B,EAA1D,CAAZ;;AAEAD,KAAK,CAACE,YAAN,GAAsB,YAAY;AAE9B;AACJ;AACA;AACA;AACA;AACI,MAAIA,YAAY,GAAG,EAAnB;;AAEAA,EAAAA,YAAY,CAACC,oBAAb,GAAqC,YAAY;AAE7C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,oBAAT,CAA8BC,CAA9B,EAAiC;AAC7B,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQL,IAAAA,oBAAoB,CAACO,SAArB,CAA+BC,KAA/B,GAAuC,CAAvC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQR,IAAAA,oBAAoB,CAACO,SAArB,CAA+BE,OAA/B,GAAyCd,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAAzF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQX,IAAAA,oBAAoB,CAACO,SAArB,CAA+BK,OAA/B,GAAyC,EAAzC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQZ,IAAAA,oBAAoB,CAACa,MAArB,GAA8B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACtD,aAAO,IAAId,oBAAJ,CAAyBc,UAAzB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQd,IAAAA,oBAAoB,CAACe,MAArB,GAA8B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAChD,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACJ,OAAF,IAAa,IAAb,IAAqBT,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACJ,OAAtB;AACJ,UAAII,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACP,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAACP,OAAtB;AACJ,aAAOQ,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQjB,IAAAA,oBAAoB,CAACwB,MAArB,GAA8B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAChD,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBC,oBAAvB,EAAjD;;AACA,aAAOyB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACP,OAAF,GAAYgB,CAAC,CAACF,KAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIP,YAAAA,CAAC,CAACJ,OAAF,GAAYa,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAOhB,oBAAP;AACH,GAvHmC,EAApC;;AAyHAD,EAAAA,YAAY,CAACkC,kBAAb,GAAmC,YAAY;AAE3C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,kBAAT,CAA4BhC,CAA5B,EAA+B;AAC3B,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ4B,IAAAA,kBAAkB,CAAC1B,SAAnB,CAA6BC,KAA7B,GAAqC,CAArC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQyB,IAAAA,kBAAkB,CAAC1B,SAAnB,CAA6B2B,KAA7B,GAAqC,CAArC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQD,IAAAA,kBAAkB,CAAC1B,SAAnB,CAA6B4B,OAA7B,GAAuC,EAAvC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQF,IAAAA,kBAAkB,CAACpB,MAAnB,GAA4B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACpD,aAAO,IAAImB,kBAAJ,CAAuBnB,UAAvB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQmB,IAAAA,kBAAkB,CAAClB,MAAnB,GAA4B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC9C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACkB,KAAF,IAAW,IAAX,IAAmB/B,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACkB,KAAtB;AACJ,UAAIlB,CAAC,CAACmB,OAAF,IAAa,IAAb,IAAqBhC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACmB,OAAvB;AACJ,aAAOlB,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQgB,IAAAA,kBAAkB,CAACT,MAAnB,GAA4B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC9C,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBkC,kBAAvB,EAAjD;;AACA,aAAOR,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,KAAF,GAAUT,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACmB,OAAF,GAAYV,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAOiB,kBAAP;AACH,GAvHiC,EAAlC;;AAyHAlC,EAAAA,YAAY,CAACqC,iBAAb,GAAkC,YAAY;AAE1C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,iBAAT,CAA2BnC,CAA3B,EAA8B;AAC1B,WAAKoC,IAAL,GAAY,EAAZ;AACA,UAAIpC,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ+B,IAAAA,iBAAiB,CAAC7B,SAAlB,CAA4BC,KAA5B,GAAoC,CAApC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ4B,IAAAA,iBAAiB,CAAC7B,SAAlB,CAA4BE,OAA5B,GAAsCd,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAAtF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQyB,IAAAA,iBAAiB,CAAC7B,SAAlB,CAA4B8B,IAA5B,GAAmC1C,KAAK,CAAC2C,UAAzC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQF,IAAAA,iBAAiB,CAACvB,MAAlB,GAA2B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACnD,aAAO,IAAIsB,iBAAJ,CAAsBtB,UAAtB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQsB,IAAAA,iBAAiB,CAACrB,MAAlB,GAA2B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC7C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;;AACJ,UAAIG,CAAC,CAACqB,IAAF,IAAU,IAAV,IAAkBrB,CAAC,CAACqB,IAAF,CAAO/B,MAA7B,EAAqC;AACjC,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,CAAC,CAACqB,IAAF,CAAO/B,MAA3B,EAAmC,EAAED,CAArC;AACIR,UAAAA,KAAK,CAACE,YAAN,CAAmBwC,aAAnB,CAAiCxB,MAAjC,CAAwCC,CAAC,CAACqB,IAAF,CAAOhC,CAAP,CAAxC,EAAmDY,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaoB,IAAb,EAAnD,EAAwEC,MAAxE;AADJ;AAEH;;AACD,UAAIzB,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACP,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAACP,OAAtB;AACJ,aAAOQ,CAAP;AACH,KAZD;AAcA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQmB,IAAAA,iBAAiB,CAACZ,MAAlB,GAA2B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC7C,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBqC,iBAAvB,EAAjD;;AACA,aAAOX,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACP,OAAF,GAAYgB,CAAC,CAACF,KAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACI,gBAAI,EAAEP,CAAC,CAACqB,IAAF,IAAUrB,CAAC,CAACqB,IAAF,CAAO/B,MAAnB,CAAJ,EACIU,CAAC,CAACqB,IAAF,GAAS,EAAT;AACJrB,YAAAA,CAAC,CAACqB,IAAF,CAAOK,IAAP,CAAY7C,KAAK,CAACE,YAAN,CAAmBwC,aAAnB,CAAiCf,MAAjC,CAAwCC,CAAxC,EAA2CA,CAAC,CAACL,MAAF,EAA3C,CAAZ;AACA;;AACJ;AACIK,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAdR;AAgBH;;AACD,aAAOf,CAAP;AACH,KAxBD;;AA0BA,WAAOoB,iBAAP;AACH,GA5HgC,EAAjC;;AA8HArC,EAAAA,YAAY,CAACwC,aAAb,GAA8B,YAAY;AAEtC;AACR;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,aAAT,CAAuBtC,CAAvB,EAA0B;AACtB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQkC,IAAAA,aAAa,CAAChC,SAAd,CAAwBoC,MAAxB,GAAiChD,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAAjF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ4B,IAAAA,aAAa,CAAChC,SAAd,CAAwB4B,OAAxB,GAAkC,EAAlC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQI,IAAAA,aAAa,CAAC1B,MAAd,GAAuB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC/C,aAAO,IAAIyB,aAAJ,CAAkBzB,UAAlB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQyB,IAAAA,aAAa,CAACxB,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAAC2B,MAAF,IAAY,IAAZ,IAAoBxC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,QAA9B,CAAxB,EACIC,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYG,KAAZ,CAAkBP,CAAC,CAAC2B,MAApB;AACJ,UAAI3B,CAAC,CAACmB,OAAF,IAAa,IAAb,IAAqBhC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACmB,OAAtB;AACJ,aAAOlB,CAAP;AACH,KARD;AAUA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQsB,IAAAA,aAAa,CAACf,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBwC,aAAvB,EAAjD;;AACA,aAAOd,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,CAAL;AACIf,YAAAA,CAAC,CAAC2B,MAAF,GAAWlB,CAAC,CAACF,KAAF,EAAX;AACA;;AACJ,eAAK,CAAL;AACIP,YAAAA,CAAC,CAACmB,OAAF,GAAYV,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AATR;AAWH;;AACD,aAAOf,CAAP;AACH,KAnBD;;AAqBA,WAAOuB,aAAP;AACH,GAzG4B,EAA7B;;AA2GAxC,EAAAA,YAAY,CAAC6C,iBAAb,GAAkC,YAAY;AAE1C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,iBAAT,CAA2B3C,CAA3B,EAA8B;AAC1B,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQuC,IAAAA,iBAAiB,CAACrC,SAAlB,CAA4BC,KAA5B,GAAoC,CAApC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQoC,IAAAA,iBAAiB,CAACrC,SAAlB,CAA4BE,OAA5B,GAAsCd,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAAtF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQiC,IAAAA,iBAAiB,CAACrC,SAAlB,CAA4B4B,OAA5B,GAAsC,EAAtC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQS,IAAAA,iBAAiB,CAAC/B,MAAlB,GAA2B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACnD,aAAO,IAAI8B,iBAAJ,CAAsB9B,UAAtB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ8B,IAAAA,iBAAiB,CAAC7B,MAAlB,GAA2B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC7C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACP,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAACP,OAAtB;AACJ,UAAIO,CAAC,CAACmB,OAAF,IAAa,IAAb,IAAqBhC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACmB,OAAvB;AACJ,aAAOlB,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ2B,IAAAA,iBAAiB,CAACpB,MAAlB,GAA2B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC7C,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmB6C,iBAAvB,EAAjD;;AACA,aAAOnB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACP,OAAF,GAAYgB,CAAC,CAACF,KAAF,EAAZ;AACA;;AACJ,eAAK,EAAL;AACIP,YAAAA,CAAC,CAACmB,OAAF,GAAYV,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAO4B,iBAAP;AACH,GAvHgC,EAAjC;;AAyHA7C,EAAAA,YAAY,CAAC8C,eAAb,GAAgC,YAAY;AAExC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,eAAT,CAAyB5C,CAAzB,EAA4B;AACxB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQwC,IAAAA,eAAe,CAACtC,SAAhB,CAA0BC,KAA1B,GAAkC,CAAlC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQqC,IAAAA,eAAe,CAACtC,SAAhB,CAA0BE,OAA1B,GAAoCd,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAApF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQkC,IAAAA,eAAe,CAACtC,SAAhB,CAA0BK,OAA1B,GAAoC,EAApC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQiC,IAAAA,eAAe,CAAChC,MAAhB,GAAyB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACjD,aAAO,IAAI+B,eAAJ,CAAoB/B,UAApB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ+B,IAAAA,eAAe,CAAC9B,MAAhB,GAAyB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACJ,OAAF,IAAa,IAAb,IAAqBT,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACJ,OAAtB;AACJ,UAAII,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACP,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAACP,OAAtB;AACJ,aAAOQ,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ4B,IAAAA,eAAe,CAACrB,MAAhB,GAAyB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3C,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmB8C,eAAvB,EAAjD;;AACA,aAAOpB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACP,OAAF,GAAYgB,CAAC,CAACF,KAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIP,YAAAA,CAAC,CAACJ,OAAF,GAAYa,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAO6B,eAAP;AACH,GAvH8B,EAA/B;;AAyHA9C,EAAAA,YAAY,CAAC+C,gBAAb,GAAiC,YAAY;AAEzC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,gBAAT,CAA0B7C,CAA1B,EAA6B;AACzB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQyC,IAAAA,gBAAgB,CAACvC,SAAjB,CAA2BC,KAA3B,GAAmC,CAAnC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQsC,IAAAA,gBAAgB,CAACvC,SAAjB,CAA2B2B,KAA3B,GAAmC,CAAnC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQY,IAAAA,gBAAgB,CAACvC,SAAjB,CAA2B4B,OAA3B,GAAqC,EAArC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQW,IAAAA,gBAAgB,CAACvC,SAAjB,CAA2BwC,QAA3B,GAAsC,EAAtC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQD,IAAAA,gBAAgB,CAACjC,MAAjB,GAA0B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAClD,aAAO,IAAIgC,gBAAJ,CAAqBhC,UAArB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQgC,IAAAA,gBAAgB,CAAC/B,MAAjB,GAA0B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC5C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAAC+B,QAAF,IAAc,IAAd,IAAsB5C,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,UAA9B,CAA1B,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAAC+B,QAAtB;AACJ,UAAI/B,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACkB,KAAF,IAAW,IAAX,IAAmB/B,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACkB,KAAtB;AACJ,UAAIlB,CAAC,CAACmB,OAAF,IAAa,IAAb,IAAqBhC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACmB,OAAvB;AACJ,aAAOlB,CAAP;AACH,KAZD;AAcA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ6B,IAAAA,gBAAgB,CAACtB,MAAjB,GAA0B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC5C,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmB+C,gBAAvB,EAAjD;;AACA,aAAOrB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,KAAF,GAAUT,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACmB,OAAF,GAAYV,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAAC+B,QAAF,GAAatB,CAAC,CAACJ,MAAF,EAAb;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAfR;AAiBH;;AACD,aAAOf,CAAP;AACH,KAzBD;;AA2BA,WAAO8B,gBAAP;AACH,GArI+B,EAAhC;;AAuIA/C,EAAAA,YAAY,CAACiD,qBAAb,GAAsC,YAAY;AAE9C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,qBAAT,CAA+B/C,CAA/B,EAAkC;AAC9B,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ2C,IAAAA,qBAAqB,CAACzC,SAAtB,CAAgCC,KAAhC,GAAwC,CAAxC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQwC,IAAAA,qBAAqB,CAACzC,SAAtB,CAAgCE,OAAhC,GAA0Cd,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAA1F;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQqC,IAAAA,qBAAqB,CAACzC,SAAtB,CAAgC0C,QAAhC,GAA2C,CAA3C;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQD,IAAAA,qBAAqB,CAACnC,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACvD,aAAO,IAAIkC,qBAAJ,CAA0BlC,UAA1B,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQkC,IAAAA,qBAAqB,CAACjC,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjD,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACiC,QAAF,IAAc,IAAd,IAAsB9C,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,UAA9B,CAA1B,EACIC,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYE,KAAZ,CAAkBN,CAAC,CAACiC,QAApB;AACJ,UAAIjC,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACP,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAACP,OAAtB;AACJ,aAAOQ,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ+B,IAAAA,qBAAqB,CAACxB,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjD,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBiD,qBAAvB,EAAjD;;AACA,aAAOvB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACP,OAAF,GAAYgB,CAAC,CAACF,KAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIP,YAAAA,CAAC,CAACiC,QAAF,GAAaxB,CAAC,CAACH,KAAF,EAAb;AACA;;AACJ;AACIG,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAOgC,qBAAP;AACH,GAvHoC,EAArC;;AAyHAjD,EAAAA,YAAY,CAACmD,sBAAb,GAAuC,YAAY;AAE/C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,sBAAT,CAAgCjD,CAAhC,EAAmC;AAC/B,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ6C,IAAAA,sBAAsB,CAAC3C,SAAvB,CAAiCC,KAAjC,GAAyC,CAAzC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ0C,IAAAA,sBAAsB,CAAC3C,SAAvB,CAAiC2B,KAAjC,GAAyC,CAAzC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQgB,IAAAA,sBAAsB,CAAC3C,SAAvB,CAAiC4B,OAAjC,GAA2C,EAA3C;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQe,IAAAA,sBAAsB,CAACrC,MAAvB,GAAgC,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACxD,aAAO,IAAIoC,sBAAJ,CAA2BpC,UAA3B,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQoC,IAAAA,sBAAsB,CAACnC,MAAvB,GAAgC,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAClD,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACkB,KAAF,IAAW,IAAX,IAAmB/B,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACkB,KAAtB;AACJ,UAAIlB,CAAC,CAACmB,OAAF,IAAa,IAAb,IAAqBhC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACmB,OAAvB;AACJ,aAAOlB,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQiC,IAAAA,sBAAsB,CAAC1B,MAAvB,GAAgC,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAClD,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBmD,sBAAvB,EAAjD;;AACA,aAAOzB,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,KAAF,GAAUT,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACmB,OAAF,GAAYV,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAOkC,sBAAP;AACH,GAvHqC,EAAtC;;AAyHAnD,EAAAA,YAAY,CAACoD,YAAb,GAA6B,YAAY;AAErC;AACR;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,YAAT,CAAsBlD,CAAtB,EAAyB;AACrB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ8C,IAAAA,YAAY,CAAC5C,SAAb,CAAuBC,KAAvB,GAA+B,CAA/B;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ2C,IAAAA,YAAY,CAACtC,MAAb,GAAsB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC9C,aAAO,IAAIqC,YAAJ,CAAiBrC,UAAjB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQqC,IAAAA,YAAY,CAACpC,MAAb,GAAsB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACxC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,aAAOS,CAAP;AACH,KAND;AAQA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQkC,IAAAA,YAAY,CAAC3B,MAAb,GAAsB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACxC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBoD,YAAvB,EAAjD;;AACA,aAAO1B,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ;AACIG,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AANR;AAQH;;AACD,aAAOf,CAAP;AACH,KAhBD;;AAkBA,WAAOmC,YAAP;AACH,GA3F2B,EAA5B;;AA6FApD,EAAAA,YAAY,CAACqD,YAAb,GAA6B,YAAY;AAErC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,YAAT,CAAsBnD,CAAtB,EAAyB;AACrB,WAAKoD,KAAL,GAAa,EAAb;AACA,UAAIpD,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ+C,IAAAA,YAAY,CAAC7C,SAAb,CAAuBC,KAAvB,GAA+B,CAA/B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ4C,IAAAA,YAAY,CAAC7C,SAAb,CAAuB2B,KAAvB,GAA+B,CAA/B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQkB,IAAAA,YAAY,CAAC7C,SAAb,CAAuB4B,OAAvB,GAAiC,EAAjC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQiB,IAAAA,YAAY,CAAC7C,SAAb,CAAuBoC,MAAvB,GAAgChD,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAAhF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQyC,IAAAA,YAAY,CAAC7C,SAAb,CAAuB8C,KAAvB,GAA+B1D,KAAK,CAAC2C,UAArC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQc,IAAAA,YAAY,CAACvC,MAAb,GAAsB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC9C,aAAO,IAAIsC,YAAJ,CAAiBtC,UAAjB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQsC,IAAAA,YAAY,CAACrC,MAAb,GAAsB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACxC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAAC2B,MAAF,IAAY,IAAZ,IAAoBxC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,QAA9B,CAAxB,EACIC,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYG,KAAZ,CAAkBP,CAAC,CAAC2B,MAApB;;AACJ,UAAI3B,CAAC,CAACqC,KAAF,IAAW,IAAX,IAAmBrC,CAAC,CAACqC,KAAF,CAAQ/C,MAA/B,EAAuC;AACnC,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,CAAC,CAACqC,KAAF,CAAQ/C,MAA5B,EAAoC,EAAED,CAAtC;AACIR,UAAAA,KAAK,CAACE,YAAN,CAAmBuD,QAAnB,CAA4BvC,MAA5B,CAAmCC,CAAC,CAACqC,KAAF,CAAQhD,CAAR,CAAnC,EAA+CY,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaoB,IAAb,EAA/C,EAAoEC,MAApE;AADJ;AAEH;;AACD,UAAIzB,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACkB,KAAF,IAAW,IAAX,IAAmB/B,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACkB,KAAtB;AACJ,UAAIlB,CAAC,CAACmB,OAAF,IAAa,IAAb,IAAqBhC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACmB,OAAvB;AACJ,aAAOlB,CAAP;AACH,KAhBD;AAkBA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQmC,IAAAA,YAAY,CAAC5B,MAAb,GAAsB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACxC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBqD,YAAvB,EAAjD;;AACA,aAAO3B,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,KAAF,GAAUT,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACmB,OAAF,GAAYV,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAAC2B,MAAF,GAAWlB,CAAC,CAACF,KAAF,EAAX;AACA;;AACJ,eAAK,CAAL;AACI,gBAAI,EAAEP,CAAC,CAACqC,KAAF,IAAWrC,CAAC,CAACqC,KAAF,CAAQ/C,MAArB,CAAJ,EACIU,CAAC,CAACqC,KAAF,GAAU,EAAV;AACJrC,YAAAA,CAAC,CAACqC,KAAF,CAAQX,IAAR,CAAa7C,KAAK,CAACE,YAAN,CAAmBuD,QAAnB,CAA4B9B,MAA5B,CAAmCC,CAAnC,EAAsCA,CAAC,CAACL,MAAF,EAAtC,CAAb;AACA;;AACJ;AACIK,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AApBR;AAsBH;;AACD,aAAOf,CAAP;AACH,KA9BD;;AAgCA,WAAOoC,YAAP;AACH,GAxJ2B,EAA5B;;AA0JArD,EAAAA,YAAY,CAACuD,QAAb,GAAyB,YAAY;AAEjC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,QAAT,CAAkBrD,CAAlB,EAAqB;AACjB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQiD,IAAAA,QAAQ,CAAC/C,SAAT,CAAmBoC,MAAnB,GAA4BhD,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAA5E;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ2C,IAAAA,QAAQ,CAAC/C,SAAT,CAAmBgD,CAAnB,GAAuB,CAAvB;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQD,IAAAA,QAAQ,CAAC/C,SAAT,CAAmBiD,CAAnB,GAAuB,CAAvB;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQF,IAAAA,QAAQ,CAAC/C,SAAT,CAAmBkD,CAAnB,GAAuB,CAAvB;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQH,IAAAA,QAAQ,CAACzC,MAAT,GAAkB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1C,aAAO,IAAIwC,QAAJ,CAAaxC,UAAb,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQwC,IAAAA,QAAQ,CAACvC,MAAT,GAAkB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACpC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAAC2B,MAAF,IAAY,IAAZ,IAAoBxC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,QAA9B,CAAxB,EACIC,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYG,KAAZ,CAAkBP,CAAC,CAAC2B,MAApB;AACJ,UAAI3B,CAAC,CAACuC,CAAF,IAAO,IAAP,IAAepD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,GAA9B,CAAnB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,WAAmBJ,CAAC,CAACuC,CAArB;AACJ,UAAIvC,CAAC,CAACwC,CAAF,IAAO,IAAP,IAAerD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,GAA9B,CAAnB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,WAAmBJ,CAAC,CAACwC,CAArB;AACJ,UAAIxC,CAAC,CAACyC,CAAF,IAAO,IAAP,IAAetD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,GAA9B,CAAnB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,WAAmBJ,CAAC,CAACyC,CAArB;AACJ,aAAOxC,CAAP;AACH,KAZD;AAcA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQqC,IAAAA,QAAQ,CAAC9B,MAAT,GAAkB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACpC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBuD,QAAvB,EAAjD;;AACA,aAAO7B,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,CAAL;AACIf,YAAAA,CAAC,CAAC2B,MAAF,GAAWlB,CAAC,CAACF,KAAF,EAAX;AACA;;AACJ,eAAK,CAAL;AACIP,YAAAA,CAAC,CAACuC,CAAF,GAAM9B,CAAC,SAAD,EAAN;AACA;;AACJ,eAAK,CAAL;AACIT,YAAAA,CAAC,CAACwC,CAAF,GAAM/B,CAAC,SAAD,EAAN;AACA;;AACJ,eAAK,CAAL;AACIT,YAAAA,CAAC,CAACyC,CAAF,GAAMhC,CAAC,SAAD,EAAN;AACA;;AACJ;AACIA,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAfR;AAiBH;;AACD,aAAOf,CAAP;AACH,KAzBD;;AA2BA,WAAOsC,QAAP;AACH,GArIuB,EAAxB;;AAuIAvD,EAAAA,YAAY,CAAC2D,eAAb,GAAgC,YAAY;AAExC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,eAAT,CAAyBzD,CAAzB,EAA4B;AACxB,WAAKoD,KAAL,GAAa,EAAb;AACA,UAAIpD,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQqD,IAAAA,eAAe,CAACnD,SAAhB,CAA0BC,KAA1B,GAAkC,CAAlC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQkD,IAAAA,eAAe,CAACnD,SAAhB,CAA0BE,OAA1B,GAAoCd,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAApF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ+C,IAAAA,eAAe,CAACnD,SAAhB,CAA0B8C,KAA1B,GAAkC1D,KAAK,CAAC2C,UAAxC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQoB,IAAAA,eAAe,CAAC7C,MAAhB,GAAyB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACjD,aAAO,IAAI4C,eAAJ,CAAoB5C,UAApB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ4C,IAAAA,eAAe,CAAC3C,MAAhB,GAAyB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;;AACJ,UAAIG,CAAC,CAACqC,KAAF,IAAW,IAAX,IAAmBrC,CAAC,CAACqC,KAAF,CAAQ/C,MAA/B,EAAuC;AACnC,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,CAAC,CAACqC,KAAF,CAAQ/C,MAA5B,EAAoC,EAAED,CAAtC;AACIR,UAAAA,KAAK,CAACE,YAAN,CAAmBuD,QAAnB,CAA4BvC,MAA5B,CAAmCC,CAAC,CAACqC,KAAF,CAAQhD,CAAR,CAAnC,EAA+CY,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaoB,IAAb,EAA/C,EAAoEC,MAApE;AADJ;AAEH;;AACD,UAAIzB,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACP,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAACP,OAAtB;AACJ,aAAOQ,CAAP;AACH,KAZD;AAcA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQyC,IAAAA,eAAe,CAAClC,MAAhB,GAAyB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3C,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmB2D,eAAvB,EAAjD;;AACA,aAAOjC,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACP,OAAF,GAAYgB,CAAC,CAACF,KAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACI,gBAAI,EAAEP,CAAC,CAACqC,KAAF,IAAWrC,CAAC,CAACqC,KAAF,CAAQ/C,MAArB,CAAJ,EACIU,CAAC,CAACqC,KAAF,GAAU,EAAV;AACJrC,YAAAA,CAAC,CAACqC,KAAF,CAAQX,IAAR,CAAa7C,KAAK,CAACE,YAAN,CAAmBuD,QAAnB,CAA4B9B,MAA5B,CAAmCC,CAAnC,EAAsCA,CAAC,CAACL,MAAF,EAAtC,CAAb;AACA;;AACJ;AACIK,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAdR;AAgBH;;AACD,aAAOf,CAAP;AACH,KAxBD;;AA0BA,WAAO0C,eAAP;AACH,GA5H8B,EAA/B;;AA8HA3D,EAAAA,YAAY,CAAC4D,cAAb,GAA+B,YAAY;AAEvC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,cAAT,CAAwB1D,CAAxB,EAA2B;AACvB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQsD,IAAAA,cAAc,CAACpD,SAAf,CAAyBC,KAAzB,GAAiC,CAAjC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQmD,IAAAA,cAAc,CAACpD,SAAf,CAAyBE,OAAzB,GAAmCd,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAAnF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQgD,IAAAA,cAAc,CAACpD,SAAf,CAAyBqD,EAAzB,GAA8BjE,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAA9E;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQgD,IAAAA,cAAc,CAACpD,SAAf,CAAyBgD,CAAzB,GAA6B,CAA7B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQI,IAAAA,cAAc,CAACpD,SAAf,CAAyBiD,CAAzB,GAA6B,CAA7B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQG,IAAAA,cAAc,CAACpD,SAAf,CAAyBkD,CAAzB,GAA6B,CAA7B;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQE,IAAAA,cAAc,CAAC9C,MAAf,GAAwB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAChD,aAAO,IAAI6C,cAAJ,CAAmB7C,UAAnB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ6C,IAAAA,cAAc,CAAC5C,MAAf,GAAwB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC1C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACuC,CAAF,IAAO,IAAP,IAAepD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,GAA9B,CAAnB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,WAAmBJ,CAAC,CAACuC,CAArB;AACJ,UAAIvC,CAAC,CAACwC,CAAF,IAAO,IAAP,IAAerD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,GAA9B,CAAnB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,WAAmBJ,CAAC,CAACwC,CAArB;AACJ,UAAIxC,CAAC,CAACyC,CAAF,IAAO,IAAP,IAAetD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,GAA9B,CAAnB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,WAAmBJ,CAAC,CAACyC,CAArB;AACJ,UAAIzC,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACP,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAACP,OAAtB;AACJ,UAAIO,CAAC,CAAC4C,EAAF,IAAQ,IAAR,IAAgBzD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,IAA9B,CAApB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAAC4C,EAAtB;AACJ,aAAO3C,CAAP;AACH,KAhBD;AAkBA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ0C,IAAAA,cAAc,CAACnC,MAAf,GAAwB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC1C,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmB4D,cAAvB,EAAjD;;AACA,aAAOlC,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACP,OAAF,GAAYgB,CAAC,CAACF,KAAF,EAAZ;AACA;;AACJ,eAAK,EAAL;AACIP,YAAAA,CAAC,CAAC4C,EAAF,GAAOnC,CAAC,CAACF,KAAF,EAAP;AACA;;AACJ,eAAK,CAAL;AACIP,YAAAA,CAAC,CAACuC,CAAF,GAAM9B,CAAC,SAAD,EAAN;AACA;;AACJ,eAAK,CAAL;AACIT,YAAAA,CAAC,CAACwC,CAAF,GAAM/B,CAAC,SAAD,EAAN;AACA;;AACJ,eAAK,CAAL;AACIT,YAAAA,CAAC,CAACyC,CAAF,GAAMhC,CAAC,SAAD,EAAN;AACA;;AACJ;AACIA,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AArBR;AAuBH;;AACD,aAAOf,CAAP;AACH,KA/BD;;AAiCA,WAAO2C,cAAP;AACH,GAjK6B,EAA9B;;AAmKA5D,EAAAA,YAAY,CAAC8D,qBAAb,GAAsC,YAAY;AAE9C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,qBAAT,CAA+B5D,CAA/B,EAAkC;AAC9B,WAAK6D,EAAL,GAAU,EAAV;AACA,WAAKC,EAAL,GAAU,EAAV;AACA,WAAKC,EAAL,GAAU,EAAV;AACA,UAAI/D,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQwD,IAAAA,qBAAqB,CAACtD,SAAtB,CAAgCE,OAAhC,GAA0Cd,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAA1F;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQkD,IAAAA,qBAAqB,CAACtD,SAAtB,CAAgCqD,EAAhC,GAAqCjE,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAArF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQkD,IAAAA,qBAAqB,CAACtD,SAAtB,CAAgCgD,CAAhC,GAAoC,CAApC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQM,IAAAA,qBAAqB,CAACtD,SAAtB,CAAgCiD,CAAhC,GAAoC,CAApC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQK,IAAAA,qBAAqB,CAACtD,SAAtB,CAAgCkD,CAAhC,GAAoC,CAApC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQI,IAAAA,qBAAqB,CAACtD,SAAtB,CAAgCuD,EAAhC,GAAqCnE,KAAK,CAAC2C,UAA3C;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQuB,IAAAA,qBAAqB,CAACtD,SAAtB,CAAgCwD,EAAhC,GAAqCpE,KAAK,CAAC2C,UAA3C;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQuB,IAAAA,qBAAqB,CAACtD,SAAtB,CAAgCyD,EAAhC,GAAqCrE,KAAK,CAAC2C,UAA3C;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQuB,IAAAA,qBAAqB,CAAChD,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACvD,aAAO,IAAI+C,qBAAJ,CAA0B/C,UAA1B,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ+C,IAAAA,qBAAqB,CAAC9C,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjD,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAAC4C,EAAF,IAAQ,IAAR,IAAgBzD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,IAA9B,CAApB,EACIC,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYG,KAAZ,CAAkBP,CAAC,CAAC4C,EAApB;AACJ,UAAI5C,CAAC,CAACuC,CAAF,IAAO,IAAP,IAAepD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,GAA9B,CAAnB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,WAAmBJ,CAAC,CAACuC,CAArB;AACJ,UAAIvC,CAAC,CAACwC,CAAF,IAAO,IAAP,IAAerD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,GAA9B,CAAnB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,WAAmBJ,CAAC,CAACwC,CAArB;AACJ,UAAIxC,CAAC,CAACyC,CAAF,IAAO,IAAP,IAAetD,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,GAA9B,CAAnB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,WAAmBJ,CAAC,CAACyC,CAArB;;AACJ,UAAIzC,CAAC,CAAC8C,EAAF,IAAQ,IAAR,IAAgB9C,CAAC,CAAC8C,EAAF,CAAKxD,MAAzB,EAAiC;AAC7BW,QAAAA,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaoB,IAAb;;AACA,aAAK,IAAInC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,CAAC,CAAC8C,EAAF,CAAKxD,MAAzB,EAAiC,EAAED,CAAnC;AACIY,UAAAA,CAAC,SAAD,CAAQD,CAAC,CAAC8C,EAAF,CAAKzD,CAAL,CAAR;AADJ;;AAEAY,QAAAA,CAAC,CAACwB,MAAF;AACH;;AACD,UAAIzB,CAAC,CAAC+C,EAAF,IAAQ,IAAR,IAAgB/C,CAAC,CAAC+C,EAAF,CAAKzD,MAAzB,EAAiC;AAC7BW,QAAAA,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaoB,IAAb;;AACA,aAAK,IAAInC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,CAAC,CAAC+C,EAAF,CAAKzD,MAAzB,EAAiC,EAAED,CAAnC;AACIY,UAAAA,CAAC,SAAD,CAAQD,CAAC,CAAC+C,EAAF,CAAK1D,CAAL,CAAR;AADJ;;AAEAY,QAAAA,CAAC,CAACwB,MAAF;AACH;;AACD,UAAIzB,CAAC,CAACgD,EAAF,IAAQ,IAAR,IAAgBhD,CAAC,CAACgD,EAAF,CAAK1D,MAAzB,EAAiC;AAC7BW,QAAAA,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaoB,IAAb;;AACA,aAAK,IAAInC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,CAAC,CAACgD,EAAF,CAAK1D,MAAzB,EAAiC,EAAED,CAAnC;AACIY,UAAAA,CAAC,SAAD,CAAQD,CAAC,CAACgD,EAAF,CAAK3D,CAAL,CAAR;AADJ;;AAEAY,QAAAA,CAAC,CAACwB,MAAF;AACH;;AACD,UAAIzB,CAAC,CAACP,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAACP,OAAtB;AACJ,aAAOQ,CAAP;AACH,KAhCD;AAkCA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ4C,IAAAA,qBAAqB,CAACrC,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjD,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmB8D,qBAAvB,EAAjD;;AACA,aAAOpC,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACP,OAAF,GAAYgB,CAAC,CAACF,KAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIP,YAAAA,CAAC,CAAC4C,EAAF,GAAOnC,CAAC,CAACF,KAAF,EAAP;AACA;;AACJ,eAAK,CAAL;AACIP,YAAAA,CAAC,CAACuC,CAAF,GAAM9B,CAAC,SAAD,EAAN;AACA;;AACJ,eAAK,CAAL;AACIT,YAAAA,CAAC,CAACwC,CAAF,GAAM/B,CAAC,SAAD,EAAN;AACA;;AACJ,eAAK,CAAL;AACIT,YAAAA,CAAC,CAACyC,CAAF,GAAMhC,CAAC,SAAD,EAAN;AACA;;AACJ,eAAK,CAAL;AACI,gBAAI,EAAET,CAAC,CAAC8C,EAAF,IAAQ9C,CAAC,CAAC8C,EAAF,CAAKxD,MAAf,CAAJ,EACIU,CAAC,CAAC8C,EAAF,GAAO,EAAP;;AACJ,gBAAI,CAAC/B,CAAC,GAAG,CAAL,MAAY,CAAhB,EAAmB;AACf,kBAAIkC,EAAE,GAAGxC,CAAC,CAACL,MAAF,KAAaK,CAAC,CAACK,GAAxB;;AACA,qBAAOL,CAAC,CAACK,GAAF,GAAQmC,EAAf;AACIjD,gBAAAA,CAAC,CAAC8C,EAAF,CAAKpB,IAAL,CAAUjB,CAAC,SAAD,EAAV;AADJ;AAEH,aAJD,MAKIT,CAAC,CAAC8C,EAAF,CAAKpB,IAAL,CAAUjB,CAAC,SAAD,EAAV;;AACJ;;AACJ,eAAK,CAAL;AACI,gBAAI,EAAET,CAAC,CAAC+C,EAAF,IAAQ/C,CAAC,CAAC+C,EAAF,CAAKzD,MAAf,CAAJ,EACIU,CAAC,CAAC+C,EAAF,GAAO,EAAP;;AACJ,gBAAI,CAAChC,CAAC,GAAG,CAAL,MAAY,CAAhB,EAAmB;AACf,kBAAIkC,EAAE,GAAGxC,CAAC,CAACL,MAAF,KAAaK,CAAC,CAACK,GAAxB;;AACA,qBAAOL,CAAC,CAACK,GAAF,GAAQmC,EAAf;AACIjD,gBAAAA,CAAC,CAAC+C,EAAF,CAAKrB,IAAL,CAAUjB,CAAC,SAAD,EAAV;AADJ;AAEH,aAJD,MAKIT,CAAC,CAAC+C,EAAF,CAAKrB,IAAL,CAAUjB,CAAC,SAAD,EAAV;;AACJ;;AACJ,eAAK,CAAL;AACI,gBAAI,EAAET,CAAC,CAACgD,EAAF,IAAQhD,CAAC,CAACgD,EAAF,CAAK1D,MAAf,CAAJ,EACIU,CAAC,CAACgD,EAAF,GAAO,EAAP;;AACJ,gBAAI,CAACjC,CAAC,GAAG,CAAL,MAAY,CAAhB,EAAmB;AACf,kBAAIkC,EAAE,GAAGxC,CAAC,CAACL,MAAF,KAAaK,CAAC,CAACK,GAAxB;;AACA,qBAAOL,CAAC,CAACK,GAAF,GAAQmC,EAAf;AACIjD,gBAAAA,CAAC,CAACgD,EAAF,CAAKtB,IAAL,CAAUjB,CAAC,SAAD,EAAV;AADJ;AAEH,aAJD,MAKIT,CAAC,CAACgD,EAAF,CAAKtB,IAAL,CAAUjB,CAAC,SAAD,EAAV;;AACJ;;AACJ;AACIA,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAhDR;AAkDH;;AACD,aAAOf,CAAP;AACH,KA1DD;;AA4DA,WAAO6C,qBAAP;AACH,GAjOoC,EAArC;;AAmOA9D,EAAAA,YAAY,CAACmE,QAAb,GAAyB,YAAY;AAEjC;AACR;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,QAAT,CAAkBjE,CAAlB,EAAqB;AACjB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ6D,IAAAA,QAAQ,CAAC3D,SAAT,CAAmBC,KAAnB,GAA2B,CAA3B;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ0D,IAAAA,QAAQ,CAACrD,MAAT,GAAkB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1C,aAAO,IAAIoD,QAAJ,CAAapD,UAAb,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQoD,IAAAA,QAAQ,CAACnD,MAAT,GAAkB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACpC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,aAAOS,CAAP;AACH,KAND;AAQA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQiD,IAAAA,QAAQ,CAAC1C,MAAT,GAAkB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACpC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBmE,QAAvB,EAAjD;;AACA,aAAOzC,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ;AACIG,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AANR;AAQH;;AACD,aAAOf,CAAP;AACH,KAhBD;;AAkBA,WAAOkD,QAAP;AACH,GA3FuB,EAAxB;;AA6FAnE,EAAAA,YAAY,CAACoE,QAAb,GAAyB,YAAY;AAEjC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,QAAT,CAAkBlE,CAAlB,EAAqB;AACjB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ8D,IAAAA,QAAQ,CAAC5D,SAAT,CAAmBC,KAAnB,GAA2B,CAA3B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ2D,IAAAA,QAAQ,CAAC5D,SAAT,CAAmB2B,KAAnB,GAA2B,CAA3B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQiC,IAAAA,QAAQ,CAAC5D,SAAT,CAAmB4B,OAAnB,GAA6B,EAA7B;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQgC,IAAAA,QAAQ,CAACtD,MAAT,GAAkB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1C,aAAO,IAAIqD,QAAJ,CAAarD,UAAb,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQqD,IAAAA,QAAQ,CAACpD,MAAT,GAAkB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACpC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACkB,KAAF,IAAW,IAAX,IAAmB/B,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACkB,KAAtB;AACJ,UAAIlB,CAAC,CAACmB,OAAF,IAAa,IAAb,IAAqBhC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACmB,OAAvB;AACJ,aAAOlB,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQkD,IAAAA,QAAQ,CAAC3C,MAAT,GAAkB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACpC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBoE,QAAvB,EAAjD;;AACA,aAAO1C,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,KAAF,GAAUT,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACmB,OAAF,GAAYV,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAOmD,QAAP;AACH,GAvHuB,EAAxB;;AAyHApE,EAAAA,YAAY,CAACqE,QAAb,GAAyB,YAAY;AAEjC;AACR;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,QAAT,CAAkBnE,CAAlB,EAAqB;AACjB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ+D,IAAAA,QAAQ,CAACvD,MAAT,GAAkB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1C,aAAO,IAAIsD,QAAJ,CAAatD,UAAb,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQsD,IAAAA,QAAQ,CAACrD,MAAT,GAAkB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACpC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,aAAOI,CAAP;AACH,KAJD;AAMA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQmD,IAAAA,QAAQ,CAAC5C,MAAT,GAAkB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACpC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBqE,QAAvB,EAAjD;;AACA,aAAO3C,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI;AACIN,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAHR;AAKH;;AACD,aAAOf,CAAP;AACH,KAbD;;AAeA,WAAOoD,QAAP;AACH,GA7EuB,EAAxB;;AA+EArE,EAAAA,YAAY,CAACsE,UAAb,GAA2B,YAAY;AAEnC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,UAAT,CAAoBpE,CAApB,EAAuB;AACnB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQgE,IAAAA,UAAU,CAAC9D,SAAX,CAAqBC,KAArB,GAA6B,CAA7B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ6D,IAAAA,UAAU,CAAC9D,SAAX,CAAqB+D,OAArB,GAA+B,EAA/B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQD,IAAAA,UAAU,CAAC9D,SAAX,CAAqBgE,QAArB,GAAgC,EAAhC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQF,IAAAA,UAAU,CAACxD,MAAX,GAAoB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC5C,aAAO,IAAIuD,UAAJ,CAAevD,UAAf,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQuD,IAAAA,UAAU,CAACtD,MAAX,GAAoB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACtC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACsD,OAAF,IAAa,IAAb,IAAqBnE,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACsD,OAAtB;AACJ,UAAItD,CAAC,CAACuD,QAAF,IAAc,IAAd,IAAsBpE,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,UAA9B,CAA1B,EACIC,CAAC,CAACG,MAAF,CAAS,EAAT,EAAaC,MAAb,CAAoBL,CAAC,CAACuD,QAAtB;AACJ,UAAIvD,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,aAAOS,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQoD,IAAAA,UAAU,CAAC7C,MAAX,GAAoB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACtC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmBsE,UAAvB,EAAjD;;AACA,aAAO5C,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,CAAL;AACIN,YAAAA,CAAC,CAACsD,OAAF,GAAY7C,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,CAAC,CAACuD,QAAF,GAAa9C,CAAC,CAACJ,MAAF,EAAb;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAOqD,UAAP;AACH,GAvHyB,EAA1B;;AAyHAtE,EAAAA,YAAY,CAACyE,UAAb,GAA2B,YAAY;AAEnC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,UAAT,CAAoBvE,CAApB,EAAuB;AACnB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQmE,IAAAA,UAAU,CAACjE,SAAX,CAAqBC,KAArB,GAA6B,CAA7B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQgE,IAAAA,UAAU,CAACjE,SAAX,CAAqB2B,KAArB,GAA6B,CAA7B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQsC,IAAAA,UAAU,CAACjE,SAAX,CAAqB4B,OAArB,GAA+B,EAA/B;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQqC,IAAAA,UAAU,CAAC3D,MAAX,GAAoB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC5C,aAAO,IAAI0D,UAAJ,CAAe1D,UAAf,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ0D,IAAAA,UAAU,CAACzD,MAAX,GAAoB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACtC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACkB,KAAF,IAAW,IAAX,IAAmB/B,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACkB,KAAtB;AACJ,UAAIlB,CAAC,CAACmB,OAAF,IAAa,IAAb,IAAqBhC,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAACmB,OAAvB;AACJ,aAAOlB,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQuD,IAAAA,UAAU,CAAChD,MAAX,GAAoB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACtC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmByE,UAAvB,EAAjD;;AACA,aAAO/C,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACkB,KAAF,GAAUT,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACmB,OAAF,GAAYV,CAAC,CAACJ,MAAF,EAAZ;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAOwD,UAAP;AACH,GAvHyB,EAA1B;;AAyHAzE,EAAAA,YAAY,CAAC0E,eAAb,GAAgC,YAAY;AAExC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,eAAT,CAAyBxE,CAAzB,EAA4B;AACxB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQoE,IAAAA,eAAe,CAAClE,SAAhB,CAA0BC,KAA1B,GAAkC,CAAlC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQiE,IAAAA,eAAe,CAAClE,SAAhB,CAA0BE,OAA1B,GAAoCd,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACe,IAAN,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAAb,GAAgD,CAApF;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ8D,IAAAA,eAAe,CAAClE,SAAhB,CAA0BmE,IAA1B,GAAiC,EAAjC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQD,IAAAA,eAAe,CAAC5D,MAAhB,GAAyB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AACjD,aAAO,IAAI2D,eAAJ,CAAoB3D,UAApB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ2D,IAAAA,eAAe,CAAC1D,MAAhB,GAAyB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3C,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAACP,OAAF,IAAa,IAAb,IAAqBN,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,SAA9B,CAAzB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcG,KAAd,CAAoBP,CAAC,CAACP,OAAtB;AACJ,UAAIO,CAAC,CAAC0D,IAAF,IAAU,IAAV,IAAkBvE,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,MAA9B,CAAtB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcC,MAAd,CAAqBL,CAAC,CAAC0D,IAAvB;AACJ,aAAOzD,CAAP;AACH,KAVD;AAYA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQwD,IAAAA,eAAe,CAACjD,MAAhB,GAAyB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3C,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmB0E,eAAvB,EAAjD;;AACA,aAAOhD,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAACP,OAAF,GAAYgB,CAAC,CAACF,KAAF,EAAZ;AACA;;AACJ,eAAK,EAAL;AACIP,YAAAA,CAAC,CAAC0D,IAAF,GAASjD,CAAC,CAACJ,MAAF,EAAT;AACA;;AACJ;AACII,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AAZR;AAcH;;AACD,aAAOf,CAAP;AACH,KAtBD;;AAwBA,WAAOyD,eAAP;AACH,GAvH8B,EAA/B;;AAyHA1E,EAAAA,YAAY,CAAC4E,aAAb,GAA8B,YAAY;AAEtC;AACR;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,aAAT,CAAuB1E,CAAvB,EAA0B;AACtB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQsE,IAAAA,aAAa,CAACpE,SAAd,CAAwBC,KAAxB,GAAgC,CAAhC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQmE,IAAAA,aAAa,CAAC9D,MAAd,GAAuB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC/C,aAAO,IAAI6D,aAAJ,CAAkB7D,UAAlB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ6D,IAAAA,aAAa,CAAC5D,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,aAAOS,CAAP;AACH,KAND;AAQA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ0D,IAAAA,aAAa,CAACnD,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmB4E,aAAvB,EAAjD;;AACA,aAAOlD,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ;AACIG,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AANR;AAQH;;AACD,aAAOf,CAAP;AACH,KAhBD;;AAkBA,WAAO2D,aAAP;AACH,GA3F4B,EAA7B;;AA6FA5E,EAAAA,YAAY,CAAC6E,aAAb,GAA8B,YAAY;AAEtC;AACR;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,aAAT,CAAuB3E,CAAvB,EAA0B;AACtB,UAAIA,CAAJ,EACI,KAAK,IAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAT,EAAyBI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGH,EAAE,CAACI,MAA5C,EAAoD,EAAED,CAAtD;AACI,YAAIJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAD,IAAY,IAAhB,EACI,KAAKH,EAAE,CAACG,CAAD,CAAP,IAAcJ,CAAC,CAACC,EAAE,CAACG,CAAD,CAAH,CAAf;AAFR;AAGP;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQuE,IAAAA,aAAa,CAACrE,SAAd,CAAwBC,KAAxB,GAAgC,CAAhC;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQoE,IAAAA,aAAa,CAACrE,SAAd,CAAwBsE,UAAxB,GAAqC,CAArC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQD,IAAAA,aAAa,CAAC/D,MAAd,GAAuB,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC/C,aAAO,IAAI8D,aAAJ,CAAkB9D,UAAlB,CAAP;AACH,KAFD;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ8D,IAAAA,aAAa,CAAC7D,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,CAACA,CAAL,EACIA,CAAC,GAAGxB,OAAO,CAACoB,MAAR,EAAJ;AACJ,UAAIG,CAAC,CAACR,KAAF,IAAW,IAAX,IAAmBL,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,OAA9B,CAAvB,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAACR,KAAtB;AACJ,UAAIQ,CAAC,CAAC6D,UAAF,IAAgB,IAAhB,IAAwB1E,MAAM,CAACe,cAAP,CAAsBC,IAAtB,CAA2BH,CAA3B,EAA8B,YAA9B,CAA5B,EACIC,CAAC,CAACG,MAAF,CAAS,GAAT,EAAcE,KAAd,CAAoBN,CAAC,CAAC6D,UAAtB;AACJ,aAAO5D,CAAP;AACH,KARD;AAUA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ2D,IAAAA,aAAa,CAACpD,MAAd,GAAuB,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACzC,UAAI,EAAED,CAAC,YAAYlC,OAAf,CAAJ,EACIkC,CAAC,GAAGlC,OAAO,CAACsB,MAAR,CAAeY,CAAf,CAAJ;AACJ,UAAIE,CAAC,GAAGD,CAAC,KAAKE,SAAN,GAAkBH,CAAC,CAACI,GAApB,GAA0BJ,CAAC,CAACK,GAAF,GAAQJ,CAA1C;AAAA,UAA6CV,CAAC,GAAG,IAAInB,KAAK,CAACE,YAAN,CAAmB6E,aAAvB,EAAjD;;AACA,aAAOnD,CAAC,CAACK,GAAF,GAAQH,CAAf,EAAkB;AACd,YAAII,CAAC,GAAGN,CAAC,CAACL,MAAF,EAAR;;AACA,gBAAQW,CAAC,KAAK,CAAd;AACI,eAAK,EAAL;AACIf,YAAAA,CAAC,CAACR,KAAF,GAAUiB,CAAC,CAACH,KAAF,EAAV;AACA;;AACJ,eAAK,EAAL;AACIN,YAAAA,CAAC,CAAC6D,UAAF,GAAepD,CAAC,CAACH,KAAF,EAAf;AACA;;AACJ;AACIG,YAAAA,CAAC,CAACO,QAAF,CAAWD,CAAC,GAAG,CAAf;AACA;AATR;AAWH;;AACD,aAAOf,CAAP;AACH,KAnBD;;AAqBA,WAAO4D,aAAP;AACH,GAzG4B,EAA7B;;AA2GA,SAAO7E,YAAP;AACH,CA1yFoB,EAArB;;AA4yFA+E,MAAM,CAACC,OAAP,GAAiBlF,KAAjB","sourceRoot":"/","sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\nvar protobuf = require(\"protobufjs\");\n\n\n// Common aliases\nvar $Reader = protobuf.Reader, $Writer = protobuf.Writer, $util = protobuf.util;\n\n// Exported root namespace\nvar $root = protobuf.roots[\"default\"] || (protobuf.roots[\"default\"] = {});\n\n$root.OuterMessage = (function () {\n\n    /**\n     * Namespace OuterMessage.\n     * @exports OuterMessage\n     * @namespace\n     */\n    var OuterMessage = {};\n\n    OuterMessage.C2SS_ActorRPCRequest = (function () {\n\n        /**\n         * Properties of a C2SS_ActorRPCRequest.\n         * @memberof OuterMessage\n         * @interface IC2SS_ActorRPCRequest\n         * @property {number|null} [RpcId] C2SS_ActorRPCRequest RpcId\n         * @property {Long|null} [ActorId] C2SS_ActorRPCRequest ActorId\n         * @property {string|null} [request] C2SS_ActorRPCRequest request\n         */\n\n        /**\n         * Constructs a new C2SS_ActorRPCRequest.\n         * @memberof OuterMessage\n         * @classdesc Represents a C2SS_ActorRPCRequest.\n         * @implements IC2SS_ActorRPCRequest\n         * @constructor\n         * @param {OuterMessage.IC2SS_ActorRPCRequest=} [p] Properties to set\n         */\n        function C2SS_ActorRPCRequest(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2SS_ActorRPCRequest RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.C2SS_ActorRPCRequest\n         * @instance\n         */\n        C2SS_ActorRPCRequest.prototype.RpcId = 0;\n\n        /**\n         * C2SS_ActorRPCRequest ActorId.\n         * @member {Long} ActorId\n         * @memberof OuterMessage.C2SS_ActorRPCRequest\n         * @instance\n         */\n        C2SS_ActorRPCRequest.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * C2SS_ActorRPCRequest request.\n         * @member {string} request\n         * @memberof OuterMessage.C2SS_ActorRPCRequest\n         * @instance\n         */\n        C2SS_ActorRPCRequest.prototype.request = \"\";\n\n        /**\n         * Creates a new C2SS_ActorRPCRequest instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.C2SS_ActorRPCRequest\n         * @static\n         * @param {OuterMessage.IC2SS_ActorRPCRequest=} [properties] Properties to set\n         * @returns {OuterMessage.C2SS_ActorRPCRequest} C2SS_ActorRPCRequest instance\n         */\n        C2SS_ActorRPCRequest.create = function create(properties) {\n            return new C2SS_ActorRPCRequest(properties);\n        };\n\n        /**\n         * Encodes the specified C2SS_ActorRPCRequest message. Does not implicitly {@link OuterMessage.C2SS_ActorRPCRequest.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.C2SS_ActorRPCRequest\n         * @static\n         * @param {OuterMessage.IC2SS_ActorRPCRequest} m C2SS_ActorRPCRequest message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2SS_ActorRPCRequest.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.request != null && Object.hasOwnProperty.call(m, \"request\"))\n                w.uint32(10).string(m.request);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(744).int64(m.ActorId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2SS_ActorRPCRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.C2SS_ActorRPCRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.C2SS_ActorRPCRequest} C2SS_ActorRPCRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2SS_ActorRPCRequest.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.C2SS_ActorRPCRequest();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 93:\n                        m.ActorId = r.int64();\n                        break;\n                    case 1:\n                        m.request = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2SS_ActorRPCRequest;\n    })();\n\n    OuterMessage.SS2C_ActorRPCReply = (function () {\n\n        /**\n         * Properties of a SS2C_ActorRPCReply.\n         * @memberof OuterMessage\n         * @interface ISS2C_ActorRPCReply\n         * @property {number|null} [RpcId] SS2C_ActorRPCReply RpcId\n         * @property {number|null} [Error] SS2C_ActorRPCReply Error\n         * @property {string|null} [Message] SS2C_ActorRPCReply Message\n         */\n\n        /**\n         * Constructs a new SS2C_ActorRPCReply.\n         * @memberof OuterMessage\n         * @classdesc Represents a SS2C_ActorRPCReply.\n         * @implements ISS2C_ActorRPCReply\n         * @constructor\n         * @param {OuterMessage.ISS2C_ActorRPCReply=} [p] Properties to set\n         */\n        function SS2C_ActorRPCReply(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * SS2C_ActorRPCReply RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.SS2C_ActorRPCReply\n         * @instance\n         */\n        SS2C_ActorRPCReply.prototype.RpcId = 0;\n\n        /**\n         * SS2C_ActorRPCReply Error.\n         * @member {number} Error\n         * @memberof OuterMessage.SS2C_ActorRPCReply\n         * @instance\n         */\n        SS2C_ActorRPCReply.prototype.Error = 0;\n\n        /**\n         * SS2C_ActorRPCReply Message.\n         * @member {string} Message\n         * @memberof OuterMessage.SS2C_ActorRPCReply\n         * @instance\n         */\n        SS2C_ActorRPCReply.prototype.Message = \"\";\n\n        /**\n         * Creates a new SS2C_ActorRPCReply instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.SS2C_ActorRPCReply\n         * @static\n         * @param {OuterMessage.ISS2C_ActorRPCReply=} [properties] Properties to set\n         * @returns {OuterMessage.SS2C_ActorRPCReply} SS2C_ActorRPCReply instance\n         */\n        SS2C_ActorRPCReply.create = function create(properties) {\n            return new SS2C_ActorRPCReply(properties);\n        };\n\n        /**\n         * Encodes the specified SS2C_ActorRPCReply message. Does not implicitly {@link OuterMessage.SS2C_ActorRPCReply.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.SS2C_ActorRPCReply\n         * @static\n         * @param {OuterMessage.ISS2C_ActorRPCReply} m SS2C_ActorRPCReply message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SS2C_ActorRPCReply.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a SS2C_ActorRPCReply message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.SS2C_ActorRPCReply\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.SS2C_ActorRPCReply} SS2C_ActorRPCReply\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SS2C_ActorRPCReply.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.SS2C_ActorRPCReply();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return SS2C_ActorRPCReply;\n    })();\n\n    OuterMessage.SS2C_ActorMessage = (function () {\n\n        /**\n         * Properties of a SS2C_ActorMessage.\n         * @memberof OuterMessage\n         * @interface ISS2C_ActorMessage\n         * @property {number|null} [RpcId] SS2C_ActorMessage RpcId\n         * @property {Long|null} [ActorId] SS2C_ActorMessage ActorId\n         * @property {Array.<OuterMessage.IBroadcastInfo>|null} [Info] SS2C_ActorMessage Info\n         */\n\n        /**\n         * Constructs a new SS2C_ActorMessage.\n         * @memberof OuterMessage\n         * @classdesc Represents a SS2C_ActorMessage.\n         * @implements ISS2C_ActorMessage\n         * @constructor\n         * @param {OuterMessage.ISS2C_ActorMessage=} [p] Properties to set\n         */\n        function SS2C_ActorMessage(p) {\n            this.Info = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * SS2C_ActorMessage RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.SS2C_ActorMessage\n         * @instance\n         */\n        SS2C_ActorMessage.prototype.RpcId = 0;\n\n        /**\n         * SS2C_ActorMessage ActorId.\n         * @member {Long} ActorId\n         * @memberof OuterMessage.SS2C_ActorMessage\n         * @instance\n         */\n        SS2C_ActorMessage.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * SS2C_ActorMessage Info.\n         * @member {Array.<OuterMessage.IBroadcastInfo>} Info\n         * @memberof OuterMessage.SS2C_ActorMessage\n         * @instance\n         */\n        SS2C_ActorMessage.prototype.Info = $util.emptyArray;\n\n        /**\n         * Creates a new SS2C_ActorMessage instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.SS2C_ActorMessage\n         * @static\n         * @param {OuterMessage.ISS2C_ActorMessage=} [properties] Properties to set\n         * @returns {OuterMessage.SS2C_ActorMessage} SS2C_ActorMessage instance\n         */\n        SS2C_ActorMessage.create = function create(properties) {\n            return new SS2C_ActorMessage(properties);\n        };\n\n        /**\n         * Encodes the specified SS2C_ActorMessage message. Does not implicitly {@link OuterMessage.SS2C_ActorMessage.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.SS2C_ActorMessage\n         * @static\n         * @param {OuterMessage.ISS2C_ActorMessage} m SS2C_ActorMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SS2C_ActorMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Info != null && m.Info.length) {\n                for (var i = 0; i < m.Info.length; ++i)\n                    $root.OuterMessage.BroadcastInfo.encode(m.Info[i], w.uint32(10).fork()).ldelim();\n            }\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(744).int64(m.ActorId);\n            return w;\n        };\n\n        /**\n         * Decodes a SS2C_ActorMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.SS2C_ActorMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.SS2C_ActorMessage} SS2C_ActorMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SS2C_ActorMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.SS2C_ActorMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 93:\n                        m.ActorId = r.int64();\n                        break;\n                    case 1:\n                        if (!(m.Info && m.Info.length))\n                            m.Info = [];\n                        m.Info.push($root.OuterMessage.BroadcastInfo.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return SS2C_ActorMessage;\n    })();\n\n    OuterMessage.BroadcastInfo = (function () {\n\n        /**\n         * Properties of a BroadcastInfo.\n         * @memberof OuterMessage\n         * @interface IBroadcastInfo\n         * @property {Long|null} [UnitId] BroadcastInfo UnitId\n         * @property {string|null} [Message] BroadcastInfo Message\n         */\n\n        /**\n         * Constructs a new BroadcastInfo.\n         * @memberof OuterMessage\n         * @classdesc Represents a BroadcastInfo.\n         * @implements IBroadcastInfo\n         * @constructor\n         * @param {OuterMessage.IBroadcastInfo=} [p] Properties to set\n         */\n        function BroadcastInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * BroadcastInfo UnitId.\n         * @member {Long} UnitId\n         * @memberof OuterMessage.BroadcastInfo\n         * @instance\n         */\n        BroadcastInfo.prototype.UnitId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * BroadcastInfo Message.\n         * @member {string} Message\n         * @memberof OuterMessage.BroadcastInfo\n         * @instance\n         */\n        BroadcastInfo.prototype.Message = \"\";\n\n        /**\n         * Creates a new BroadcastInfo instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.BroadcastInfo\n         * @static\n         * @param {OuterMessage.IBroadcastInfo=} [properties] Properties to set\n         * @returns {OuterMessage.BroadcastInfo} BroadcastInfo instance\n         */\n        BroadcastInfo.create = function create(properties) {\n            return new BroadcastInfo(properties);\n        };\n\n        /**\n         * Encodes the specified BroadcastInfo message. Does not implicitly {@link OuterMessage.BroadcastInfo.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.BroadcastInfo\n         * @static\n         * @param {OuterMessage.IBroadcastInfo} m BroadcastInfo message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BroadcastInfo.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.UnitId != null && Object.hasOwnProperty.call(m, \"UnitId\"))\n                w.uint32(8).int64(m.UnitId);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(18).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a BroadcastInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.BroadcastInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.BroadcastInfo} BroadcastInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BroadcastInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.BroadcastInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.UnitId = r.int64();\n                        break;\n                    case 2:\n                        m.Message = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return BroadcastInfo;\n    })();\n\n    OuterMessage.C2SS_ActorMessage = (function () {\n\n        /**\n         * Properties of a C2SS_ActorMessage.\n         * @memberof OuterMessage\n         * @interface IC2SS_ActorMessage\n         * @property {number|null} [RpcId] C2SS_ActorMessage RpcId\n         * @property {Long|null} [ActorId] C2SS_ActorMessage ActorId\n         * @property {string|null} [Message] C2SS_ActorMessage Message\n         */\n\n        /**\n         * Constructs a new C2SS_ActorMessage.\n         * @memberof OuterMessage\n         * @classdesc Represents a C2SS_ActorMessage.\n         * @implements IC2SS_ActorMessage\n         * @constructor\n         * @param {OuterMessage.IC2SS_ActorMessage=} [p] Properties to set\n         */\n        function C2SS_ActorMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2SS_ActorMessage RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.C2SS_ActorMessage\n         * @instance\n         */\n        C2SS_ActorMessage.prototype.RpcId = 0;\n\n        /**\n         * C2SS_ActorMessage ActorId.\n         * @member {Long} ActorId\n         * @memberof OuterMessage.C2SS_ActorMessage\n         * @instance\n         */\n        C2SS_ActorMessage.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * C2SS_ActorMessage Message.\n         * @member {string} Message\n         * @memberof OuterMessage.C2SS_ActorMessage\n         * @instance\n         */\n        C2SS_ActorMessage.prototype.Message = \"\";\n\n        /**\n         * Creates a new C2SS_ActorMessage instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.C2SS_ActorMessage\n         * @static\n         * @param {OuterMessage.IC2SS_ActorMessage=} [properties] Properties to set\n         * @returns {OuterMessage.C2SS_ActorMessage} C2SS_ActorMessage instance\n         */\n        C2SS_ActorMessage.create = function create(properties) {\n            return new C2SS_ActorMessage(properties);\n        };\n\n        /**\n         * Encodes the specified C2SS_ActorMessage message. Does not implicitly {@link OuterMessage.C2SS_ActorMessage.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.C2SS_ActorMessage\n         * @static\n         * @param {OuterMessage.IC2SS_ActorMessage} m C2SS_ActorMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2SS_ActorMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(744).int64(m.ActorId);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(754).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a C2SS_ActorMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.C2SS_ActorMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.C2SS_ActorMessage} C2SS_ActorMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2SS_ActorMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.C2SS_ActorMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 93:\n                        m.ActorId = r.int64();\n                        break;\n                    case 94:\n                        m.Message = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2SS_ActorMessage;\n    })();\n\n    OuterMessage.C2M_TestRequest = (function () {\n\n        /**\n         * Properties of a C2M_TestRequest.\n         * @memberof OuterMessage\n         * @interface IC2M_TestRequest\n         * @property {number|null} [RpcId] C2M_TestRequest RpcId\n         * @property {Long|null} [ActorId] C2M_TestRequest ActorId\n         * @property {string|null} [request] C2M_TestRequest request\n         */\n\n        /**\n         * Constructs a new C2M_TestRequest.\n         * @memberof OuterMessage\n         * @classdesc Represents a C2M_TestRequest.\n         * @implements IC2M_TestRequest\n         * @constructor\n         * @param {OuterMessage.IC2M_TestRequest=} [p] Properties to set\n         */\n        function C2M_TestRequest(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2M_TestRequest RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.C2M_TestRequest\n         * @instance\n         */\n        C2M_TestRequest.prototype.RpcId = 0;\n\n        /**\n         * C2M_TestRequest ActorId.\n         * @member {Long} ActorId\n         * @memberof OuterMessage.C2M_TestRequest\n         * @instance\n         */\n        C2M_TestRequest.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * C2M_TestRequest request.\n         * @member {string} request\n         * @memberof OuterMessage.C2M_TestRequest\n         * @instance\n         */\n        C2M_TestRequest.prototype.request = \"\";\n\n        /**\n         * Creates a new C2M_TestRequest instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.C2M_TestRequest\n         * @static\n         * @param {OuterMessage.IC2M_TestRequest=} [properties] Properties to set\n         * @returns {OuterMessage.C2M_TestRequest} C2M_TestRequest instance\n         */\n        C2M_TestRequest.create = function create(properties) {\n            return new C2M_TestRequest(properties);\n        };\n\n        /**\n         * Encodes the specified C2M_TestRequest message. Does not implicitly {@link OuterMessage.C2M_TestRequest.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.C2M_TestRequest\n         * @static\n         * @param {OuterMessage.IC2M_TestRequest} m C2M_TestRequest message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2M_TestRequest.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.request != null && Object.hasOwnProperty.call(m, \"request\"))\n                w.uint32(10).string(m.request);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(744).int64(m.ActorId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2M_TestRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.C2M_TestRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.C2M_TestRequest} C2M_TestRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2M_TestRequest.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.C2M_TestRequest();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 93:\n                        m.ActorId = r.int64();\n                        break;\n                    case 1:\n                        m.request = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2M_TestRequest;\n    })();\n\n    OuterMessage.M2C_TestResponse = (function () {\n\n        /**\n         * Properties of a M2C_TestResponse.\n         * @memberof OuterMessage\n         * @interface IM2C_TestResponse\n         * @property {number|null} [RpcId] M2C_TestResponse RpcId\n         * @property {number|null} [Error] M2C_TestResponse Error\n         * @property {string|null} [Message] M2C_TestResponse Message\n         * @property {string|null} [response] M2C_TestResponse response\n         */\n\n        /**\n         * Constructs a new M2C_TestResponse.\n         * @memberof OuterMessage\n         * @classdesc Represents a M2C_TestResponse.\n         * @implements IM2C_TestResponse\n         * @constructor\n         * @param {OuterMessage.IM2C_TestResponse=} [p] Properties to set\n         */\n        function M2C_TestResponse(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * M2C_TestResponse RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.M2C_TestResponse\n         * @instance\n         */\n        M2C_TestResponse.prototype.RpcId = 0;\n\n        /**\n         * M2C_TestResponse Error.\n         * @member {number} Error\n         * @memberof OuterMessage.M2C_TestResponse\n         * @instance\n         */\n        M2C_TestResponse.prototype.Error = 0;\n\n        /**\n         * M2C_TestResponse Message.\n         * @member {string} Message\n         * @memberof OuterMessage.M2C_TestResponse\n         * @instance\n         */\n        M2C_TestResponse.prototype.Message = \"\";\n\n        /**\n         * M2C_TestResponse response.\n         * @member {string} response\n         * @memberof OuterMessage.M2C_TestResponse\n         * @instance\n         */\n        M2C_TestResponse.prototype.response = \"\";\n\n        /**\n         * Creates a new M2C_TestResponse instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.M2C_TestResponse\n         * @static\n         * @param {OuterMessage.IM2C_TestResponse=} [properties] Properties to set\n         * @returns {OuterMessage.M2C_TestResponse} M2C_TestResponse instance\n         */\n        M2C_TestResponse.create = function create(properties) {\n            return new M2C_TestResponse(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_TestResponse message. Does not implicitly {@link OuterMessage.M2C_TestResponse.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.M2C_TestResponse\n         * @static\n         * @param {OuterMessage.IM2C_TestResponse} m M2C_TestResponse message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_TestResponse.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.response != null && Object.hasOwnProperty.call(m, \"response\"))\n                w.uint32(10).string(m.response);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a M2C_TestResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.M2C_TestResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.M2C_TestResponse} M2C_TestResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_TestResponse.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.M2C_TestResponse();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    case 1:\n                        m.response = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return M2C_TestResponse;\n    })();\n\n    OuterMessage.Actor_TransferRequest = (function () {\n\n        /**\n         * Properties of an Actor_TransferRequest.\n         * @memberof OuterMessage\n         * @interface IActor_TransferRequest\n         * @property {number|null} [RpcId] Actor_TransferRequest RpcId\n         * @property {Long|null} [ActorId] Actor_TransferRequest ActorId\n         * @property {number|null} [MapIndex] Actor_TransferRequest MapIndex\n         */\n\n        /**\n         * Constructs a new Actor_TransferRequest.\n         * @memberof OuterMessage\n         * @classdesc Represents an Actor_TransferRequest.\n         * @implements IActor_TransferRequest\n         * @constructor\n         * @param {OuterMessage.IActor_TransferRequest=} [p] Properties to set\n         */\n        function Actor_TransferRequest(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Actor_TransferRequest RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.Actor_TransferRequest\n         * @instance\n         */\n        Actor_TransferRequest.prototype.RpcId = 0;\n\n        /**\n         * Actor_TransferRequest ActorId.\n         * @member {Long} ActorId\n         * @memberof OuterMessage.Actor_TransferRequest\n         * @instance\n         */\n        Actor_TransferRequest.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * Actor_TransferRequest MapIndex.\n         * @member {number} MapIndex\n         * @memberof OuterMessage.Actor_TransferRequest\n         * @instance\n         */\n        Actor_TransferRequest.prototype.MapIndex = 0;\n\n        /**\n         * Creates a new Actor_TransferRequest instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.Actor_TransferRequest\n         * @static\n         * @param {OuterMessage.IActor_TransferRequest=} [properties] Properties to set\n         * @returns {OuterMessage.Actor_TransferRequest} Actor_TransferRequest instance\n         */\n        Actor_TransferRequest.create = function create(properties) {\n            return new Actor_TransferRequest(properties);\n        };\n\n        /**\n         * Encodes the specified Actor_TransferRequest message. Does not implicitly {@link OuterMessage.Actor_TransferRequest.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.Actor_TransferRequest\n         * @static\n         * @param {OuterMessage.IActor_TransferRequest} m Actor_TransferRequest message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Actor_TransferRequest.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.MapIndex != null && Object.hasOwnProperty.call(m, \"MapIndex\"))\n                w.uint32(8).int32(m.MapIndex);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(744).int64(m.ActorId);\n            return w;\n        };\n\n        /**\n         * Decodes an Actor_TransferRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.Actor_TransferRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.Actor_TransferRequest} Actor_TransferRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Actor_TransferRequest.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.Actor_TransferRequest();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 93:\n                        m.ActorId = r.int64();\n                        break;\n                    case 1:\n                        m.MapIndex = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return Actor_TransferRequest;\n    })();\n\n    OuterMessage.Actor_TransferResponse = (function () {\n\n        /**\n         * Properties of an Actor_TransferResponse.\n         * @memberof OuterMessage\n         * @interface IActor_TransferResponse\n         * @property {number|null} [RpcId] Actor_TransferResponse RpcId\n         * @property {number|null} [Error] Actor_TransferResponse Error\n         * @property {string|null} [Message] Actor_TransferResponse Message\n         */\n\n        /**\n         * Constructs a new Actor_TransferResponse.\n         * @memberof OuterMessage\n         * @classdesc Represents an Actor_TransferResponse.\n         * @implements IActor_TransferResponse\n         * @constructor\n         * @param {OuterMessage.IActor_TransferResponse=} [p] Properties to set\n         */\n        function Actor_TransferResponse(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Actor_TransferResponse RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.Actor_TransferResponse\n         * @instance\n         */\n        Actor_TransferResponse.prototype.RpcId = 0;\n\n        /**\n         * Actor_TransferResponse Error.\n         * @member {number} Error\n         * @memberof OuterMessage.Actor_TransferResponse\n         * @instance\n         */\n        Actor_TransferResponse.prototype.Error = 0;\n\n        /**\n         * Actor_TransferResponse Message.\n         * @member {string} Message\n         * @memberof OuterMessage.Actor_TransferResponse\n         * @instance\n         */\n        Actor_TransferResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new Actor_TransferResponse instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.Actor_TransferResponse\n         * @static\n         * @param {OuterMessage.IActor_TransferResponse=} [properties] Properties to set\n         * @returns {OuterMessage.Actor_TransferResponse} Actor_TransferResponse instance\n         */\n        Actor_TransferResponse.create = function create(properties) {\n            return new Actor_TransferResponse(properties);\n        };\n\n        /**\n         * Encodes the specified Actor_TransferResponse message. Does not implicitly {@link OuterMessage.Actor_TransferResponse.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.Actor_TransferResponse\n         * @static\n         * @param {OuterMessage.IActor_TransferResponse} m Actor_TransferResponse message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Actor_TransferResponse.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes an Actor_TransferResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.Actor_TransferResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.Actor_TransferResponse} Actor_TransferResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Actor_TransferResponse.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.Actor_TransferResponse();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return Actor_TransferResponse;\n    })();\n\n    OuterMessage.C2G_EnterMap = (function () {\n\n        /**\n         * Properties of a C2G_EnterMap.\n         * @memberof OuterMessage\n         * @interface IC2G_EnterMap\n         * @property {number|null} [RpcId] C2G_EnterMap RpcId\n         */\n\n        /**\n         * Constructs a new C2G_EnterMap.\n         * @memberof OuterMessage\n         * @classdesc Represents a C2G_EnterMap.\n         * @implements IC2G_EnterMap\n         * @constructor\n         * @param {OuterMessage.IC2G_EnterMap=} [p] Properties to set\n         */\n        function C2G_EnterMap(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2G_EnterMap RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.C2G_EnterMap\n         * @instance\n         */\n        C2G_EnterMap.prototype.RpcId = 0;\n\n        /**\n         * Creates a new C2G_EnterMap instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.C2G_EnterMap\n         * @static\n         * @param {OuterMessage.IC2G_EnterMap=} [properties] Properties to set\n         * @returns {OuterMessage.C2G_EnterMap} C2G_EnterMap instance\n         */\n        C2G_EnterMap.create = function create(properties) {\n            return new C2G_EnterMap(properties);\n        };\n\n        /**\n         * Encodes the specified C2G_EnterMap message. Does not implicitly {@link OuterMessage.C2G_EnterMap.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.C2G_EnterMap\n         * @static\n         * @param {OuterMessage.IC2G_EnterMap} m C2G_EnterMap message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_EnterMap.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2G_EnterMap message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.C2G_EnterMap\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.C2G_EnterMap} C2G_EnterMap\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_EnterMap.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.C2G_EnterMap();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2G_EnterMap;\n    })();\n\n    OuterMessage.G2C_EnterMap = (function () {\n\n        /**\n         * Properties of a G2C_EnterMap.\n         * @memberof OuterMessage\n         * @interface IG2C_EnterMap\n         * @property {number|null} [RpcId] G2C_EnterMap RpcId\n         * @property {number|null} [Error] G2C_EnterMap Error\n         * @property {string|null} [Message] G2C_EnterMap Message\n         * @property {Long|null} [UnitId] G2C_EnterMap UnitId\n         * @property {Array.<OuterMessage.IUnitInfo>|null} [Units] G2C_EnterMap Units\n         */\n\n        /**\n         * Constructs a new G2C_EnterMap.\n         * @memberof OuterMessage\n         * @classdesc Represents a G2C_EnterMap.\n         * @implements IG2C_EnterMap\n         * @constructor\n         * @param {OuterMessage.IG2C_EnterMap=} [p] Properties to set\n         */\n        function G2C_EnterMap(p) {\n            this.Units = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * G2C_EnterMap RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.RpcId = 0;\n\n        /**\n         * G2C_EnterMap Error.\n         * @member {number} Error\n         * @memberof OuterMessage.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.Error = 0;\n\n        /**\n         * G2C_EnterMap Message.\n         * @member {string} Message\n         * @memberof OuterMessage.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.Message = \"\";\n\n        /**\n         * G2C_EnterMap UnitId.\n         * @member {Long} UnitId\n         * @memberof OuterMessage.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.UnitId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * G2C_EnterMap Units.\n         * @member {Array.<OuterMessage.IUnitInfo>} Units\n         * @memberof OuterMessage.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.Units = $util.emptyArray;\n\n        /**\n         * Creates a new G2C_EnterMap instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.G2C_EnterMap\n         * @static\n         * @param {OuterMessage.IG2C_EnterMap=} [properties] Properties to set\n         * @returns {OuterMessage.G2C_EnterMap} G2C_EnterMap instance\n         */\n        G2C_EnterMap.create = function create(properties) {\n            return new G2C_EnterMap(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_EnterMap message. Does not implicitly {@link OuterMessage.G2C_EnterMap.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.G2C_EnterMap\n         * @static\n         * @param {OuterMessage.IG2C_EnterMap} m G2C_EnterMap message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_EnterMap.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.UnitId != null && Object.hasOwnProperty.call(m, \"UnitId\"))\n                w.uint32(8).int64(m.UnitId);\n            if (m.Units != null && m.Units.length) {\n                for (var i = 0; i < m.Units.length; ++i)\n                    $root.OuterMessage.UnitInfo.encode(m.Units[i], w.uint32(18).fork()).ldelim();\n            }\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a G2C_EnterMap message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.G2C_EnterMap\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.G2C_EnterMap} G2C_EnterMap\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_EnterMap.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.G2C_EnterMap();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    case 1:\n                        m.UnitId = r.int64();\n                        break;\n                    case 2:\n                        if (!(m.Units && m.Units.length))\n                            m.Units = [];\n                        m.Units.push($root.OuterMessage.UnitInfo.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return G2C_EnterMap;\n    })();\n\n    OuterMessage.UnitInfo = (function () {\n\n        /**\n         * Properties of an UnitInfo.\n         * @memberof OuterMessage\n         * @interface IUnitInfo\n         * @property {Long|null} [UnitId] UnitInfo UnitId\n         * @property {number|null} [X] UnitInfo X\n         * @property {number|null} [Y] UnitInfo Y\n         * @property {number|null} [Z] UnitInfo Z\n         */\n\n        /**\n         * Constructs a new UnitInfo.\n         * @memberof OuterMessage\n         * @classdesc Represents an UnitInfo.\n         * @implements IUnitInfo\n         * @constructor\n         * @param {OuterMessage.IUnitInfo=} [p] Properties to set\n         */\n        function UnitInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * UnitInfo UnitId.\n         * @member {Long} UnitId\n         * @memberof OuterMessage.UnitInfo\n         * @instance\n         */\n        UnitInfo.prototype.UnitId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * UnitInfo X.\n         * @member {number} X\n         * @memberof OuterMessage.UnitInfo\n         * @instance\n         */\n        UnitInfo.prototype.X = 0;\n\n        /**\n         * UnitInfo Y.\n         * @member {number} Y\n         * @memberof OuterMessage.UnitInfo\n         * @instance\n         */\n        UnitInfo.prototype.Y = 0;\n\n        /**\n         * UnitInfo Z.\n         * @member {number} Z\n         * @memberof OuterMessage.UnitInfo\n         * @instance\n         */\n        UnitInfo.prototype.Z = 0;\n\n        /**\n         * Creates a new UnitInfo instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.UnitInfo\n         * @static\n         * @param {OuterMessage.IUnitInfo=} [properties] Properties to set\n         * @returns {OuterMessage.UnitInfo} UnitInfo instance\n         */\n        UnitInfo.create = function create(properties) {\n            return new UnitInfo(properties);\n        };\n\n        /**\n         * Encodes the specified UnitInfo message. Does not implicitly {@link OuterMessage.UnitInfo.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.UnitInfo\n         * @static\n         * @param {OuterMessage.IUnitInfo} m UnitInfo message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UnitInfo.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.UnitId != null && Object.hasOwnProperty.call(m, \"UnitId\"))\n                w.uint32(8).int64(m.UnitId);\n            if (m.X != null && Object.hasOwnProperty.call(m, \"X\"))\n                w.uint32(21).float(m.X);\n            if (m.Y != null && Object.hasOwnProperty.call(m, \"Y\"))\n                w.uint32(29).float(m.Y);\n            if (m.Z != null && Object.hasOwnProperty.call(m, \"Z\"))\n                w.uint32(37).float(m.Z);\n            return w;\n        };\n\n        /**\n         * Decodes an UnitInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.UnitInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.UnitInfo} UnitInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UnitInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.UnitInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.UnitId = r.int64();\n                        break;\n                    case 2:\n                        m.X = r.float();\n                        break;\n                    case 3:\n                        m.Y = r.float();\n                        break;\n                    case 4:\n                        m.Z = r.float();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return UnitInfo;\n    })();\n\n    OuterMessage.M2C_CreateUnits = (function () {\n\n        /**\n         * Properties of a M2C_CreateUnits.\n         * @memberof OuterMessage\n         * @interface IM2C_CreateUnits\n         * @property {number|null} [RpcId] M2C_CreateUnits RpcId\n         * @property {Long|null} [ActorId] M2C_CreateUnits ActorId\n         * @property {Array.<OuterMessage.IUnitInfo>|null} [Units] M2C_CreateUnits Units\n         */\n\n        /**\n         * Constructs a new M2C_CreateUnits.\n         * @memberof OuterMessage\n         * @classdesc Represents a M2C_CreateUnits.\n         * @implements IM2C_CreateUnits\n         * @constructor\n         * @param {OuterMessage.IM2C_CreateUnits=} [p] Properties to set\n         */\n        function M2C_CreateUnits(p) {\n            this.Units = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * M2C_CreateUnits RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.M2C_CreateUnits\n         * @instance\n         */\n        M2C_CreateUnits.prototype.RpcId = 0;\n\n        /**\n         * M2C_CreateUnits ActorId.\n         * @member {Long} ActorId\n         * @memberof OuterMessage.M2C_CreateUnits\n         * @instance\n         */\n        M2C_CreateUnits.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * M2C_CreateUnits Units.\n         * @member {Array.<OuterMessage.IUnitInfo>} Units\n         * @memberof OuterMessage.M2C_CreateUnits\n         * @instance\n         */\n        M2C_CreateUnits.prototype.Units = $util.emptyArray;\n\n        /**\n         * Creates a new M2C_CreateUnits instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.M2C_CreateUnits\n         * @static\n         * @param {OuterMessage.IM2C_CreateUnits=} [properties] Properties to set\n         * @returns {OuterMessage.M2C_CreateUnits} M2C_CreateUnits instance\n         */\n        M2C_CreateUnits.create = function create(properties) {\n            return new M2C_CreateUnits(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_CreateUnits message. Does not implicitly {@link OuterMessage.M2C_CreateUnits.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.M2C_CreateUnits\n         * @static\n         * @param {OuterMessage.IM2C_CreateUnits} m M2C_CreateUnits message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_CreateUnits.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Units != null && m.Units.length) {\n                for (var i = 0; i < m.Units.length; ++i)\n                    $root.OuterMessage.UnitInfo.encode(m.Units[i], w.uint32(10).fork()).ldelim();\n            }\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(744).int64(m.ActorId);\n            return w;\n        };\n\n        /**\n         * Decodes a M2C_CreateUnits message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.M2C_CreateUnits\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.M2C_CreateUnits} M2C_CreateUnits\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_CreateUnits.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.M2C_CreateUnits();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 93:\n                        m.ActorId = r.int64();\n                        break;\n                    case 1:\n                        if (!(m.Units && m.Units.length))\n                            m.Units = [];\n                        m.Units.push($root.OuterMessage.UnitInfo.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return M2C_CreateUnits;\n    })();\n\n    OuterMessage.Frame_ClickMap = (function () {\n\n        /**\n         * Properties of a Frame_ClickMap.\n         * @memberof OuterMessage\n         * @interface IFrame_ClickMap\n         * @property {number|null} [RpcId] Frame_ClickMap RpcId\n         * @property {Long|null} [ActorId] Frame_ClickMap ActorId\n         * @property {Long|null} [Id] Frame_ClickMap Id\n         * @property {number|null} [X] Frame_ClickMap X\n         * @property {number|null} [Y] Frame_ClickMap Y\n         * @property {number|null} [Z] Frame_ClickMap Z\n         */\n\n        /**\n         * Constructs a new Frame_ClickMap.\n         * @memberof OuterMessage\n         * @classdesc Represents a Frame_ClickMap.\n         * @implements IFrame_ClickMap\n         * @constructor\n         * @param {OuterMessage.IFrame_ClickMap=} [p] Properties to set\n         */\n        function Frame_ClickMap(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Frame_ClickMap RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.RpcId = 0;\n\n        /**\n         * Frame_ClickMap ActorId.\n         * @member {Long} ActorId\n         * @memberof OuterMessage.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * Frame_ClickMap Id.\n         * @member {Long} Id\n         * @memberof OuterMessage.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.Id = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * Frame_ClickMap X.\n         * @member {number} X\n         * @memberof OuterMessage.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.X = 0;\n\n        /**\n         * Frame_ClickMap Y.\n         * @member {number} Y\n         * @memberof OuterMessage.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.Y = 0;\n\n        /**\n         * Frame_ClickMap Z.\n         * @member {number} Z\n         * @memberof OuterMessage.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.Z = 0;\n\n        /**\n         * Creates a new Frame_ClickMap instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.Frame_ClickMap\n         * @static\n         * @param {OuterMessage.IFrame_ClickMap=} [properties] Properties to set\n         * @returns {OuterMessage.Frame_ClickMap} Frame_ClickMap instance\n         */\n        Frame_ClickMap.create = function create(properties) {\n            return new Frame_ClickMap(properties);\n        };\n\n        /**\n         * Encodes the specified Frame_ClickMap message. Does not implicitly {@link OuterMessage.Frame_ClickMap.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.Frame_ClickMap\n         * @static\n         * @param {OuterMessage.IFrame_ClickMap} m Frame_ClickMap message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Frame_ClickMap.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.X != null && Object.hasOwnProperty.call(m, \"X\"))\n                w.uint32(13).float(m.X);\n            if (m.Y != null && Object.hasOwnProperty.call(m, \"Y\"))\n                w.uint32(21).float(m.Y);\n            if (m.Z != null && Object.hasOwnProperty.call(m, \"Z\"))\n                w.uint32(29).float(m.Z);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(744).int64(m.ActorId);\n            if (m.Id != null && Object.hasOwnProperty.call(m, \"Id\"))\n                w.uint32(752).int64(m.Id);\n            return w;\n        };\n\n        /**\n         * Decodes a Frame_ClickMap message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.Frame_ClickMap\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.Frame_ClickMap} Frame_ClickMap\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Frame_ClickMap.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.Frame_ClickMap();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 93:\n                        m.ActorId = r.int64();\n                        break;\n                    case 94:\n                        m.Id = r.int64();\n                        break;\n                    case 1:\n                        m.X = r.float();\n                        break;\n                    case 2:\n                        m.Y = r.float();\n                        break;\n                    case 3:\n                        m.Z = r.float();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return Frame_ClickMap;\n    })();\n\n    OuterMessage.M2C_PathfindingResult = (function () {\n\n        /**\n         * Properties of a M2C_PathfindingResult.\n         * @memberof OuterMessage\n         * @interface IM2C_PathfindingResult\n         * @property {Long|null} [ActorId] M2C_PathfindingResult ActorId\n         * @property {Long|null} [Id] M2C_PathfindingResult Id\n         * @property {number|null} [X] M2C_PathfindingResult X\n         * @property {number|null} [Y] M2C_PathfindingResult Y\n         * @property {number|null} [Z] M2C_PathfindingResult Z\n         * @property {Array.<number>|null} [Xs] M2C_PathfindingResult Xs\n         * @property {Array.<number>|null} [Ys] M2C_PathfindingResult Ys\n         * @property {Array.<number>|null} [Zs] M2C_PathfindingResult Zs\n         */\n\n        /**\n         * Constructs a new M2C_PathfindingResult.\n         * @memberof OuterMessage\n         * @classdesc Represents a M2C_PathfindingResult.\n         * @implements IM2C_PathfindingResult\n         * @constructor\n         * @param {OuterMessage.IM2C_PathfindingResult=} [p] Properties to set\n         */\n        function M2C_PathfindingResult(p) {\n            this.Xs = [];\n            this.Ys = [];\n            this.Zs = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * M2C_PathfindingResult ActorId.\n         * @member {Long} ActorId\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * M2C_PathfindingResult Id.\n         * @member {Long} Id\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Id = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * M2C_PathfindingResult X.\n         * @member {number} X\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.X = 0;\n\n        /**\n         * M2C_PathfindingResult Y.\n         * @member {number} Y\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Y = 0;\n\n        /**\n         * M2C_PathfindingResult Z.\n         * @member {number} Z\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Z = 0;\n\n        /**\n         * M2C_PathfindingResult Xs.\n         * @member {Array.<number>} Xs\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Xs = $util.emptyArray;\n\n        /**\n         * M2C_PathfindingResult Ys.\n         * @member {Array.<number>} Ys\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Ys = $util.emptyArray;\n\n        /**\n         * M2C_PathfindingResult Zs.\n         * @member {Array.<number>} Zs\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Zs = $util.emptyArray;\n\n        /**\n         * Creates a new M2C_PathfindingResult instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @static\n         * @param {OuterMessage.IM2C_PathfindingResult=} [properties] Properties to set\n         * @returns {OuterMessage.M2C_PathfindingResult} M2C_PathfindingResult instance\n         */\n        M2C_PathfindingResult.create = function create(properties) {\n            return new M2C_PathfindingResult(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_PathfindingResult message. Does not implicitly {@link OuterMessage.M2C_PathfindingResult.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @static\n         * @param {OuterMessage.IM2C_PathfindingResult} m M2C_PathfindingResult message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_PathfindingResult.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Id != null && Object.hasOwnProperty.call(m, \"Id\"))\n                w.uint32(8).int64(m.Id);\n            if (m.X != null && Object.hasOwnProperty.call(m, \"X\"))\n                w.uint32(21).float(m.X);\n            if (m.Y != null && Object.hasOwnProperty.call(m, \"Y\"))\n                w.uint32(29).float(m.Y);\n            if (m.Z != null && Object.hasOwnProperty.call(m, \"Z\"))\n                w.uint32(37).float(m.Z);\n            if (m.Xs != null && m.Xs.length) {\n                w.uint32(42).fork();\n                for (var i = 0; i < m.Xs.length; ++i)\n                    w.float(m.Xs[i]);\n                w.ldelim();\n            }\n            if (m.Ys != null && m.Ys.length) {\n                w.uint32(50).fork();\n                for (var i = 0; i < m.Ys.length; ++i)\n                    w.float(m.Ys[i]);\n                w.ldelim();\n            }\n            if (m.Zs != null && m.Zs.length) {\n                w.uint32(58).fork();\n                for (var i = 0; i < m.Zs.length; ++i)\n                    w.float(m.Zs[i]);\n                w.ldelim();\n            }\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(744).int64(m.ActorId);\n            return w;\n        };\n\n        /**\n         * Decodes a M2C_PathfindingResult message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.M2C_PathfindingResult\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.M2C_PathfindingResult} M2C_PathfindingResult\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_PathfindingResult.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.M2C_PathfindingResult();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 93:\n                        m.ActorId = r.int64();\n                        break;\n                    case 1:\n                        m.Id = r.int64();\n                        break;\n                    case 2:\n                        m.X = r.float();\n                        break;\n                    case 3:\n                        m.Y = r.float();\n                        break;\n                    case 4:\n                        m.Z = r.float();\n                        break;\n                    case 5:\n                        if (!(m.Xs && m.Xs.length))\n                            m.Xs = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.Xs.push(r.float());\n                        } else\n                            m.Xs.push(r.float());\n                        break;\n                    case 6:\n                        if (!(m.Ys && m.Ys.length))\n                            m.Ys = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.Ys.push(r.float());\n                        } else\n                            m.Ys.push(r.float());\n                        break;\n                    case 7:\n                        if (!(m.Zs && m.Zs.length))\n                            m.Zs = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.Zs.push(r.float());\n                        } else\n                            m.Zs.push(r.float());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return M2C_PathfindingResult;\n    })();\n\n    OuterMessage.C2R_Ping = (function () {\n\n        /**\n         * Properties of a C2R_Ping.\n         * @memberof OuterMessage\n         * @interface IC2R_Ping\n         * @property {number|null} [RpcId] C2R_Ping RpcId\n         */\n\n        /**\n         * Constructs a new C2R_Ping.\n         * @memberof OuterMessage\n         * @classdesc Represents a C2R_Ping.\n         * @implements IC2R_Ping\n         * @constructor\n         * @param {OuterMessage.IC2R_Ping=} [p] Properties to set\n         */\n        function C2R_Ping(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2R_Ping RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.C2R_Ping\n         * @instance\n         */\n        C2R_Ping.prototype.RpcId = 0;\n\n        /**\n         * Creates a new C2R_Ping instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.C2R_Ping\n         * @static\n         * @param {OuterMessage.IC2R_Ping=} [properties] Properties to set\n         * @returns {OuterMessage.C2R_Ping} C2R_Ping instance\n         */\n        C2R_Ping.create = function create(properties) {\n            return new C2R_Ping(properties);\n        };\n\n        /**\n         * Encodes the specified C2R_Ping message. Does not implicitly {@link OuterMessage.C2R_Ping.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.C2R_Ping\n         * @static\n         * @param {OuterMessage.IC2R_Ping} m C2R_Ping message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2R_Ping.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2R_Ping message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.C2R_Ping\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.C2R_Ping} C2R_Ping\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2R_Ping.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.C2R_Ping();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2R_Ping;\n    })();\n\n    OuterMessage.R2C_Ping = (function () {\n\n        /**\n         * Properties of a R2C_Ping.\n         * @memberof OuterMessage\n         * @interface IR2C_Ping\n         * @property {number|null} [RpcId] R2C_Ping RpcId\n         * @property {number|null} [Error] R2C_Ping Error\n         * @property {string|null} [Message] R2C_Ping Message\n         */\n\n        /**\n         * Constructs a new R2C_Ping.\n         * @memberof OuterMessage\n         * @classdesc Represents a R2C_Ping.\n         * @implements IR2C_Ping\n         * @constructor\n         * @param {OuterMessage.IR2C_Ping=} [p] Properties to set\n         */\n        function R2C_Ping(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * R2C_Ping RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.R2C_Ping\n         * @instance\n         */\n        R2C_Ping.prototype.RpcId = 0;\n\n        /**\n         * R2C_Ping Error.\n         * @member {number} Error\n         * @memberof OuterMessage.R2C_Ping\n         * @instance\n         */\n        R2C_Ping.prototype.Error = 0;\n\n        /**\n         * R2C_Ping Message.\n         * @member {string} Message\n         * @memberof OuterMessage.R2C_Ping\n         * @instance\n         */\n        R2C_Ping.prototype.Message = \"\";\n\n        /**\n         * Creates a new R2C_Ping instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.R2C_Ping\n         * @static\n         * @param {OuterMessage.IR2C_Ping=} [properties] Properties to set\n         * @returns {OuterMessage.R2C_Ping} R2C_Ping instance\n         */\n        R2C_Ping.create = function create(properties) {\n            return new R2C_Ping(properties);\n        };\n\n        /**\n         * Encodes the specified R2C_Ping message. Does not implicitly {@link OuterMessage.R2C_Ping.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.R2C_Ping\n         * @static\n         * @param {OuterMessage.IR2C_Ping} m R2C_Ping message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        R2C_Ping.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a R2C_Ping message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.R2C_Ping\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.R2C_Ping} R2C_Ping\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        R2C_Ping.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.R2C_Ping();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return R2C_Ping;\n    })();\n\n    OuterMessage.G2C_Test = (function () {\n\n        /**\n         * Properties of a G2C_Test.\n         * @memberof OuterMessage\n         * @interface IG2C_Test\n         */\n\n        /**\n         * Constructs a new G2C_Test.\n         * @memberof OuterMessage\n         * @classdesc Represents a G2C_Test.\n         * @implements IG2C_Test\n         * @constructor\n         * @param {OuterMessage.IG2C_Test=} [p] Properties to set\n         */\n        function G2C_Test(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Creates a new G2C_Test instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.G2C_Test\n         * @static\n         * @param {OuterMessage.IG2C_Test=} [properties] Properties to set\n         * @returns {OuterMessage.G2C_Test} G2C_Test instance\n         */\n        G2C_Test.create = function create(properties) {\n            return new G2C_Test(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_Test message. Does not implicitly {@link OuterMessage.G2C_Test.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.G2C_Test\n         * @static\n         * @param {OuterMessage.IG2C_Test} m G2C_Test message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_Test.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            return w;\n        };\n\n        /**\n         * Decodes a G2C_Test message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.G2C_Test\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.G2C_Test} G2C_Test\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_Test.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.G2C_Test();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return G2C_Test;\n    })();\n\n    OuterMessage.C2M_Reload = (function () {\n\n        /**\n         * Properties of a C2M_Reload.\n         * @memberof OuterMessage\n         * @interface IC2M_Reload\n         * @property {number|null} [RpcId] C2M_Reload RpcId\n         * @property {string|null} [Account] C2M_Reload Account\n         * @property {string|null} [Password] C2M_Reload Password\n         */\n\n        /**\n         * Constructs a new C2M_Reload.\n         * @memberof OuterMessage\n         * @classdesc Represents a C2M_Reload.\n         * @implements IC2M_Reload\n         * @constructor\n         * @param {OuterMessage.IC2M_Reload=} [p] Properties to set\n         */\n        function C2M_Reload(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2M_Reload RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.C2M_Reload\n         * @instance\n         */\n        C2M_Reload.prototype.RpcId = 0;\n\n        /**\n         * C2M_Reload Account.\n         * @member {string} Account\n         * @memberof OuterMessage.C2M_Reload\n         * @instance\n         */\n        C2M_Reload.prototype.Account = \"\";\n\n        /**\n         * C2M_Reload Password.\n         * @member {string} Password\n         * @memberof OuterMessage.C2M_Reload\n         * @instance\n         */\n        C2M_Reload.prototype.Password = \"\";\n\n        /**\n         * Creates a new C2M_Reload instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.C2M_Reload\n         * @static\n         * @param {OuterMessage.IC2M_Reload=} [properties] Properties to set\n         * @returns {OuterMessage.C2M_Reload} C2M_Reload instance\n         */\n        C2M_Reload.create = function create(properties) {\n            return new C2M_Reload(properties);\n        };\n\n        /**\n         * Encodes the specified C2M_Reload message. Does not implicitly {@link OuterMessage.C2M_Reload.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.C2M_Reload\n         * @static\n         * @param {OuterMessage.IC2M_Reload} m C2M_Reload message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2M_Reload.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.Account != null && Object.hasOwnProperty.call(m, \"Account\"))\n                w.uint32(10).string(m.Account);\n            if (m.Password != null && Object.hasOwnProperty.call(m, \"Password\"))\n                w.uint32(18).string(m.Password);\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2M_Reload message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.C2M_Reload\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.C2M_Reload} C2M_Reload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2M_Reload.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.C2M_Reload();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 1:\n                        m.Account = r.string();\n                        break;\n                    case 2:\n                        m.Password = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2M_Reload;\n    })();\n\n    OuterMessage.M2C_Reload = (function () {\n\n        /**\n         * Properties of a M2C_Reload.\n         * @memberof OuterMessage\n         * @interface IM2C_Reload\n         * @property {number|null} [RpcId] M2C_Reload RpcId\n         * @property {number|null} [Error] M2C_Reload Error\n         * @property {string|null} [Message] M2C_Reload Message\n         */\n\n        /**\n         * Constructs a new M2C_Reload.\n         * @memberof OuterMessage\n         * @classdesc Represents a M2C_Reload.\n         * @implements IM2C_Reload\n         * @constructor\n         * @param {OuterMessage.IM2C_Reload=} [p] Properties to set\n         */\n        function M2C_Reload(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * M2C_Reload RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.M2C_Reload\n         * @instance\n         */\n        M2C_Reload.prototype.RpcId = 0;\n\n        /**\n         * M2C_Reload Error.\n         * @member {number} Error\n         * @memberof OuterMessage.M2C_Reload\n         * @instance\n         */\n        M2C_Reload.prototype.Error = 0;\n\n        /**\n         * M2C_Reload Message.\n         * @member {string} Message\n         * @memberof OuterMessage.M2C_Reload\n         * @instance\n         */\n        M2C_Reload.prototype.Message = \"\";\n\n        /**\n         * Creates a new M2C_Reload instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.M2C_Reload\n         * @static\n         * @param {OuterMessage.IM2C_Reload=} [properties] Properties to set\n         * @returns {OuterMessage.M2C_Reload} M2C_Reload instance\n         */\n        M2C_Reload.create = function create(properties) {\n            return new M2C_Reload(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_Reload message. Does not implicitly {@link OuterMessage.M2C_Reload.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.M2C_Reload\n         * @static\n         * @param {OuterMessage.IM2C_Reload} m M2C_Reload message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_Reload.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.Error != null && Object.hasOwnProperty.call(m, \"Error\"))\n                w.uint32(728).int32(m.Error);\n            if (m.Message != null && Object.hasOwnProperty.call(m, \"Message\"))\n                w.uint32(738).string(m.Message);\n            return w;\n        };\n\n        /**\n         * Decodes a M2C_Reload message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.M2C_Reload\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.M2C_Reload} M2C_Reload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_Reload.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.M2C_Reload();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.Error = r.int32();\n                        break;\n                    case 92:\n                        m.Message = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return M2C_Reload;\n    })();\n\n    OuterMessage.SS2C_BaseNotify = (function () {\n\n        /**\n         * Properties of a SS2C_BaseNotify.\n         * @memberof OuterMessage\n         * @interface ISS2C_BaseNotify\n         * @property {number|null} [RpcId] SS2C_BaseNotify RpcId\n         * @property {Long|null} [ActorId] SS2C_BaseNotify ActorId\n         * @property {string|null} [data] SS2C_BaseNotify data\n         */\n\n        /**\n         * Constructs a new SS2C_BaseNotify.\n         * @memberof OuterMessage\n         * @classdesc Represents a SS2C_BaseNotify.\n         * @implements ISS2C_BaseNotify\n         * @constructor\n         * @param {OuterMessage.ISS2C_BaseNotify=} [p] Properties to set\n         */\n        function SS2C_BaseNotify(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * SS2C_BaseNotify RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.SS2C_BaseNotify\n         * @instance\n         */\n        SS2C_BaseNotify.prototype.RpcId = 0;\n\n        /**\n         * SS2C_BaseNotify ActorId.\n         * @member {Long} ActorId\n         * @memberof OuterMessage.SS2C_BaseNotify\n         * @instance\n         */\n        SS2C_BaseNotify.prototype.ActorId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n        /**\n         * SS2C_BaseNotify data.\n         * @member {string} data\n         * @memberof OuterMessage.SS2C_BaseNotify\n         * @instance\n         */\n        SS2C_BaseNotify.prototype.data = \"\";\n\n        /**\n         * Creates a new SS2C_BaseNotify instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.SS2C_BaseNotify\n         * @static\n         * @param {OuterMessage.ISS2C_BaseNotify=} [properties] Properties to set\n         * @returns {OuterMessage.SS2C_BaseNotify} SS2C_BaseNotify instance\n         */\n        SS2C_BaseNotify.create = function create(properties) {\n            return new SS2C_BaseNotify(properties);\n        };\n\n        /**\n         * Encodes the specified SS2C_BaseNotify message. Does not implicitly {@link OuterMessage.SS2C_BaseNotify.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.SS2C_BaseNotify\n         * @static\n         * @param {OuterMessage.ISS2C_BaseNotify} m SS2C_BaseNotify message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SS2C_BaseNotify.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ActorId != null && Object.hasOwnProperty.call(m, \"ActorId\"))\n                w.uint32(744).int64(m.ActorId);\n            if (m.data != null && Object.hasOwnProperty.call(m, \"data\"))\n                w.uint32(754).string(m.data);\n            return w;\n        };\n\n        /**\n         * Decodes a SS2C_BaseNotify message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.SS2C_BaseNotify\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.SS2C_BaseNotify} SS2C_BaseNotify\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SS2C_BaseNotify.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.SS2C_BaseNotify();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 93:\n                        m.ActorId = r.int64();\n                        break;\n                    case 94:\n                        m.data = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return SS2C_BaseNotify;\n    })();\n\n    OuterMessage.C2G_Heartbeat = (function () {\n\n        /**\n         * Properties of a C2G_Heartbeat.\n         * @memberof OuterMessage\n         * @interface IC2G_Heartbeat\n         * @property {number|null} [RpcId] C2G_Heartbeat RpcId\n         */\n\n        /**\n         * Constructs a new C2G_Heartbeat.\n         * @memberof OuterMessage\n         * @classdesc Represents a C2G_Heartbeat.\n         * @implements IC2G_Heartbeat\n         * @constructor\n         * @param {OuterMessage.IC2G_Heartbeat=} [p] Properties to set\n         */\n        function C2G_Heartbeat(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * C2G_Heartbeat RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.C2G_Heartbeat\n         * @instance\n         */\n        C2G_Heartbeat.prototype.RpcId = 0;\n\n        /**\n         * Creates a new C2G_Heartbeat instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.C2G_Heartbeat\n         * @static\n         * @param {OuterMessage.IC2G_Heartbeat=} [properties] Properties to set\n         * @returns {OuterMessage.C2G_Heartbeat} C2G_Heartbeat instance\n         */\n        C2G_Heartbeat.create = function create(properties) {\n            return new C2G_Heartbeat(properties);\n        };\n\n        /**\n         * Encodes the specified C2G_Heartbeat message. Does not implicitly {@link OuterMessage.C2G_Heartbeat.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.C2G_Heartbeat\n         * @static\n         * @param {OuterMessage.IC2G_Heartbeat} m C2G_Heartbeat message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_Heartbeat.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            return w;\n        };\n\n        /**\n         * Decodes a C2G_Heartbeat message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.C2G_Heartbeat\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.C2G_Heartbeat} C2G_Heartbeat\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_Heartbeat.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.C2G_Heartbeat();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return C2G_Heartbeat;\n    })();\n\n    OuterMessage.G2C_Heartbeat = (function () {\n\n        /**\n         * Properties of a G2C_Heartbeat.\n         * @memberof OuterMessage\n         * @interface IG2C_Heartbeat\n         * @property {number|null} [RpcId] G2C_Heartbeat RpcId\n         * @property {number|null} [ServerTime] G2C_Heartbeat ServerTime\n         */\n\n        /**\n         * Constructs a new G2C_Heartbeat.\n         * @memberof OuterMessage\n         * @classdesc Represents a G2C_Heartbeat.\n         * @implements IG2C_Heartbeat\n         * @constructor\n         * @param {OuterMessage.IG2C_Heartbeat=} [p] Properties to set\n         */\n        function G2C_Heartbeat(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * G2C_Heartbeat RpcId.\n         * @member {number} RpcId\n         * @memberof OuterMessage.G2C_Heartbeat\n         * @instance\n         */\n        G2C_Heartbeat.prototype.RpcId = 0;\n\n        /**\n         * G2C_Heartbeat ServerTime.\n         * @member {number} ServerTime\n         * @memberof OuterMessage.G2C_Heartbeat\n         * @instance\n         */\n        G2C_Heartbeat.prototype.ServerTime = 0;\n\n        /**\n         * Creates a new G2C_Heartbeat instance using the specified properties.\n         * @function create\n         * @memberof OuterMessage.G2C_Heartbeat\n         * @static\n         * @param {OuterMessage.IG2C_Heartbeat=} [properties] Properties to set\n         * @returns {OuterMessage.G2C_Heartbeat} G2C_Heartbeat instance\n         */\n        G2C_Heartbeat.create = function create(properties) {\n            return new G2C_Heartbeat(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_Heartbeat message. Does not implicitly {@link OuterMessage.G2C_Heartbeat.verify|verify} messages.\n         * @function encode\n         * @memberof OuterMessage.G2C_Heartbeat\n         * @static\n         * @param {OuterMessage.IG2C_Heartbeat} m G2C_Heartbeat message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_Heartbeat.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.RpcId != null && Object.hasOwnProperty.call(m, \"RpcId\"))\n                w.uint32(720).int32(m.RpcId);\n            if (m.ServerTime != null && Object.hasOwnProperty.call(m, \"ServerTime\"))\n                w.uint32(728).int32(m.ServerTime);\n            return w;\n        };\n\n        /**\n         * Decodes a G2C_Heartbeat message from the specified reader or buffer.\n         * @function decode\n         * @memberof OuterMessage.G2C_Heartbeat\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {OuterMessage.G2C_Heartbeat} G2C_Heartbeat\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_Heartbeat.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.OuterMessage.G2C_Heartbeat();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 90:\n                        m.RpcId = r.int32();\n                        break;\n                    case 91:\n                        m.ServerTime = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return G2C_Heartbeat;\n    })();\n\n    return OuterMessage;\n})();\n\nmodule.exports = $root;\n"]}