{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\BottomBar\\BottomBarBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport BetChangedMessage from \"./BetChangedMessage\";\nimport { SpinType } from \"../SpinType\";\nimport SlotGameStage from \"../GameStage/SlotGameStage\";\nimport { SlotGameStageStatus } from \"../GameStage/SlotGameStageStatus\";\n\nimport { BottomBarSpinStaus } from \"./BottomBarSpinStaus\";\nimport SpinStatusStrategy from \"../SpinStatusStrategy\";\nimport SpinStatusStrategyNormal from \"../SpinStatusStrategyNormal\";\nimport SlotGameStageBase from \"../GameStage/SlotGameStageBase\";\nimport FguiFullScreenBase from \"../../../fairygui-component/lib/FguiFullScreenBase\";\nimport { MogafaNumberField } from \"../../../fairygui-component/lib/extensions/MogafaNumberField\";\nimport { ButtonLongTouch } from \"../../../fairygui-component/lib/ButtonLongTouch\";\nimport { Utils } from \"../../../utils/lib/Utils\";\nimport { AppConst } from \"../../../../@slotsmaster/ui-common/lib/AppConst\";\nimport SoundMgr from \"../../../utils/lib/SoundMgr\";\nimport { SpinResultsGameMode } from \"../../../../spin-result/SpinResultsGameMode\";\nimport SpinResultsFreeTrigger from \"../../../../spin-result/SpinResultsFreeTrigger\";\n\n\n\n\nconst BottomBarEvent = {\n    SPIN_CLICK: \"BottomBarSpinClick\",\n    CARD_CLICK: \"BottomBarCardClick\",\n    CHALLENGE_CLICK: \"BottomBarChallengeClick\",\n    AUTO_SPIN: \"BottomBarAutoSpin\",\n    FAST_CLICK: \"BottomBarFastClick\",\n    BET_CHANGED: \"BottomBarBetChanged\",\n    COIN_CHANGED: \"BottombarCoinChanged\",\n};\n\nexport default abstract class BottomBarBase extends FguiFullScreenBase {\n    //#region 组件名称\n    protected get challengeButtonName(): string {\n        return \"challenge\";\n    }\n    protected get cardButtonName(): string {\n        return \"card\";\n    }\n    protected get maxBetButtonName(): string {\n        return \"maxBet\";\n    }\n    protected get fastButtonName(): string {\n        return \"fast\";\n    }\n    protected get spinButtonName(): string {\n        return \"spin\";\n    }\n    protected get autoSpinComponent(): string {\n        return \"autoSpin\";\n    }\n    protected get autoSpinButtonName(): string {\n        return \"spin.autoSpin.auto\";\n    }\n    protected get spin100ButtonName(): string {\n        return \"spin.autoSpin.spin100\";\n    }\n    protected get spin50ButtonName(): string {\n        return \"spin.autoSpin.spin50\";\n    }\n    protected get spin15ButtonName(): string {\n        return \"spin.autoSpin.spin15\";\n    }\n    protected get freeSpinCountName(): string {\n        return \"spin.freeSpinsCount\";\n    }\n    protected get autoSpinCountName(): string {\n        return \"spin.autoStopCount\";\n    }\n    protected get infinityName(): string {\n        return \"spin.infinity\";\n    }\n    protected get winCoinsName(): string {\n        return \"winCoins\";\n    }\n    protected get coinsName(): string {\n        return \"winCoins.coins\";\n    }\n    protected get twinkleName(): string {\n        return \"winCoins.twinkle\";\n    }\n    protected get totalBetName(): string {\n        return \"totalBet\";\n    }\n    protected get betName(): string {\n        return \"totalBet.bet\";\n    }\n    protected get increaseBetName(): string {\n        return \"totalBet.increaseBet\";\n    }\n    protected get decreaseBetName(): string {\n        return \"totalBet.decreaseBet\";\n    }\n    protected get spinStatusControllerName(): string {\n        return \"spin.spinStatus\";\n    }\n\n    protected get spinUserGold(): string {\n        return null;\n    }\n\n    protected get exitButtonName(): string {\n        return null;\n    }\n\n    protected get helpButtonName(): string {\n        return null;\n    }\n\n    protected get SoundButtonName(): string {\n        return null;\n    }\n\n    //#endregion 组件名称\n    public _spinType: SpinType = SpinType.Spin;\n    private _nextGameMode: SpinResultsGameMode = SpinResultsGameMode.Normal; //#region 组件\n    protected bottomBar: fgui.GComponent;\n    protected challengeButton: fgui.GButton;\n    protected cardButton: fgui.GButton;\n    protected decreaseBetButton: fgui.GButton;\n    protected increaseBetButton: fgui.GButton;\n    protected betNumber: fgui.GTextField;\n    protected winCoin: MogafaNumberField;\n    protected maxBetButton: fgui.GButton;\n    protected fastButton: fgui.GButton;\n    protected spinButton: fgui.GButton;\n    protected autoSpinButton: fgui.GButton;\n    protected spin100Button: fgui.GButton;\n    protected spin50Button: fgui.GButton;\n    protected spin15Button: fgui.GButton;\n    protected freeSpinCountField: fgui.GTextField;\n    protected autoSpinCountField: fgui.GTextField;\n    protected UserGold: MogafaNumberField;\n    protected infinity: fgui.GGraph;\n    private twinkle: fgui.GLoader;\n    protected ExitButton: fgui.GButton;\n    protected HelpButton: fgui.GButton;\n    protected SoundButton: fgui.GButton;\n    //#endregion\n\n    private _autoSpinCount: string;\n    private _freeSpinCount: string;\n    private _game: SlotGameStage;\n    private _isFast: boolean = false;\n    private _bets: number[] = [];\n    private _bet: number = 0;\n    protected _prevWinCoins: number = 0;\n    protected _winCoins: number;\n    private _coins: number;\n    private _coinsChangeTime: number = 1;\n    private _gameStatus: SlotGameStageStatus = SlotGameStageStatus.Ready;\n    private _currentGameType: SpinResultsGameMode;\n    private _freeGameTrigger: SpinResultsFreeTrigger;\n    private _spinStatusStrategy: SpinStatusStrategy = new SpinStatusStrategyNormal();\n    private _buttonLongTouch: ButtonLongTouch = null;\n    private _totalAutoSpinTimes: number = 0;\n    private _originTimes: number = 0;\n    private _totalLineCount: number = 0;\n    protected spinStatus: BottomBarSpinStaus;\n    protected _freeModeFinished: boolean = false;\n    private _isAutoSpin: boolean = false;\n    public isJackpot: boolean = false;\n    //* 金币文本\n    private _coinLabel: fgui.GTextField;\n    //* coin LltyuNumberField\n    private _coinField: MogafaNumberField;\n    //* 金币增长动画所需时间\n    private _coinIncreaseTime: number = 1.5;\n\n    public get isAutoSpin(): boolean {\n        return this._isAutoSpin;\n    }\n\n    public set isAutoSpin(value: boolean) {\n        this._isAutoSpin = value;\n    }\n\n    //#region 属性\n    public get spinType(): SpinType {\n        return this._spinType;\n    }\n    public set spinType(value: SpinType) {\n        this._spinType = value;\n        switch (value) {\n            case SpinType.AutoSpin:\n                this.setControllerProperty(this.spinStatusControllerName, 2);\n                break;\n            case SpinType.FreeSpin:\n                this.setControllerProperty(this.spinStatusControllerName, 3);\n                break;\n            case SpinType.Respin:\n                this.setControllerProperty(this.spinStatusControllerName, 1);\n                break;\n            case SpinType.Spin:\n                this.setControllerProperty(this.spinStatusControllerName, 0);\n                break;\n        }\n    }\n\n    public get totalLineCount(): number {\n        return this._totalLineCount;\n    }\n\n    public set totalLineCount(data: number) {\n        this._totalLineCount = data;\n    }\n\n    private get coinsChangeTime(): number {\n        return this._coinsChangeTime;\n    }\n    private set coinsChangeTime(changeTime: number) {\n        this._coinsChangeTime = changeTime;\n    }\n    public get winCoins(): number {\n        return this._winCoins;\n    }\n    public set winCoins(value: number) {\n        this._winCoins = value;\n        //* respin中不对金币进行改变\n        if (SlotGameStageBase.spinResults && SlotGameStageBase.spinResults.gameMode === SpinResultsGameMode.Respin) {\n            return;\n        }\n        if (value > 0) {\n            this.winCoin.play(this._prevWinCoins, value, this.coinsChangeTime, this.coinPlayCallback.bind(this));\n            this.emitCoinChanged();\n        } else {\n            this.getChild(this.coinsName).asTextField.text = Utils.formatNumberToInt(0, 0);\n        }\n        //* 当前游戏模式处于特殊模式下记录上一次的金币数，方便在展示金币增长时不用从0开始\n        if (this.currentGameMode !== SpinResultsGameMode.Normal) {\n            this._prevWinCoins = value;\n        } else {\n            this._prevWinCoins = 0;\n        }\n    }\n\n    get coins(): number {\n        return this._coins;\n    }\n    set coins(value: number) {\n        if (value != null && this._coins != value) {\n            this._coins = value;\n            if (this._coinsChangeTime) {\n                this.coinIncreaseAnime(value.toString());\n            }\n            //* 若没有增长时间，则直接赋值\n            else {\n                this._coinLabel.text = Utils.formatNumberToInt(value, 0);\n            }\n        }\n    }\n\n    public coinPlayCallback(): void {\n        this.offCoinChanged();\n    }\n    public get freeSpinCount(): string {\n        return this._freeSpinCount;\n    }\n    public set freeSpinCount(value: string) {\n        this._freeSpinCount = value;\n    }\n    public get autoSpinCount(): string {\n        return this._autoSpinCount;\n    }\n    public set autoSpinCount(value: string) {\n        this._autoSpinCount = value;\n    }\n    public get game(): SlotGameStage {\n        return this._game;\n    }\n    public set game(value: SlotGameStage) {\n        if (this._game) {\n            this._game.offStatusChanged(this.statusChanged, this);\n        }\n        this._game = value;\n        if (this._game) {\n            this._game.onStatusChanged(this.statusChanged, this);\n        }\n    }\n    public get isFast(): boolean {\n        return this._isFast;\n    }\n    protected set isFastInternal(value: boolean) {\n        this._isFast = value;\n    }\n    public get isMinBet(): boolean {\n        if (!this._bets || this._bets.length == 0) {\n            return true;\n        }\n        return this._bet == this._bets[0];\n    }\n    public get isMaxBet(): boolean {\n        if (!this._bets || this._bets.length == 0) {\n            return true;\n        }\n        return this._bet == this._bets[this._bets.length - 1];\n    }\n    protected get gameStatus(): SlotGameStageStatus {\n        return this._gameStatus;\n    }\n    protected set gameStatus(value: SlotGameStageStatus) {\n        this._gameStatus = value;\n    }\n    public get bet(): number {\n        return this._bet;\n    }\n    public set bet(value: number) {\n        this._bet = value;\n\n        this.betNumber.text = Utils.numToCountingNnit(this.bet);\n\n        if (this._totalLineCount) {\n            this.betNumber.text = Utils.numToCountingNnit(this.bet * this._totalLineCount);\n        }\n\n    }\n    public set bets(bets: number[]) {\n        this._bets = bets;\n\n        if (AppConst.enterRoomData && AppConst.enterRoomData.betScores) {\n            this._bets = AppConst.enterRoomData.betScores\n            this._totalLineCount = AppConst.enterRoomData.totalLineCount > 50 ? 50 : AppConst.enterRoomData.totalLineCount\n        }\n\n        if (!this._bets) {\n            this._bets = [];\n            this._bet = 0;\n            this.node.dispatchEvent(new BetChangedMessage(this._bet, this.isMinBet, this.isMaxBet));\n            return;\n        }\n        this._bets = this._bets.sort((a, b) => a - b);\n        let bet = this._bets.find((b) => this._bet == b);\n        if (!bet) {\n            this.bet = this._bets[0];\n            this.changeBetButtonsEnable(true, false);\n            this.node.dispatchEvent(new BetChangedMessage(this._bet, this.isMinBet, this.isMaxBet));\n        }\n    }\n    public get bets(): number[] {\n        if (!this._bets) {\n            this._bets = [];\n        }\n        return this._bets;\n    }\n    public get nextGameMode(): SpinResultsGameMode {\n        return this._nextGameMode;\n    }\n    public set nextGameMode(value: SpinResultsGameMode) {\n        this._nextGameMode = value;\n    }\n    public get currentGameMode(): SpinResultsGameMode {\n        return this._currentGameType;\n    }\n    public set currentGameMode(value: SpinResultsGameMode) {\n        this._currentGameType = value;\n    }\n    public get freeGameTrigger(): SpinResultsFreeTrigger {\n        return this._freeGameTrigger;\n    }\n    public set freeGameTrigger(value: SpinResultsFreeTrigger) {\n        this._freeGameTrigger = value;\n    }\n    public get spinStatusStrategy(): SpinStatusStrategy {\n        return this._spinStatusStrategy;\n    }\n    public set spinStatusStrategy(value: SpinStatusStrategy) {\n        this._spinStatusStrategy = value;\n    }\n    /**\n     * 自动spin时的延时时间，可在子类复写\n     */\n    public get holdUpTime() {\n        return 1;\n    }\n    public get freeModeFinished(): boolean {\n        return this._freeModeFinished;\n    }\n\n    public set freeModeFinished(value: boolean) {\n        this._freeModeFinished = value;\n    }\n    //#endregion\n\n    protected createChildComponents() {\n        super.createChildComponents();\n        this.bottomBar = this.fguiComponent;\n        let component: fgui.GComponent;\n        // if (this.challengeButtonName) {\n        //     component = this.getChild(this.challengeButtonName);\n        //     if (component) {\n        //         this.challengeButton = component.asButton;\n        //         this.challengeButton.onClick(this.onChallengeClick.bind(this));\n        //     } else {\n        //         cc.error(`成就按钮组件${this.challengeButtonName}不存在`);\n        //     }\n        // }\n        if (this.cardButtonName) {\n            component = this.getChild(this.cardButtonName);\n            if (component) {\n                this.cardButton = component.asButton;\n                this.cardButton.onClick(this.onCardClick.bind(this));\n            } else {\n                cc.error(`卡组按钮组件${this.cardButtonName}不存在`);\n            }\n        }\n\n        if (this.maxBetButtonName) {\n            component = this.getChild(this.maxBetButtonName);\n            if (component) {\n                this.maxBetButton = component.asButton;\n                this.maxBetButton.onClick(this.onMaxBetClick.bind(this));\n            } else {\n                cc.error(`最大下注按钮组件${this.maxBetButtonName}不存在`);\n            }\n        }\n        if (this.fastButtonName) {\n            this.fastButton = this.getChild(this.fastButtonName).asButton;\n            this.fastButton.onClick(this.onFastClickInternal.bind(this));\n        }\n        if (this.spinButtonName) {\n            this.spinButton = this.getChild(this.spinButtonName).asButton;\n            this.spinButton.node.on(\"touch-long\", this.onSpinLongTouchInternal.bind(this));\n            this.spinButton.node.on(\"touch-short\", this.onSpinClickInternal.bind(this));\n            this.spinButton.node.on(\"touch-double\", this.onSpinDoubleTouchInternal.bind(this))\n            this._buttonLongTouch = this.addFguiComponent(ButtonLongTouch);\n        }\n        if (this.autoSpinButtonName) {\n            this.autoSpinButton = this.getChild(this.autoSpinButtonName).asButton;\n            this.autoSpinButton.onClick(this.onAutoSpinClickInternal.bind(this));\n        }\n        if (this.spin100ButtonName) {\n            this.spin100Button = this.getChild(this.spin100ButtonName).asButton;\n            this.spin100Button.onClick(this.onSpin100ClickInternal.bind(this));\n        }\n        if (this.spin50ButtonName) {\n            this.spin50Button = this.getChild(this.spin50ButtonName).asButton;\n            this.spin50Button.onClick(this.onSpin50ClickInternal.bind(this));\n        }\n        if (this.spin15ButtonName) {\n            this.spin15Button = this.getChild(this.spin15ButtonName).asButton;\n            this.spin15Button.onClick(this.onSpin15ClickInternal.bind(this));\n        }\n        if (this.betName) {\n            this.betNumber = this.getChild(this.betName).asTextField;\n        }\n        if (this.increaseBetName) {\n            this.increaseBetButton = this.getChild(this.increaseBetName).asButton;\n            this.increaseBetButton.onClick(this.onIncreaseBetClick.bind(this));\n        }\n        if (this.decreaseBetName) {\n            this.decreaseBetButton = this.getChild(this.decreaseBetName).asButton;\n            this.decreaseBetButton.onClick(this.onDecreaseBetClick.bind(this));\n        }\n        if (this.twinkleName) {\n            this.twinkle = this.getChild(this.twinkleName).asLoader;\n            this.twinkle.visible = false;\n        }\n        if (this.coinsName) {\n            this.winCoin = this.getChild(this.coinsName).asMogafaNumberField();\n        }\n        if (this.autoSpinCountName) {\n            component = this.getChild(this.autoSpinCountName);\n            if (component) {\n                this.autoSpinCountField = component.asTextField;\n            } else {\n                cc.error(`auto spin 计数组件${this.autoSpinCountName}不存在`);\n            }\n        }\n        if (this.infinityName) {\n            component = this.getChild(this.infinityName);\n            if (component) {\n                this.infinity = component.asGraph;\n            } else {\n                cc.error(`auto spin 计数组件${this.infinityName}不存在`);\n            }\n        }\n        if (this.freeSpinCountName) {\n            component = this.getChild(this.freeSpinCountName);\n            if (component) {\n                this.freeSpinCountField = component.asTextField;\n            } else {\n                cc.error(`free spin 计数组件${this.freeSpinCountName}不存在`);\n            }\n        }\n        if (this.spinUserGold) {\n            component = this.getChild(this.spinUserGold);\n            if (component) {\n                this._coinLabel = component.asTextField;\n                this._coinField = this._coinLabel.asMogafaNumberField();\n            } else {\n                cc.error(`free spin 计数组件${this.spinUserGold}不存在`);\n            }\n        }\n\n        if (this.exitButtonName) {\n            component = this.getChild(this.exitButtonName);\n            if (component) {\n                this.ExitButton = component.asButton;\n                this.ExitButton.onClick(this.onExitClick.bind(this));\n            } else {\n                cc.error(`free spin 计数组件${this.spinUserGold}不存在`);\n            }\n        }\n\n        if (this.helpButtonName) {\n            component = this.getChild(this.helpButtonName);\n            if (component) {\n                this.HelpButton = component.asButton;\n                this.HelpButton.onClick(this.onHelpClick.bind(this));\n            } else {\n                cc.error(`free spin 计数组件${this.spinUserGold}不存在`);\n            }\n        }\n\n        if (this.SoundButtonName) {\n            component = this.getChild(this.SoundButtonName);\n            if (component) {\n                this.SoundButton = component.asButton;\n                this.SoundButton.onClick(this.onSoundClick.bind(this));\n            } else {\n                cc.error(`free spin 计数组件${this.spinUserGold}不存在`);\n            }\n        }\n    }\n\n    allChildCreated() {\n        super.allChildCreated();\n        if (this.spinButtonName) {\n            this._buttonLongTouch.registerTouchLong(this.spinButton.node);\n        }\n        this.addAllButtonMusic(this.fguiComponent);\n    }\n\n    /**\n     * 添加所有按钮的音效\n     * @param fguiComponent\n     */\n    private addAllButtonMusic(fguiComponent: fgui.GComponent): void {\n        fguiComponent._children.map((item) => {\n            if (item.node.name === \"GComponent\") {\n                this.addAllButtonMusic(item.asCom);\n            }\n            if (item.node.name === \"GButton\") {\n                item.node.on(\"touchstart\", this.onButtonClickMusic.bind(this));\n            }\n        });\n    }\n\n    /**\n     * 设置用户金币\n     * @param userCoins\n     * @param changeTime\n     */\n    public setUserCoins(userCoins: number, changeTime: number = 1): void {\n        if (this.spinUserGold) {\n            console.log(\"setUserCoins\")\n            this.coinsChangeTime = changeTime;\n            this.coins = userCoins;\n        }\n    }\n\n    public addMaxBet(bet: number[]): void {\n        let bets = this._bets.concat();\n        let isChange = false;\n        if (bet.length > 0) {\n            for (let i = 0; i < bet.length; i++) {\n                for (let j = 0; j < bets.length; j++) {\n                    if (bet[i] == bets[j]) {\n                        cc.error(\"等级增加的抵注跟升级前存在相同抵注::\", bet[i]);\n                        break;\n                    }\n                    if (j == bets.length - 1 && bet[i] > bets[j]) {\n                        this._bets.push(bet[i]);\n                        isChange = true;\n                    }\n                }\n            }\n            if (isChange) {\n                this.changeBetButtonsEnable(this.isMinBet, this.isMaxBet);\n            }\n            console.log(\"addMaxBetaddMaxBetaddMaxBet::\", this._bets);\n        }\n    }\n\n    protected increaseBet(): number {\n        console.log(\"increaseBet\")\n        let index: number = this._bets.findIndex((b) => b == this._bet);\n        index++;\n        if (index >= this._bets.length) {\n            index = this._bets.length - 1;\n        }\n        this.bet = this._bets[index];\n        this.betChangedInternal();\n        return this._bet;\n    }\n    protected decreaseBet(): number {\n        console.log(\"decreaseBet\")\n        let index: number = this._bets.findIndex((b) => b == this._bet);\n        index--;\n        if (index < 0) {\n            index = 0;\n        }\n        this.bet = this._bets[index];\n\n        this.betChangedInternal();\n        return this._bet;\n    }\n    protected maxBet(): number {\n        let bet = this._bet;\n        let betChanged: boolean = false;\n        if (!this._bets || this._bets.length == 0) {\n            bet = 0;\n        } else {\n            bet = this._bets[this._bets.length - 1];\n        }\n        if (bet != this._bet) {\n            betChanged = true;\n        }\n        this.bet = bet;\n        if (betChanged) {\n            this.betChangedInternal();\n        }\n        return this._bet;\n    }\n\n    /**\n     * 金币增长动画\n     * @param coinLabel\n     */\n    private coinIncreaseAnime(coinLabel: string) {\n        let coins = 0;\n        if (this._coinLabel.text == \"\") {\n            coins = 0;\n        } else {\n            coins = Utils.strToNumber(this._coinLabel.text);\n        }\n        this._coinLabel.text = Utils.formatNumberToInt(coinLabel);\n\n        this._coinField.play(coins, parseInt(coinLabel), this._coinIncreaseTime);\n    }\n    public cancelCoinIncreaseAnime(): void {\n        this._coinField.cancelPlay();\n    }\n\n    protected enableAllButtons(): void {\n        if (this.cardButton) {\n            this.cardButton.enabled = true;\n            this.cardButton.touchable = true;\n        }\n        if (this.fastButton) {\n            this.fastButton.enabled = true;\n            this.fastButton.touchable = true;\n        }\n        if (this.autoSpinButton) {\n            this.autoSpinButton.enabled = true;\n            this.autoSpinButton.touchable = true;\n        }\n        this.changeBetButtonsEnable(this.isMinBet, this.isMaxBet);\n    }\n    protected disableAllButtonsButSpin(): void {\n        if (this.cardButton) {\n            this.cardButton.enabled = false;\n            this.cardButton.touchable = false;\n        }\n        if (this.fastButton) {\n            this.fastButton.enabled = false;\n            this.fastButton.touchable = false;\n        }\n        if (this.decreaseBetButton) {\n            this.decreaseBetButton.enabled = false;\n            this.decreaseBetButton.touchable = false;\n        }\n        if (this.increaseBetButton) {\n            this.increaseBetButton.enabled = false;\n            this.increaseBetButton.touchable = false;\n        }\n        if (this.maxBetButton) {\n            this.maxBetButton.enabled = false;\n            this.maxBetButton.touchable = false;\n        }\n        if (this.autoSpinButton) {\n            this.autoSpinButton.enabled = false;\n            this.autoSpinButton.touchable = false;\n        }\n    }\n    protected stopSpinClick(): void { }\n    protected _autoTimes: number = 1;\n    private statusChanged(status: SlotGameStageStatus): void {\n        console.log(\"BottomBarBase statusChanged=======\" + status)\n        this.gameStatus = status;\n        let spinStatus = this._spinStatusStrategy.getSpinStatus(\n            status,\n            this._spinType,\n            this._freeGameTrigger,\n            this._nextGameMode\n        );\n        this.spinStatus = spinStatus.spinStatus;\n        this.spinButton.enabled = spinStatus.enable;\n        this.changeBetButtonsEnable(this.isMinBet, this.isMaxBet);\n        if (this._spinType != SpinType.Spin) {\n            this.disableAllButtonsButSpin();\n        }\n        if (this._nextGameMode == SpinResultsGameMode.Normal && status == SlotGameStageStatus.Ready) {\n            this.enableAllButtons();\n        } else {\n            this.disableAllButtonsButSpin();\n        }\n        //* 自动次数大于0且spin状态为自动状态且与游戏状态为ready状态时，自动状态继续\n        if (\n            this._autoTimes >= 0 &&\n            this.spinStatus === BottomBarSpinStaus.StopAutoSpin &&\n            status === SlotGameStageStatus.Ready\n        ) {\n            //* 因为棋盘在停止后因转动策略的影响会多次触发statusChanged，若每次进来都执行延时操作，\n            //* 会在栈中放进多个onSpinClickInternal函数，导致多次触发，因此需要在每次延时执行时，\n            //* 清空掉上一次的延时操作，最终只执行一次延时\n            this.unscheduleAllCallbacks();\n            this.scheduleOnce(() => {\n                this.onSpinClickInternal(this._autoTimes, true, this._originTimes);\n            }, this.holdUpTime);\n        }\n        this.setControllerProperty(this.spinStatusControllerName, spinStatus.spinStatus);\n    }\n\n    protected changeBetButtonsEnable(isMin: boolean, isMax: boolean): void {\n        if (this.decreaseBetButton && this.increaseBetButton) {\n            this.decreaseBetButton.enabled = !isMin;\n            this.decreaseBetButton.touchable = !isMin;\n            this.increaseBetButton.enabled = !isMax;\n            this.increaseBetButton.touchable = !isMax;\n        }\n\n        if (this.maxBetButton) {\n            this.maxBetButton.enabled = !isMax;\n            this.maxBetButton.touchable = !isMax;\n        }\n    }\n    protected betChangedInternal(): void {\n        //this.betNumber.text = Utils.numToCountingNnit(this.bet);\n        this.changeBetButtonsEnable(this.isMinBet, this.isMaxBet);\n        this.node.emit(BottomBarEvent.BET_CHANGED, {\n            bet: this.bet,\n            isMin: this.isMinBet,\n            isMax: this.isMaxBet,\n        });\n        this.node.emit(\"BET_CHANGE\", this.bet);\n    }\n    public changeFreeSpinCount(finished: number, total: number): void {\n        if (this.freeSpinCountField) {\n            this._originTimes = total;\n            this.freeSpinCountField.text = `${total - finished}/${total}`;\n        }\n    }\n    public changeAutoSpinCount(finished: number): void {\n        if (this.autoSpinCountField) {\n            this.autoSpinCountField.text = finished.toString();\n        }\n    }\n    protected onDecreaseBetClick(): void {\n        this.decreaseBet();\n    }\n    protected onIncreaseBetClick(): void {\n        this.increaseBet();\n    }\n    protected onMaxBetClick(): void {\n        this.maxBet();\n    }\n    protected onExitClick(): void {\n        console.log(\"返回大厅：：：：：：：：：：：：：：：：：：：：：：：：：：\")\n        if (cc.sys.isBrowser) {\n            window.close()\n        } else {\n            cc.director.loadScene(\"Login\");\n        }\n    }\n    protected onHelpClick(): void {\n        this.node.emit(\"showPayTable\");\n    }\n    protected onSoundClick(): void {\n        console.log(\"onSoundClick\")\n        if (SoundMgr.getInstance().getSoundStatus()) {\n            SoundMgr.getInstance().setSoundStatus(\"close\");\n        } else {\n            SoundMgr.getInstance().setSoundStatus(\"open\");\n        }\n\n        if (SoundMgr.getInstance().getEffectStatus()) {\n            SoundMgr.getInstance().setEffectStatus(\"close\");\n        } else {\n            SoundMgr.getInstance().setEffectStatus(\"open\");\n        }\n    }\n    protected onFastClickInternal(): void {\n        this.isFastInternal = !this.isFast;\n        this.fastButton.controllers[1].selectedIndex = this.isFast ? 1 : 0;\n        this.node.emit(BottomBarEvent.FAST_CLICK, this.isFast);\n    }\n    protected onAutoSpinClickInternal(): void {\n        if (this.autoSpinCountField) {\n            this.autoSpinCountField.text = \"\";\n        }\n        this.spinType = SpinType.AutoSpin;\n        this.spinStatus = BottomBarSpinStaus.StopAutoSpin;\n        this.onSpinClickInternal(9999999, true, -1);\n    }\n    protected onSpin100ClickInternal(): void {\n        this.autoSpinCountField.text = \"100\";\n        this.spinType = SpinType.AutoSpin;\n        this.spinStatus = BottomBarSpinStaus.StopAutoSpin;\n        this.onSpinClickInternal(100, true);\n    }\n    protected onSpin50ClickInternal(): void {\n        this.autoSpinCountField.text = \"50\";\n        this.spinType = SpinType.AutoSpin;\n        this.spinStatus = BottomBarSpinStaus.StopAutoSpin;\n        this.onSpinClickInternal(50, true);\n    }\n    protected onSpin15ClickInternal(): void {\n        this.autoSpinCountField.text = \"15\";\n        this.spinType = SpinType.AutoSpin;\n        this.spinStatus = BottomBarSpinStaus.StopAutoSpin;\n        this.onSpinClickInternal(15, true);\n    }\n    /**\n     * 长按按钮事件处理\n     */\n    protected onSpinLongTouchInternal(): void {\n        //* spinType不为autoSpinMenu和autoSpin时，设置spinType为autoSpinMenu\n        console.log(\"onSpinLongTouchInternal\")\n        if (this.spinType === SpinType.Spin && this.spinStatus === BottomBarSpinStaus.Ready) {\n            this.setControllerProperty(this.spinStatusControllerName, BottomBarSpinStaus.AutoSpinMenu);\n        }\n    }\n\n    protected onSpinDoubleTouchInternal(): void {\n        console.log(\"onSpinDoubleTouchInternal\")\n    }\n\n    /**\n     * spin按钮点击事件内部处理\n     * @param times spin次数\n     * @param isAuto 是否为自动\n     * @param originTimes 初始值，用于自动spin选自动时，无穷大的判断\n     */\n    protected onSpinClickInternal(times: number = 1, isAuto: boolean = false, originTimes?: number): void {\n        console.log(\"onSpinClickInternal\")\n        this.isAutoSpin = isAuto;\n        if (!this.spinButton.enabled) {\n            return;\n        }\n        if (\n            !this._freeModeFinished &&\n            this._nextGameMode == SpinResultsGameMode.Normal &&\n            (this._currentGameType == SpinResultsGameMode.FreeSpin ||\n                this._currentGameType == SpinResultsGameMode.Respin)\n        ) {\n            return;\n        }\n        if (this._freeModeFinished) {\n            this._freeModeFinished = false;\n        }\n        if (!this.game.checkCoinEnough()) {\n            return;\n        }\n        if (!originTimes) {\n            this._originTimes = times;\n        } else {\n            this._originTimes = originTimes;\n        }\n        if (this.infinity) {\n            if (this._originTimes < 0) {\n                this.infinity.node.active = true;\n            } else {\n                this.infinity.node.active = false;\n            }\n        }\n\n        this._autoTimes = times;\n        //* 记录总共自动转的次数，用于手动停止时\n        if (!this._totalAutoSpinTimes) {\n            this._totalAutoSpinTimes = times;\n        } else {\n            //* 手动停止autoSpin\n            if (this._totalAutoSpinTimes !== times && !isAuto) {\n                this.spinType = SpinType.Spin;\n                this.spinStatus = BottomBarSpinStaus.Ready;\n                this.game.spinClick(times);\n                this.node.emit(BottomBarEvent.SPIN_CLICK);\n                //* 手动停止后归零\n                this._totalAutoSpinTimes = 0;\n                return;\n            }\n        }\n        if (this.gameStatus == SlotGameStageStatus.Ready) {\n            this.disableAllButtonsButSpin();\n        } else {\n            this.stopSpinClick();\n        }\n        //* autoSpin状态\n        if (this.spinStatus === BottomBarSpinStaus.StopAutoSpin) {\n            if (this._autoTimes === 0) {\n                this.spinType = SpinType.Spin;\n                this.spinStatus = BottomBarSpinStaus.Ready;\n                this.node.emit(BottomBarEvent.SPIN_CLICK);\n                //* autoSpin自动结束后归零\n                this._totalAutoSpinTimes = 0;\n                this.enableAllButtons();\n                return;\n            } else {\n                this._autoTimes--;\n                if (this._totalAutoSpinTimes >= 0 && this._originTimes > -1) {\n                    this.changeAutoSpinCount(this._autoTimes);\n                }\n                this.game.spinClick(times);\n                return;\n            }\n        }\n        this.game.spinClick(times);\n        this.node.emit(BottomBarEvent.SPIN_CLICK);\n    }\n    /**\n     * 继续autospin\n     */\n    protected continueAutoSpin(): void {\n        this.onSpinClickInternal(this._autoTimes, true, this._originTimes);\n    }\n    /**\n     * 设置win框金币\n     * @param winCoins\n     * @param changeTime\n     */\n    public setWinCoins(winCoins: number, changeTime: number = 1) {\n        this.coinsChangeTime = changeTime;\n        this.winCoins = winCoins;\n    }\n    public onSpinClick(listener: Function, target?: any): void {\n        this.node.on(BottomBarEvent.SPIN_CLICK, listener, target);\n    }\n    public offSpinClick(listener: Function, target?: any): void {\n        this.node.off(BottomBarEvent.SPIN_CLICK, listener, target);\n    }\n    public clearSpinClick(): void {\n        this.node.off(BottomBarEvent.SPIN_CLICK);\n    }\n    public onChallengeClick(listener: Function, target?: any): void {\n        this.node.on(BottomBarEvent.CHALLENGE_CLICK, listener, target);\n    }\n    public offChallengeClick(listener: Function, target?: any): void {\n        this.node.off(BottomBarEvent.CHALLENGE_CLICK, listener, target);\n    }\n    public clearChallengeClick(): void {\n        this.node.off(BottomBarEvent.CHALLENGE_CLICK);\n    }\n    public onCardClick(listener: Function, target?: any): void {\n        this.node.emit(BottomBarEvent.CARD_CLICK);\n    }\n    public onCardClickEvent(listener: Function, target?: any): void {\n        this.node.on(BottomBarEvent.CARD_CLICK, listener, target);\n    }\n\n    public onAutoSpin(listener: Function, target?: any): void {\n        this.node.on(BottomBarEvent.AUTO_SPIN, listener, target);\n    }\n    public offAutoSpin(listener: Function, target?: any): void {\n        this.node.off(BottomBarEvent.AUTO_SPIN, listener, target);\n    }\n    public clearAutoSpin(): void {\n        this.node.off(BottomBarEvent.AUTO_SPIN);\n    }\n    public onFastClick(listener: Function, target?: any): void {\n        this.node.on(BottomBarEvent.FAST_CLICK, listener, target);\n    }\n    public offFastClick(listener: Function, target?: any): void {\n        this.node.off(BottomBarEvent.FAST_CLICK, listener, target);\n    }\n    public clearFastClick(): void {\n        this.node.off(BottomBarEvent.FAST_CLICK);\n    }\n    public onBetChanged(listener: Function, target?: any): void {\n        this.node.on(BottomBarEvent.BET_CHANGED, listener, target);\n    }\n    public offBetChanged(listener: Function, target?: any): void {\n        this.node.off(BottomBarEvent.BET_CHANGED, listener, target);\n    }\n    public clearBetChanged(): void {\n        this.node.off(BottomBarEvent.BET_CHANGED);\n    }\n    /**\n     * 金币变化事件\n     * 可以在此方法中绑定处理金币变化的事件和音效\n     * @param listener\n     * @param target\n     */\n    public onCoinChanged(listener: Function, target?: any): void {\n        this.node.on(BottomBarEvent.COIN_CHANGED, listener, target);\n    }\n    public emitCoinChanged(target?: any) {\n        this.node.emit(BottomBarEvent.COIN_CHANGED, target);\n    }\n    public offCoinChanged(): void {\n        this.node.off(BottomBarEvent.COIN_CHANGED);\n    }\n    /**\n     * 按钮点击播放音效事件\n     * 子类重载此方法给按钮绑定音乐\n     */\n    public onButtonClickMusic(): void { }\n}\n"]}