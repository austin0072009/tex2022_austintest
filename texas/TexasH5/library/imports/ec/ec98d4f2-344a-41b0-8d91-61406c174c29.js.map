{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\SymbolBoard\\CellBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport SymbolBase from \"./SymbolBase\";\nimport IWaitingResultsStrategy from \"../IWaitingResultsStrategy\";\nimport { SymbolBoardConst } from \"./SymbolBoardConst\";\nimport ReelBase from \"./ReelBase\";\nimport { MogafaSlots } from \"../MogafaSlots\";\nimport { SymbolBoardStatus } from \"./SymbolBoardStatus\";\n\nimport FguiComponentBase from \"../../../fairygui-component/lib/FguiComponentBase\";\nimport SpinResultCell from \"../../../../spin-result/SpinResultsCell\";\n\nexport default abstract class CellBase extends FguiComponentBase implements MogafaSlots {\n    private _mogafaId: string;\n    /**\n     * 关卡编码\n     */\n    private _stageCode: string;\n    /**\n     * 所属格子\n     */\n    private _reel: ReelBase;\n    /**\n     * 获取关卡编码\n     */\n    get stageCode(): string {\n        return this._stageCode;\n    }\n    /**\n     * 设置关卡编码\n     */\n    set stageCode(value: string) {\n        this._stageCode = value;\n        for (let i = 0; i < this._chesses.length; i++) {\n            this._chesses[i].stageCode = value;\n        }\n    }\n    /**\n     * 获取列\n     */\n    get reel(): ReelBase {\n        return this._reel;\n    }\n    /**\n     * 设置列\n     */\n    set reel(value: ReelBase) {\n        this._reel = value;\n    }\n    /**\n     * Board status of symbol base\n     * 棋盘状态\n     */\n    private _boardStatus: SymbolBoardStatus;\n    get boardStatus(): SymbolBoardStatus {\n        return this._boardStatus;\n    }\n    set boardStatus(value: SymbolBoardStatus) {\n        this._boardStatus = value;\n        for (let i = 0; i < this._chesses.length; i++) {\n            this._chesses[i].boardStatus = value;\n        }\n        this.status = value;\n    }\n\n    /**\n     * Status  of symbol base\n     * 棋子状态\n     */\n    private _status: SymbolBoardStatus;\n    get status(): SymbolBoardStatus {\n        return this._status;\n    }\n    set status(value: SymbolBoardStatus) {\n        this._status = value;\n        for (let i = 0; i < this._chesses.length; i++) {\n            this._chesses[i].status = value;\n        }\n    }\n    protected abstract get nothingCode(): number;\n    protected abstract get maxCode(): number;\n\n    public abstract get resultChess(): SymbolBase;\n    protected get assetsComponentName(): string {\n        return \"\";\n    }\n    private _mask: fgui.GObject;\n    private _index: number;\n    private _isFinal: boolean;\n    protected _chesses: SymbolBase[] = [];\n    private _finalCode: number;\n    private _finalAssets: number;\n    private _mockCodes: number[];\n    private _mockCodeReplaced: boolean = true;\n    private _stopped: boolean = true;\n    private _moveEnd: boolean = false;\n    private isFirstMove: boolean = true;\n    private _isHoldWin: boolean = false;\n    private holdWinShowing: boolean = false;\n    private fixed: boolean = false;\n    private nextFixed: boolean = false;\n    protected assets: number;\n    protected assetsComponent: fgui.GTextField;\n    private specialEffectShowing: boolean = false;\n    private _mustBeFixed: boolean;\n    public set code(code: number) {\n        if (code == null) {\n            return;\n        }\n        if (code >= SymbolBoardConst.FINAL_CODE_OFFSET) {\n            this._isFinal = true;\n            code = code - SymbolBoardConst.FINAL_CODE_OFFSET;\n            //console.log(\"final code====\",code)\n        } else {\n            this._isFinal = false;\n        }\n        this.resultChess.code = code;\n        this.finalCode = code;\n    }\n    public get code(): number {\n        return this.resultChess.code;\n    }\n    public get index(): number {\n        return this._index;\n    }\n    public set index(value: number) {\n        this._index = value;\n    }\n    public get isFinal(): boolean {\n        return this._isFinal;\n    }\n    public get finalCode(): number {\n        return this._finalCode;\n    }\n    public set finalCode(value: number) {\n        this._finalCode = value;\n    }\n    public get finalAssets(): number {\n        return this._finalAssets;\n    }\n    public set finalAssets(value: number) {\n        this._finalAssets = value;\n        this.resultChess.assets = value;\n    }\n    public get mockCodes(): number[] {\n        return this._mockCodes;\n    }\n    public set mockCodes(value: number[]) {\n        this._mockCodes = value;\n        if (!this._mockCodes) {\n            this._mockCodes = [];\n        }\n    }\n    public get isHoldWin(): boolean {\n        return this._isHoldWin;\n    }\n    public set isHoldWin(value: boolean) {\n        this._isHoldWin = value;\n    }\n    public get mogafaId(): string {\n        return this._mogafaId;\n    }\n    public set mogafaId(value: string) {\n        this._mogafaId = value;\n    }\n    public set spinResult(value: SpinResultCell) {\n        this.finalCode = value.code;\n        this.assets = value.assets;\n        this.nextFixed = value.fixed;\n        this.isHoldWin = value.isHoldWin;\n    }\n    public get mustBeFixed(): boolean {\n        return this._mustBeFixed;\n    }\n    public set mustBeFixed(value: boolean) {\n        this._mustBeFixed = value;\n    }\n    protected get theFinalBottomSymbolY(): number {\n        return 0;\n    }\n    get moveEnd(): boolean {\n        return this._moveEnd;\n    }\n    public stopShow(): void {\n        this.resultChess.stopShow();\n    }\n    public startMove(): void {\n        this.resultChess.startMove();\n    }\n    /**\n     * 替换假冒棋子\n     *\n     * @param code 替换的棋子，可以不传\n     */\n    public replaceMockCodeInternal(code?: number): void {\n        if (code != null) {\n            this.replaceMockCode(code);\n            return;\n        }\n        if (!this.mockCodes || this.mockCodes.length === 0 || !this.isFinal) {\n            cc.warn(`没有可替换的棋子或者现在不能换棋子`);\n            return;\n        }\n        const replaceCode = this.mockCodes.pop();\n        this.replaceMockCode(replaceCode);\n    }\n    protected replaceMockCode(replaceCode: number): void {\n        this.replaceMockCodeSimple(replaceCode);\n    }\n    private replaceMockCodeSimple(replaceCode: number) {\n        cc.log(`这是默认的棋子替换方法`);\n        this.resultChess.code = replaceCode;\n        this.notifyMockCodeReplaced();\n    }\n    protected notifyMockCodeReplaced(): void {\n        this._mockCodeReplaced = true;\n        const parent = (this.parent as unknown) as ReelBase;\n        if (parent) {\n            parent.receiveMockCodeReplaced(parent.index, this.index);\n        }\n    }\n    public get mockCodeReplaced(): boolean {\n        return this._mockCodeReplaced;\n    }\n    private _waitingResultsStrategy: IWaitingResultsStrategy;\n\n    public get waitingResultsStrategy(): IWaitingResultsStrategy {\n        return this._waitingResultsStrategy;\n    }\n    public set waitingResultsStrategy(waitingResultsStrategy: IWaitingResultsStrategy) {\n        this._waitingResultsStrategy = waitingResultsStrategy;\n    }\n    protected createChildComponents() {\n        super.createChildComponents();\n        this._mask = this.fguiComponent.mask;\n        this.fguiComponent.setMask(null, false);\n        if (this.assetsComponentName) {\n            this.assetsComponent = this.getChild(this.assetsComponentName).asTextField;\n        }\n    }\n    public addFguiComponent<T extends FguiComponentBase>(type: { new(): T }, changeSize: boolean = true): T {\n        let child = super.addFguiComponent(type, changeSize);\n        if (child instanceof SymbolBase) {\n            const symbol = (child as unknown) as SymbolBase;\n            symbol.stageCode = this.stageCode;\n            symbol.cell = this;\n            symbol.assets = this.assets;\n            this._chesses.push(symbol);\n            symbol.index = this._chesses.length - 1;\n        }\n        return child;\n    }\n    private firstMove() {\n        for (let i = 0; i < this._chesses.length; i++) {\n            if (!this._chesses[i].fguiComponent.visible) {\n                this._chesses[i].fguiComponent.visible = true;\n            }\n        }\n        this.fguiComponent.setMask(this._mask, false);\n    }\n    public moveY(step: number, code?: number): boolean {\n        if (this._moveEnd) {\n            return false;\n        }\n        if (code >= SymbolBoardConst.FINAL_CODE_OFFSET) {\n            this.code = code;\n        }\n        this._chesses = this._chesses.sort((c1, c2) => {\n            return c1.fguiY - c2.fguiY;\n        });\n\n        const theTopChess = this._chesses[0];\n        const theBottomChess = this._chesses[this._chesses.length - 1];\n        if (this.fixed) {\n            if (code >= SymbolBoardConst.FINAL_CODE_OFFSET) {\n                theBottomChess.code = code;\n            }\n        } else {\n            if (this.isFirstMove) {\n                this.firstMove();\n                this.isFirstMove = false;\n            }\n            if (!this.specialEffectShowing) {\n                this.specialEffectShowing = this.specialEffectShowInSpin();\n            }\n        }\n\n        if (this.isFinal) {\n            if (theBottomChess.fguiY + step >= this.theFinalBottomSymbolY) {\n                step = this.theFinalBottomSymbolY - theBottomChess.fguiY;\n                this._moveEnd = true;\n                //if (theTopChess.isFinal) {\n                theBottomChess.code = this.finalCode;\n                //}\n            }\n        }\n        if (this.fixed) {\n            step = 0;\n        }\n        for (let i = 0; i < this._chesses.length; i++) {\n            this._chesses[i].fguiY += step;\n        }\n        if (this._moveEnd) {\n            theTopChess.fguiComponent.visible = false;\n            this.specialEffectOffInSpin();\n            this.specialEffectShowing = false;\n            this.status = SymbolBoardStatus.Stopped;\n            this.fguiComponent.setMask(null, false);\n            if (this.assetsComponent && this.finalAssets !== -1) {\n                this.assetsComponent.text = this.assetsDisplay();\n                this.assetsComponent.visible = true;\n            }\n            theBottomChess.assets = this.finalAssets;\n            this.isFirstMove = true;\n            this.fixed = this.nextFixed;\n            this.nextFixed = false;\n            this.holdWinOff();\n            this.notifyCellStopped();\n            return false;\n        }\n        if (this.fixed) {\n            return true;\n        }\n        let useCode: boolean = false;\n        if (step > 0) {\n            if (theBottomChess.fguiY >= this.fguiHeight) {\n                theBottomChess.fguiY = theTopChess.fguiY - theTopChess.fguiHeight;\n                if (code || code == 0) {\n                    useCode = true;\n                    theBottomChess.code = code;\n                }\n            }\n        }\n        if (step < 0) {\n            if (theTopChess.fguiY <= 0) {\n                theTopChess.fguiY = theBottomChess.fguiY + theBottomChess.fguiHeight;\n                if (code || code == 0) {\n                    useCode = true;\n                    theTopChess.code = code;\n                }\n            }\n        }\n        if (useCode) {\n            this._chesses = this._chesses.sort((c1, c2) => {\n                return c1.fguiY - c2.fguiY;\n            });\n        }\n        return useCode;\n    }\n    protected assetsDisplay(): string {\n        if (this.assets === -1) {\n            return \"\";\n        }\n        return this.assets.toString();\n    }\n    public prizeShow(position: number): void {\n        this.resultChess.startPrizeShow(position);\n    }\n    public receivePrizeShowCompleted(position: number): void {\n        const parent = (this.parent as any) as ReelBase;\n        if (parent) {\n            parent.receivePrizeShowCompleted(position);\n        }\n    }\n    notifyCellStopped(): void {\n        this.stopShow();\n        const parent = (this.parent as any) as ReelBase;\n        if (parent) {\n            parent.receiveCellStopped(this._index);\n        } //\n    }\n    public reset(): void {\n        this.unscheduleAllCallbacks();\n        for (let i = 0; i < this._chesses.length; i++) {\n            this._chesses[i].reset();\n        }\n        this.specialEffectShowing = false;\n        this._isFinal = false;\n        this._mockCodes = [];\n        this._mockCodeReplaced = true;\n        this._moveEnd = false;\n        this.isFirstMove = true;\n        this.holdWinShowing = false;\n\n        if (this.assetsComponent) {\n            this.assetsComponent.text = this.assetsDisplay();\n        }\n    }\n    //#region 设置控制值\n    public setSymbolControllerProperty(controllerName: string, code: number): void {\n        this.resultChess.setControllerProperty(controllerName, code);\n    }\n    //#endregion\n    public playSpineByConfig(configName: string, callback?: Function): void {\n        this.resultChess.playSpineByConfig(configName, callback);\n    }\n    /**\n     * 转动过程中格子特殊效果展示，游戏关卡重载实现\n     * 比如水果777，在这里实现respin中普通转动的特效（需要判断只在respin中才展示这个特效）\n     * @returns 如果为true表示效果生效\n     */\n    protected specialEffectShowInSpin(): boolean {\n        return false;\n    }\n    /**\n     * 转动过程中的格子特殊效果停止，游戏关卡重载实现\n     */\n    protected specialEffectOffInSpin(): void { }\n\n    public holdWin(): void {\n        if (!this.holdWinShowing) {\n            this.holdWinShowing = true;\n            this.holdWinShow();\n        }\n    }\n    public unholdWin(): void {\n        this.holdWinOff();\n        this.holdWinShowing = false;\n    }\n    /**\n     * 单格格子holdWin展示，游戏关卡重载实现\n     * 比如水果777，在这里实现holdWin特效，在普通转和respin中需要区分（holdWin特效不一样）\n     */\n    protected holdWinShow(): void { }\n    /**\n     * 单格格子holdWin展示关闭，游戏关卡重载实现\n     */\n    protected holdWinOff(): void { }\n    prizeChipCellSettle(position: number, symbolCode: number, assets: number, callback: Function): void {\n        if (callback) {\n            callback();\n        }\n    }\n    notifyShowDoubleAssets(): void { }\n    doubleChessShow(): void {\n        for (let i = 0; i < this._chesses.length; i++) {\n            this._chesses[i].doubleChessShow();\n        }\n    }\n    initAssetShow(): void {\n        if (this.assetsComponent && this.finalAssets !== -1) {\n            this.assetsComponent.visible = true;\n            this.assetsComponent.text = this.finalAssets.toString();\n        }\n    }\n    public fixedCellShow(): void {\n        this.resultChess.fixedCellShow();\n    }\n    public fixedCellHide(): void {\n        this.resultChess.fixedCellHide();\n    }\n\n    public setAssetAfterChessboardStopped(): void { }\n}\n"]}