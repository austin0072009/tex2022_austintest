{"version":3,"sources":["assets\\Script\\Encrypt\\encryptjs.js"],"names":["name","definition","exports","module","define","amd","petal","encryptjs","rl","version","init","console","log","Algo","require","encrypt","plaintext","password","nBits","blockSize","String","utf8Encode","nBytes","pwBytes","Array","i","isNaN","charCodeAt","key","cipher","keyExpansion","concat","slice","counterBlock","nonce","Date","getTime","nonceMs","nonceSec","Math","floor","nonceRnd","random","ctrTxt","fromCharCode","keySchedule","blockCount","ceil","length","ciphertxt","b","c","cipherCntr","blockLength","cipherChar","join","ciphertext","base64Encode","decrypt","base64Decode","nBlocks","ct","plaintxt","plaintxtByte","utf8Decode","_keyStr","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","_utf8_encode","charAt","replace","indexOf","_utf8_decode","string","utftext","n","c1","c2","c3","getTextEncryptAndSaveToTextFile","filePath","Error","question","answer","cipherText","close","getTextEncryptAndSaveToJSONFile","writeCipherTextToJSON","EncryptedText","file","obj","options","callback","spaces","str","JSON","stringify","replacer","err","prototype","unescape","encodeURIComponent","decodeURIComponent","escape","e","btoa","Buffer","toString","atob"],"mappings":"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","sourceRoot":"/","sourcesContent":["/*!\r\n * Copyright (c) 2015 Sri Harsha <sri.harsha@zenq.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n(function (name, definition) {\r\n    if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\r\n        module.exports = definition();\r\n    } else if (typeof define === 'function' && typeof define.amd === 'object') {\r\n        define(definition);\r\n    } else if (typeof define === 'function' && typeof define.petal === 'object') {\r\n        define(name, [], definition);\r\n    } else {\r\n        this[name] = definition();\r\n    }\r\n})('encryptjs', function (encryptjs) {\r\n    var rl;\r\n    //Electron doesnt support stdin, so dont setup CLI if its not available.\r\n\r\n    encryptjs = { version: '1.0.0' };\r\n\r\n    //Right before exporting the validator object, pass each of the builtins\r\n    //through extend() so that their first argument is coerced to a string\r\n    encryptjs.init = function () {\r\n        console.log(\"--------------------Applying Encryption Algorithm------------------ \");\r\n    };\r\n    'use strict';\r\n    if (typeof module != 'undefined' && module.exports) var Algo = require('./algo'); // CommonJS (Node.js)\r\n\r\n    encryptjs.encrypt = function (plaintext, password, nBits) {\r\n        var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4)\r\n        if (!(nBits == 128 || nBits == 192 || nBits == 256)) return ''; // standard allows 128/192/256 bit keys\r\n        plaintext = String(plaintext).utf8Encode();\r\n        password = String(password).utf8Encode();\r\n\r\n        // use AES itself to encrypt password to get cipher key (using plain password as source for key\r\n        // expansion) - gives us well encrypted key (though hashed key might be preferred for prod'n use)\r\n        var nBytes = nBits / 8;  // no bytes in key (16/24/32)\r\n        var pwBytes = new Array(nBytes);\r\n        for (var i = 0; i < nBytes; i++) {  // use 1st 16/24/32 chars of password for key\r\n            pwBytes[i] = isNaN(password.charCodeAt(i)) ? 0 : password.charCodeAt(i);\r\n        }\r\n        var key = Algo.cipher(pwBytes, Algo.keyExpansion(pwBytes)); // gives us 16-byte key\r\n        key = key.concat(key.slice(0, nBytes - 16));  // expand key to 16/24/32 bytes long\r\n\r\n        // initialise 1st 8 bytes of counter block with nonce (NIST SP800-38A �B.2): [0-1] = millisec,\r\n        // [2-3] = random, [4-7] = seconds, together giving full sub-millisec uniqueness up to Feb 2106\r\n        var counterBlock = new Array(blockSize);\r\n\r\n        var nonce = (new Date()).getTime();  // timestamp: milliseconds since 1-Jan-1970\r\n        var nonceMs = nonce % 1000;\r\n        var nonceSec = Math.floor(nonce / 1000);\r\n        var nonceRnd = Math.floor(Math.random() * 0xffff);\r\n        // for debugging: nonce = nonceMs = nonceSec = nonceRnd = 0;\r\n\r\n        for (var i = 0; i < 2; i++) counterBlock[i] = (nonceMs >>> i * 8) & 0xff;\r\n        for (var i = 0; i < 2; i++) counterBlock[i + 2] = (nonceRnd >>> i * 8) & 0xff;\r\n        for (var i = 0; i < 4; i++) counterBlock[i + 4] = (nonceSec >>> i * 8) & 0xff;\r\n\r\n        // and convert it to a string to go on the front of the ciphertext\r\n        var ctrTxt = '';\r\n        for (var i = 0; i < 8; i++) ctrTxt += String.fromCharCode(counterBlock[i]);\r\n\r\n        // generate key schedule - an expansion of the key into distinct Key Rounds for each round\r\n        var keySchedule = Algo.keyExpansion(key);\r\n\r\n        var blockCount = Math.ceil(plaintext.length / blockSize);\r\n        var ciphertxt = new Array(blockCount);  // ciphertext as array of strings\r\n\r\n        for (var b = 0; b < blockCount; b++) {\r\n            // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\r\n            // done in two stages for 32-bit ops: using two words allows us to go past 2^32 blocks (68GB)\r\n            for (var c = 0; c < 4; c++) counterBlock[15 - c] = (b >>> c * 8) & 0xff;\r\n            for (var c = 0; c < 4; c++) counterBlock[15 - c - 4] = (b / 0x100000000 >>> c * 8);\r\n\r\n            var cipherCntr = Algo.cipher(counterBlock, keySchedule);  // -- encrypt counter block --\r\n\r\n            // block size is reduced on final block\r\n            var blockLength = b < blockCount - 1 ? blockSize : (plaintext.length - 1) % blockSize + 1;\r\n            var cipherChar = new Array(blockLength);\r\n\r\n            for (var i = 0; i < blockLength; i++) {  // -- xor plaintext with ciphered counter char-by-char --\r\n                cipherChar[i] = cipherCntr[i] ^ plaintext.charCodeAt(b * blockSize + i);\r\n                cipherChar[i] = String.fromCharCode(cipherChar[i]);\r\n            }\r\n            ciphertxt[b] = cipherChar.join('');\r\n        }\r\n\r\n        // use Array.join() for better performance than repeated string appends\r\n        var ciphertext = ctrTxt + ciphertxt.join('');\r\n        // ciphertext = ciphertext.base64Encode();\r\n        ciphertext = encryptjs.base64Encode(ciphertext);\r\n\r\n        return ciphertext;\r\n    };\r\n\r\n    encryptjs.decrypt = function (ciphertext, password, nBits) {\r\n        var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\r\n        if (!(nBits == 128 || nBits == 192 || nBits == 256)) return ''; // standard allows 128/192/256 bit keys\r\n        // ciphertext = String(ciphertext).base64Decode();\r\n        ciphertext = encryptjs.base64Decode(String(ciphertext));\r\n        password = String(password).utf8Encode();\r\n\r\n        // use AES to encrypt password (mirroring encrypt routine)\r\n        var nBytes = nBits / 8;  // no bytes in key\r\n        var pwBytes = new Array(nBytes);\r\n        for (var i = 0; i < nBytes; i++) {\r\n            pwBytes[i] = isNaN(password.charCodeAt(i)) ? 0 : password.charCodeAt(i);\r\n        }\r\n        var key = Algo.cipher(pwBytes, Algo.keyExpansion(pwBytes));\r\n        key = key.concat(key.slice(0, nBytes - 16));  // expand key to 16/24/32 bytes long\r\n\r\n        // recover nonce from 1st 8 bytes of ciphertext\r\n        var counterBlock = new Array(8);\r\n        var ctrTxt = ciphertext.slice(0, 8);\r\n        for (var i = 0; i < 8; i++) counterBlock[i] = ctrTxt.charCodeAt(i);\r\n\r\n        // generate key schedule\r\n        var keySchedule = Algo.keyExpansion(key);\r\n\r\n        // separate ciphertext into blocks (skipping past initial 8 bytes)\r\n        var nBlocks = Math.ceil((ciphertext.length - 8) / blockSize);\r\n        var ct = new Array(nBlocks);\r\n        for (var b = 0; b < nBlocks; b++) ct[b] = ciphertext.slice(8 + b * blockSize, 8 + b * blockSize + blockSize);\r\n        ciphertext = ct;  // ciphertext is now array of block-length strings\r\n\r\n        // plaintext will get generated block-by-block into array of block-length strings\r\n        var plaintxt = new Array(ciphertext.length);\r\n\r\n        for (var b = 0; b < nBlocks; b++) {\r\n            // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\r\n            for (var c = 0; c < 4; c++) counterBlock[15 - c] = ((b) >>> c * 8) & 0xff;\r\n            for (var c = 0; c < 4; c++) counterBlock[15 - c - 4] = (((b + 1) / 0x100000000 - 1) >>> c * 8) & 0xff;\r\n\r\n            var cipherCntr = Algo.cipher(counterBlock, keySchedule);  // encrypt counter block\r\n\r\n            var plaintxtByte = new Array(ciphertext[b].length);\r\n            for (var i = 0; i < ciphertext[b].length; i++) {\r\n                // -- xor plaintxt with ciphered counter byte-by-byte --\r\n                plaintxtByte[i] = cipherCntr[i] ^ ciphertext[b].charCodeAt(i);\r\n                plaintxtByte[i] = String.fromCharCode(plaintxtByte[i]);\r\n            }\r\n            plaintxt[b] = plaintxtByte.join('');\r\n        }\r\n\r\n        // join array of blocks into single plaintext string\r\n        var plaintext = plaintxt.join('');\r\n        plaintext = plaintext.utf8Decode();  // decode from UTF8 back to Unicode multi-byte chars\r\n\r\n        return plaintext;\r\n    };\r\n\r\n    //----------------base64 start---------------\r\n    var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n    encryptjs.base64Encode = function (input) {\r\n        var output = \"\";\r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = encryptjs._utf8_encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output +\r\n                _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\r\n                _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    }\r\n    encryptjs.base64Decode = function (input) {\r\n        var output = \"\";\r\n        var chr1, chr2, chr3;\r\n        var enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n        while (i < input.length) {\r\n            enc1 = _keyStr.indexOf(input.charAt(i++));\r\n            enc2 = _keyStr.indexOf(input.charAt(i++));\r\n            enc3 = _keyStr.indexOf(input.charAt(i++));\r\n            enc4 = _keyStr.indexOf(input.charAt(i++));\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n            output = output + String.fromCharCode(chr1);\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n        }\r\n        output = encryptjs._utf8_decode(output);\r\n        return output;\r\n    }\r\n\r\n    // private method for UTF-8 encoding\r\n    encryptjs._utf8_encode = function (string) {\r\n        string = string.replace(/\\r\\n/g, \"\\n\");\r\n        var utftext = \"\";\r\n        for (var n = 0; n < string.length; n++) {\r\n            var c = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            } else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            } else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n\r\n        }\r\n        return utftext;\r\n    }\r\n\r\n    // private method for UTF-8 decoding\r\n    encryptjs._utf8_decode = function (utftext) {\r\n        var string = \"\";\r\n        var i = 0;\r\n        var c = 0;\r\n        var c1 = 0;\r\n        var c2 = 0;\r\n        while (i < utftext.length) {\r\n            c = utftext.charCodeAt(i);\r\n            if (c < 128) {\r\n                string += String.fromCharCode(c);\r\n                i++;\r\n            } else if ((c > 191) && (c < 224)) {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            } else {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                c3 = utftext.charCodeAt(i + 2);\r\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return string;\r\n    }\r\n    //------------------base64 end----------------\r\n\r\n    encryptjs.getTextEncryptAndSaveToTextFile = function (filePath, password, nBits) {\r\n        if (!rl) throw Error(\"Command line not supported on this platform\");\r\n        rl.question(\"Enter the text to be encrypted: \", function (answer) {\r\n            // TODO: Log the answer in a database\r\n            console.log(\"'\" + answer + \"' This text will be encrypted and stored in a text file 'encrypted.txt'\");\r\n            var cipherText = encryptjs.encrypt(answer, password, nBits);\r\n            rl.close();\r\n        });\r\n    };\r\n\r\n    encryptjs.getTextEncryptAndSaveToJSONFile = function (filePath, password, nBits) {\r\n        if (!rl) throw Error(\"Command line not supported on this platform\");\r\n        rl.question(\"Enter the text to be encrypted: \", function (answer) {\r\n            // TODO: Log the answer in a database\r\n            console.log(\"'\" + answer + \"' This text will be encrypted and stored in a text file 'encrypted.txt'\");\r\n            var cipherText = encryptjs.encrypt(answer, password, nBits);\r\n            encryptjs.writeCipherTextToJSON(filePath, { EncryptedText: cipherText }, function () {\r\n                console.log(\"'encryptedText.JSON' File created in your local directory, if not present refresh your project\");\r\n            });\r\n            rl.close();\r\n        });\r\n    };\r\n\r\n    encryptjs.writeCipherTextToJSON = function (file, obj, options, callback) {\r\n        if (callback == null) {\r\n            callback = options;\r\n            options = {}\r\n        }\r\n\r\n        var spaces = typeof options === 'object' && options !== null\r\n            ? 'spaces' in options\r\n                ? options.spaces : this.spaces\r\n            : this.spaces;\r\n\r\n        var str = '';\r\n        try {\r\n            str = JSON.stringify(obj, options ? options.replacer : null, spaces) + '\\n'\r\n        } catch (err) {\r\n            if (callback) return callback(err, null)\r\n        }\r\n    };\r\n\r\n    if (typeof String.prototype.utf8Encode == 'undefined') {\r\n        String.prototype.utf8Encode = function () {\r\n            return unescape(encodeURIComponent(this));\r\n        };\r\n    }\r\n\r\n    if (typeof String.prototype.utf8Decode == 'undefined') {\r\n        String.prototype.utf8Decode = function () {\r\n            try {\r\n                return decodeURIComponent(escape(this));\r\n            } catch (e) {\r\n                return this; // invalid UTF-8? return as-is\r\n            }\r\n        };\r\n    }\r\n\r\n    if (typeof String.prototype.base64Encode == 'undefined') {\r\n        String.prototype.base64Encode = function () {\r\n            if (typeof btoa != 'undefined') return btoa(this); // browser\r\n            if (typeof Buffer != 'undefined') return new Buffer(this, 'utf8').toString('base64'); // Node.js\r\n            throw new Error('No Base64 Encode');\r\n        };\r\n    }\r\n\r\n    if (typeof String.prototype.base64Decode == 'undefined') {\r\n        String.prototype.base64Decode = function () {\r\n            if (typeof atob != 'undefined') return atob(this); // browser\r\n            if (typeof Buffer != 'undefined') return new Buffer(this, 'base64').toString('utf8'); // Node.js\r\n            throw new Error('No Base64 Decode');\r\n        };\r\n    }\r\n\r\n    encryptjs.init();\r\n\r\n    return encryptjs;\r\n\r\n});\r\n"]}