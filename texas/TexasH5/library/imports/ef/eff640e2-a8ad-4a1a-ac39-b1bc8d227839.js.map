{"version":3,"sources":["assets\\Games\\texas\\script\\View\\InstanceGameObjectCache.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class InstanceGameObjectCache {\n    private maxCountDict: Map<string, number>;//string:对象的名字，int:该类对象能够缓存的最大个数。  \n    public maxCount = 50;\n    public itemDict: Map<string, fgui.GObject[]>;\n\n    public constructor() {\n        this.maxCountDict = new Map<string, number>();\n        this.itemDict = new Map<string, fgui.GObject[]>();\n    }\n\n    //设置某一类资源的最大缓存个数\n    public SetGameobjectMaxCount(resName: string, count: number) {\n        if (resName != null) { resName = resName.toLowerCase(); }\n        this.maxCountDict.set(resName, count);\n    }\n\n    public GetGameobjectMaxCount(resName: string): number {\n        if (resName != null) { resName = resName.toLowerCase(); }\n        if (this.maxCountDict.has(resName)) {\n            return this.maxCountDict.get(resName);\n        }\n\n        return this.maxCount;\n    }\n\n    public GetCurCount(resName: string): number {\n        if (resName != null) { resName = resName.toLowerCase(); }\n        let list: fgui.GObject[];\n        list = this.itemDict.get(resName);\n        if (list != null) {\n            return list.length;\n        }\n\n        return 0;\n    }\n\n    //重置最大资源个数为默认值\n    public ResetMaxCount() {\n        this.maxCountDict.clear();\n    }\n\n    //放入一个           \n    public PushItem(item: fgui.GObject, resName: string) {\n        if (item != null) {\n            if (resName != null) {\n                resName = resName.toLowerCase();\n            }\n            else {\n                return;\n            }\n\n            let max = this.maxCountDict.has(resName) ? this.maxCountDict.get(resName) : this.maxCount;\n\n            let list: fgui.GObject[];\n            list = this.itemDict.get(resName);\n            if (list == null) {\n                list = [];\n                this.itemDict.set(resName, list);\n            }\n\n            //防止外部多次push调用时，添加相同的对象\n            if (list.indexOf(item) == -1) {\n                if (list.length < max) {\n                    item.visible = false;\n                    item.node.position = cc.v3(50000, 50000, 0);\n                    list.push(item);\n                }\n                else {\n                    console.log(\"超过缓存容量的直接释放掉\");\n                    item.node.destroy();\n                }\n            }\n\n            item = null;\n        }\n    }\n\n    //推出一个\n    public PopItem(key: string): fgui.GObject {\n        let popItem: fgui.GObject = null;\n        if (key != null) { key = key.toLowerCase(); }\n        let list: fgui.GObject[];\n        list = this.itemDict.get(key);\n        if (list != null && list.length > 0) {\n            popItem = list[list.length - 1];\n            list.pop(); //list.RemoveAt(list.length - 1);\n        }\n\n        if (popItem != null && popItem.visible == false) {\n            popItem.visible = true;\n        }\n\n        return popItem;\n    }\n\n\n\n    //特殊的地方会要求删除已经存在的对象\n    public DestroyExistItem(item: fgui.GObject, resName: string) {\n        if (item == null)\n            return;\n        if (resName != null) { resName = resName.toLowerCase(); }\n        let list: fgui.GObject[];\n        list = this.itemDict.get(resName);\n        if (list != null && list.indexOf(item) >= 0) {\n            list.splice(list.indexOf(item), 1);\n        }\n        console.log(\"3超过缓存容量的直接释放掉\");\n        item.node.destroy();\n    }\n\n\n    public cleanAll() {\n        this.itemDict.forEach((list, key) => {\n            for (var i = 0; i < list.length; i++) {\n                if (list[i] != null)\n                    list[i].node.destroy();// GameObject.DestroyImmediate(list[i]);\n            }\n        });\n        this.maxCountDict.clear();\n    }\n\n    public clearSomeObj() {\n        this.itemDict.forEach((list, key) => {\n            // #if UNITY_ANDROID\n            // int count = Mathf.Min(list.Count / 5 + 1, list.Count);\n            // #else\n            let count = Math.min(list.length / 2 + 1, list.length);\n            // #endif\n            if (count > 0) {\n                count = list.length - count;\n                for (var i = list.length - 1; i >= count; i--) {\n                    if (list[i] != null) {\n                        console.log(\"2超过缓存容量的直接释放掉2\");\n                        list[i].node.destroy(); //GameObject.DestroyImmediate(list[i]);\n                    }\n                    list.splice(i, 1);\n                }\n            }\n\n        });\n    }\n\n    private clearHeroFlag = 0;\n    public clearSomeHeroObj() {\n        if (this.clearHeroFlag++ < 3) {\n            return;\n        }\n        this.clearHeroFlag = 0;\n\n        //hero判断条件为只有一个\n        this.itemDict.forEach((list, key) => {\n            let count = Math.min(list.length / 2 + 1, list.length);\n            if (count == 1) {\n                if (list[0] != null && list[0].name.toLowerCase().indexOf(\"hero\") >= 0)\n                    list[0].node.destroy();// GameObject.DestroyImmediate(list[0]);\n                list = [];\n            }\n        });\n    }\n\n    public contains(key: string): boolean {\n        if (key != null) { key = key.toLowerCase(); }\n        let list: fgui.GObject[];\n        list = this.itemDict.get(key);\n        return list != null && list.length > 0;\n    }\n}"]}