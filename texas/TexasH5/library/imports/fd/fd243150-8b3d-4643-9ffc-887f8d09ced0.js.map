{"version":3,"sources":["assets\\Script\\modules\\@mogafa\\slots\\lib\\PrizeShowStrategy.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import IPrizeShowStrategy from \"./IPrizeShowStrategy\";\nimport IPrizeShowSymbolBoard from \"./IPrizeShowSymbolBoard\";\nimport { PrizeShowStatus } from \"./PrizeShowStatus\";\n\nexport default class PrizeShowStrategy implements IPrizeShowStrategy {\n    private _symbolBoard: IPrizeShowSymbolBoard;\n    private _allLinesShow: boolean = true;\n    public _lineIndex: number = 0;\n    private _canBeShowNextLine: boolean = true;\n    private _matchedLines: number[][] = [];\n    private _cellRewards: { position: number; symbolCode: number; rewards: number; isJackpot: boolean }[] = [];\n    private _cellIndex: number = 0;\n    private _cellSettleCompleted: boolean = true;\n    private _canBeSettleNextCell: boolean = true;\n    /**\n     * 展示开始后多长时间可以点击spin按钮\n     *\n     * 单位：毫秒\n     * @todo 这个做成配置\n     */\n    private _canBeSpinTimeout: number = 500;\n    public get symbolBoard(): IPrizeShowSymbolBoard {\n        return this._symbolBoard;\n    }\n    public set symbolBoard(value: IPrizeShowSymbolBoard) {\n        if (this._symbolBoard) {\n            this._symbolBoard.offPrizeLineShowCompletedOnce(this.lineShowCompletedOnce, this);\n            this._symbolBoard.offCellRewardSettledOnce(this.cellShowCompletedOnce, this);\n        }\n        this._symbolBoard = value;\n        if (this._symbolBoard) {\n            this._symbolBoard.onPrizeLineShowCompletedOnce(this.lineShowCompletedOnce, this);\n            this._symbolBoard.onCellRewardSettledOnce(this.cellShowCompletedOnce, this);\n        }\n    }\n    startSettle(): void {\n        this.processCellRewards();\n        if (this._cellRewards && this._cellRewards.length > 0) {\n            this._cellIndex = 0;\n            this._cellSettleCompleted = false;\n            this.symbolBoard.schedule(this.settling.bind(this), 0);\n        } else {\n            this.notifyAllCellRewardSettleCompleted();\n        }\n    }\n    startShow(): void {\n        console.log(\"startShow\")\n        this._matchedLines = [];\n        this._matchedLines = this.symbolBoard.matchedLines;\n        if (!this._matchedLines) {\n            this._matchedLines = [];\n        }\n\n        if (this._matchedLines && this._matchedLines.length > 0) {\n            this.symbolBoard.schedule(this.showing.bind(this), 0);\n        } else {\n            this.notifyAllCellRewardSettleCompleted();\n        }\n    }\n    private notifyAllCellRewardSettleCompleted(): void {\n        this._cellSettleCompleted = true;\n        this._canBeSettleNextCell = false;\n        this.symbolBoard.receiveAllCellRewardsSettled();\n    }\n    private processCellRewards(): void {\n        let cellRewards: { position: number; symbolCode: number; rewards: number; isJackpot: boolean }[] = [];\n        for (let i = 0; i < this.symbolBoard.chipCellRewards.length; i++) {\n            let reward: { position: number; symbolCode: number; rewards: number; isJackpot: boolean } = Object.assign(\n                { isJackpot: false },\n                this.symbolBoard.chipCellRewards[i]\n            );\n            cellRewards.push(reward);\n        }\n        for (let i = 0; i < this.symbolBoard.jackpotCellRewards.length; i++) {\n            let reward: { position: number; symbolCode: number; rewards: number; isJackpot: boolean } = Object.assign(\n                { isJackpot: true },\n                this.symbolBoard.jackpotCellRewards[i]\n            );\n            cellRewards.push(reward);\n        }\n        cellRewards = cellRewards.sort((a, b) => {\n            return a.position - b.position;\n        });\n        this._cellRewards = cellRewards;\n    }\n    private lineShow(): void {\n        if (this._allLinesShow && this._canBeShowNextLine) {\n            this._canBeShowNextLine = false;\n            if (this.symbolBoard.lineIndex >= 0) {\n                this.symbolBoard.lineIndex = this._lineIndex\n            }\n            this.symbolBoard.prizeLineShow(this.symbolBoard.matchedLines, 1);\n            return;\n        }\n        if (this._canBeShowNextLine) {\n            this._canBeShowNextLine = false;\n\n            if (this._lineIndex >= this.symbolBoard.matchedLines.length) {\n                this._lineIndex = 0;\n            }\n\n            if (this.symbolBoard.matchedLines[this._lineIndex]) {\n                if (this.symbolBoard.lineIndex >= 0) {\n                    this.symbolBoard.lineIndex = this._lineIndex\n                }\n                this.symbolBoard.prizeLineShow([this.symbolBoard.matchedLines[this._lineIndex]], 1);\n            }\n        }\n    }\n    private showing(): void {\n        this.lineShow();\n    }\n    private settling(): void {\n        if (this.symbolBoard.prizeShowStatus != PrizeShowStatus.Showing) {\n            cc.warn(\"只有正在展示状态才能开始展示\");\n            return;\n        }\n        this.cellSettle();\n    }\n    private lineShowCompletedOnce(): void {\n        if (this._allLinesShow) {\n            this._allLinesShow = false;\n        } else {\n            this._lineIndex++;\n        }\n        if (this._lineIndex >= this.symbolBoard.matchedLines.length) {\n            this._lineIndex = 0;\n            this._allLinesShow = true;\n        }\n        this._canBeShowNextLine = true;\n    }\n    private cellSettle(): void {\n        if (!this._cellSettleCompleted && this._canBeSettleNextCell) {\n            this._canBeSettleNextCell = false;\n            const cellReward = this._cellRewards[this._cellIndex];\n            if (cellReward.isJackpot) {\n                this.symbolBoard.prizeJackpotCellSettle(cellReward.position, cellReward.symbolCode, cellReward.rewards);\n                return;\n            }\n            this.symbolBoard.prizeChipCellSettle(cellReward.position, cellReward.symbolCode, cellReward.rewards);\n        }\n    }\n    private cellShowCompletedOnce(): void {\n        this._cellIndex++;\n        if (this._cellIndex >= this._cellRewards.length) {\n            this._cellSettleCompleted = true;\n            this.symbolBoard.unschedule(this.settling.bind(this));\n            this.notifyAllCellRewardSettleCompleted();\n            return;\n        }\n        this._canBeSettleNextCell = true;\n    }\n    reset(): void {\n        this._lineIndex = 0;\n        this._cellIndex = 0;\n        this._matchedLines = [];\n        this._cellRewards = [];\n        this._allLinesShow = true;\n        this._canBeShowNextLine = true;\n        this._canBeSettleNextCell = true;\n        this.symbolBoard.unschedule(this.showing.bind(this));\n        this.symbolBoard.unschedule(this.settling.bind(this));\n    }\n}\n"]}