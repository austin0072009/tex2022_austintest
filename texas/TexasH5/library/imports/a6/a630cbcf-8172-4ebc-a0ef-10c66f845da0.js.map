{"version":3,"sources":["assets\\Games\\texas\\script\\View\\TimeInfoMgrTex.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAA;QAEY,UAAK,GAAU,EAAE,CAAC;IAmC9B,CAAC;uBArCoB,cAAc;IAG/B,sBAAW,0BAAQ;aAAnB;YACI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;gBACxB,IAAI,CAAC,SAAS,GAAG,IAAI,gBAAc,EAAE,CAAC;aACzC;YACD,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAEM,iCAAQ,GAAf,UAAgB,IAAY,EAAE,MAAgB;QAC1C,IAAI,GAAG,GAAa,IAAI,CAAC;QACzB,IAAI,OAAO,GAAG,UAAU,CAAC,GAAG,GAAG;YAC3B,IAAI,MAAM,IAAI,IAAI,EAAE;gBAChB,MAAM,EAAE,CAAC;aACZ;QACL,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzB,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,2CAAkB,GAAzB,UAA0B,KAAU;QAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB;QACI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACpD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;YAEvC,IAAI,OAAO,EAAE;gBACT,YAAY,CAAC,OAAO,CAAC,CAAC;aACzB;SACJ;QACD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;;IApCgB,cAAc;QADlC,OAAO;OACa,cAAc,CAqClC;IAAD,qBAAC;CArCD,AAqCC,IAAA;kBArCoB,cAAc","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TimeInfoMgrTex {\n    private static _instance: TimeInfoMgrTex;\n    private timer: any[] = [];\n    static get instance(): TimeInfoMgrTex {\n        if (this._instance == null) {\n            this._instance = new TimeInfoMgrTex();\n        }\n        return this._instance;\n    }\n\n    public AddTimer(time: number, action: Function): Function {\n        var fun: Function = null;\n        let outtime = setTimeout(fun = () => {\n            if (action != null) {\n                action();\n            }\n        }, time * 1000);\n        this.timer.push(outtime);\n        return fun;\n    }\n\n    public addTimerNoCallback(timer: any) {\n        this.timer.push(timer);\n    }\n\n    public removeTimer() {\n        console.log(\"removeTimer\");\n        for (let index = 0; index < this.timer.length; index++) {\n            let outtime = this.timer[index];\n            console.log(\"removeTimer : \", outtime);\n\n            if (outtime) {\n                clearTimeout(outtime);\n            }\n        }\n        this.timer = [];\n    }\n}\n"]}