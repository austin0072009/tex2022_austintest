{
  "__type__": "cc.TextAsset",
  "_name": "HotfixMessage.pb.d",
  "_objFlags": 0,
  "_native": "",
  "text": "\n/** Namespace HotfixMessage. */\nexport namespace HotfixMessage {\n\n    /** Properties of a C2R_Login. */\n    interface IC2R_Login {\n\n        /** C2R_Login RpcId */\n        RpcId?: (number | null);\n\n        /** C2R_Login Account */\n        Account?: (string | null);\n\n        /** C2R_Login Password */\n        Password?: (string | null);\n    }\n\n    /** Represents a C2R_Login. */\n    class C2R_Login implements IC2R_Login {\n\n        /**\n         * Constructs a new C2R_Login.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IC2R_Login);\n\n        /** C2R_Login RpcId. */\n        public RpcId: number;\n\n        /** C2R_Login Account. */\n        public Account: string;\n\n        /** C2R_Login Password. */\n        public Password: string;\n\n        /**\n         * Creates a new C2R_Login instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns C2R_Login instance\n         */\n        public static create(properties?: HotfixMessage.IC2R_Login): HotfixMessage.C2R_Login;\n\n        /**\n         * Encodes the specified C2R_Login message. Does not implicitly {@link HotfixMessage.C2R_Login.verify|verify} messages.\n         * @param m C2R_Login message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IC2R_Login, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a C2R_Login message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns C2R_Login\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.C2R_Login;\n    }\n\n    /** Properties of a R2C_Login. */\n    interface IR2C_Login {\n\n        /** R2C_Login RpcId */\n        RpcId?: (number | null);\n\n        /** R2C_Login Error */\n        Error?: (number | null);\n\n        /** R2C_Login Message */\n        Message?: (string | null);\n\n        /** R2C_Login Address */\n        Address?: (string | null);\n\n        /** R2C_Login Key */\n        Key?: (string | null);\n\n        /** R2C_Login userid */\n        userid?: (number | null);\n    }\n\n    /** Represents a R2C_Login. */\n    class R2C_Login implements IR2C_Login {\n\n        /**\n         * Constructs a new R2C_Login.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IR2C_Login);\n\n        /** R2C_Login RpcId. */\n        public RpcId: number;\n\n        /** R2C_Login Error. */\n        public Error: number;\n\n        /** R2C_Login Message. */\n        public Message: string;\n\n        /** R2C_Login Address. */\n        public Address: string;\n\n        /** R2C_Login Key. */\n        public Key: string;\n\n        /** R2C_Login userid. */\n        public userid: number;\n\n        /**\n         * Creates a new R2C_Login instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns R2C_Login instance\n         */\n        public static create(properties?: HotfixMessage.IR2C_Login): HotfixMessage.R2C_Login;\n\n        /**\n         * Encodes the specified R2C_Login message. Does not implicitly {@link HotfixMessage.R2C_Login.verify|verify} messages.\n         * @param m R2C_Login message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IR2C_Login, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a R2C_Login message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns R2C_Login\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.R2C_Login;\n    }\n\n    /** Properties of a C2G_LoginGate. */\n    interface IC2G_LoginGate {\n\n        /** C2G_LoginGate RpcId */\n        RpcId?: (number | null);\n\n        /** C2G_LoginGate Key */\n        Key?: (string | null);\n\n        /** C2G_LoginGate userid */\n        userid?: (number | null);\n    }\n\n    /** Represents a C2G_LoginGate. */\n    class C2G_LoginGate implements IC2G_LoginGate {\n\n        /**\n         * Constructs a new C2G_LoginGate.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IC2G_LoginGate);\n\n        /** C2G_LoginGate RpcId. */\n        public RpcId: number;\n\n        /** C2G_LoginGate Key. */\n        public Key: string;\n\n        /** C2G_LoginGate userid. */\n        public userid: number;\n\n        /**\n         * Creates a new C2G_LoginGate instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns C2G_LoginGate instance\n         */\n        public static create(properties?: HotfixMessage.IC2G_LoginGate): HotfixMessage.C2G_LoginGate;\n\n        /**\n         * Encodes the specified C2G_LoginGate message. Does not implicitly {@link HotfixMessage.C2G_LoginGate.verify|verify} messages.\n         * @param m C2G_LoginGate message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IC2G_LoginGate, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a C2G_LoginGate message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns C2G_LoginGate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.C2G_LoginGate;\n    }\n\n    /** Properties of a G2C_LoginGate. */\n    interface IG2C_LoginGate {\n\n        /** G2C_LoginGate RpcId */\n        RpcId?: (number | null);\n\n        /** G2C_LoginGate Error */\n        Error?: (number | null);\n\n        /** G2C_LoginGate Message */\n        Message?: (string | null);\n\n        /** G2C_LoginGate PlayerId */\n        PlayerId?: (Long | null);\n    }\n\n    /** Represents a G2C_LoginGate. */\n    class G2C_LoginGate implements IG2C_LoginGate {\n\n        /**\n         * Constructs a new G2C_LoginGate.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IG2C_LoginGate);\n\n        /** G2C_LoginGate RpcId. */\n        public RpcId: number;\n\n        /** G2C_LoginGate Error. */\n        public Error: number;\n\n        /** G2C_LoginGate Message. */\n        public Message: string;\n\n        /** G2C_LoginGate PlayerId. */\n        public PlayerId: Long;\n\n        /**\n         * Creates a new G2C_LoginGate instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns G2C_LoginGate instance\n         */\n        public static create(properties?: HotfixMessage.IG2C_LoginGate): HotfixMessage.G2C_LoginGate;\n\n        /**\n         * Encodes the specified G2C_LoginGate message. Does not implicitly {@link HotfixMessage.G2C_LoginGate.verify|verify} messages.\n         * @param m G2C_LoginGate message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IG2C_LoginGate, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a G2C_LoginGate message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns G2C_LoginGate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.G2C_LoginGate;\n    }\n\n    /** Properties of a G2C_TestHotfixMessage. */\n    interface IG2C_TestHotfixMessage {\n\n        /** G2C_TestHotfixMessage Info */\n        Info?: (string | null);\n    }\n\n    /** Represents a G2C_TestHotfixMessage. */\n    class G2C_TestHotfixMessage implements IG2C_TestHotfixMessage {\n\n        /**\n         * Constructs a new G2C_TestHotfixMessage.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IG2C_TestHotfixMessage);\n\n        /** G2C_TestHotfixMessage Info. */\n        public Info: string;\n\n        /**\n         * Creates a new G2C_TestHotfixMessage instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns G2C_TestHotfixMessage instance\n         */\n        public static create(properties?: HotfixMessage.IG2C_TestHotfixMessage): HotfixMessage.G2C_TestHotfixMessage;\n\n        /**\n         * Encodes the specified G2C_TestHotfixMessage message. Does not implicitly {@link HotfixMessage.G2C_TestHotfixMessage.verify|verify} messages.\n         * @param m G2C_TestHotfixMessage message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IG2C_TestHotfixMessage, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a G2C_TestHotfixMessage message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns G2C_TestHotfixMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.G2C_TestHotfixMessage;\n    }\n\n    /** Properties of a C2M_TestActorRequest. */\n    interface IC2M_TestActorRequest {\n\n        /** C2M_TestActorRequest RpcId */\n        RpcId?: (number | null);\n\n        /** C2M_TestActorRequest ActorId */\n        ActorId?: (Long | null);\n\n        /** C2M_TestActorRequest Info */\n        Info?: (string | null);\n    }\n\n    /** Represents a C2M_TestActorRequest. */\n    class C2M_TestActorRequest implements IC2M_TestActorRequest {\n\n        /**\n         * Constructs a new C2M_TestActorRequest.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IC2M_TestActorRequest);\n\n        /** C2M_TestActorRequest RpcId. */\n        public RpcId: number;\n\n        /** C2M_TestActorRequest ActorId. */\n        public ActorId: Long;\n\n        /** C2M_TestActorRequest Info. */\n        public Info: string;\n\n        /**\n         * Creates a new C2M_TestActorRequest instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns C2M_TestActorRequest instance\n         */\n        public static create(properties?: HotfixMessage.IC2M_TestActorRequest): HotfixMessage.C2M_TestActorRequest;\n\n        /**\n         * Encodes the specified C2M_TestActorRequest message. Does not implicitly {@link HotfixMessage.C2M_TestActorRequest.verify|verify} messages.\n         * @param m C2M_TestActorRequest message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IC2M_TestActorRequest, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a C2M_TestActorRequest message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns C2M_TestActorRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.C2M_TestActorRequest;\n    }\n\n    /** Properties of a M2C_TestActorResponse. */\n    interface IM2C_TestActorResponse {\n\n        /** M2C_TestActorResponse RpcId */\n        RpcId?: (number | null);\n\n        /** M2C_TestActorResponse Error */\n        Error?: (number | null);\n\n        /** M2C_TestActorResponse Message */\n        Message?: (string | null);\n\n        /** M2C_TestActorResponse Info */\n        Info?: (string | null);\n    }\n\n    /** Represents a M2C_TestActorResponse. */\n    class M2C_TestActorResponse implements IM2C_TestActorResponse {\n\n        /**\n         * Constructs a new M2C_TestActorResponse.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IM2C_TestActorResponse);\n\n        /** M2C_TestActorResponse RpcId. */\n        public RpcId: number;\n\n        /** M2C_TestActorResponse Error. */\n        public Error: number;\n\n        /** M2C_TestActorResponse Message. */\n        public Message: string;\n\n        /** M2C_TestActorResponse Info. */\n        public Info: string;\n\n        /**\n         * Creates a new M2C_TestActorResponse instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns M2C_TestActorResponse instance\n         */\n        public static create(properties?: HotfixMessage.IM2C_TestActorResponse): HotfixMessage.M2C_TestActorResponse;\n\n        /**\n         * Encodes the specified M2C_TestActorResponse message. Does not implicitly {@link HotfixMessage.M2C_TestActorResponse.verify|verify} messages.\n         * @param m M2C_TestActorResponse message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IM2C_TestActorResponse, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a M2C_TestActorResponse message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns M2C_TestActorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.M2C_TestActorResponse;\n    }\n\n    /** Properties of a PlayerInfo. */\n    interface IPlayerInfo {\n\n        /** PlayerInfo RpcId */\n        RpcId?: (number | null);\n    }\n\n    /** Represents a PlayerInfo. */\n    class PlayerInfo implements IPlayerInfo {\n\n        /**\n         * Constructs a new PlayerInfo.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IPlayerInfo);\n\n        /** PlayerInfo RpcId. */\n        public RpcId: number;\n\n        /**\n         * Creates a new PlayerInfo instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns PlayerInfo instance\n         */\n        public static create(properties?: HotfixMessage.IPlayerInfo): HotfixMessage.PlayerInfo;\n\n        /**\n         * Encodes the specified PlayerInfo message. Does not implicitly {@link HotfixMessage.PlayerInfo.verify|verify} messages.\n         * @param m PlayerInfo message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IPlayerInfo, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a PlayerInfo message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.PlayerInfo;\n    }\n\n    /** Properties of a C2G_PlayerInfo. */\n    interface IC2G_PlayerInfo {\n\n        /** C2G_PlayerInfo RpcId */\n        RpcId?: (number | null);\n    }\n\n    /** Represents a C2G_PlayerInfo. */\n    class C2G_PlayerInfo implements IC2G_PlayerInfo {\n\n        /**\n         * Constructs a new C2G_PlayerInfo.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IC2G_PlayerInfo);\n\n        /** C2G_PlayerInfo RpcId. */\n        public RpcId: number;\n\n        /**\n         * Creates a new C2G_PlayerInfo instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns C2G_PlayerInfo instance\n         */\n        public static create(properties?: HotfixMessage.IC2G_PlayerInfo): HotfixMessage.C2G_PlayerInfo;\n\n        /**\n         * Encodes the specified C2G_PlayerInfo message. Does not implicitly {@link HotfixMessage.C2G_PlayerInfo.verify|verify} messages.\n         * @param m C2G_PlayerInfo message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IC2G_PlayerInfo, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a C2G_PlayerInfo message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns C2G_PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.C2G_PlayerInfo;\n    }\n\n    /** Properties of a G2C_PlayerInfo. */\n    interface IG2C_PlayerInfo {\n\n        /** G2C_PlayerInfo RpcId */\n        RpcId?: (number | null);\n\n        /** G2C_PlayerInfo Error */\n        Error?: (number | null);\n\n        /** G2C_PlayerInfo Message */\n        Message?: (string | null);\n\n        /** G2C_PlayerInfo PlayerInfo */\n        PlayerInfo?: (HotfixMessage.IPlayerInfo | null);\n\n        /** G2C_PlayerInfo PlayerInfos */\n        PlayerInfos?: (HotfixMessage.IPlayerInfo[] | null);\n\n        /** G2C_PlayerInfo TestRepeatedString */\n        TestRepeatedString?: (string[] | null);\n\n        /** G2C_PlayerInfo TestRepeatedInt32 */\n        TestRepeatedInt32?: (number[] | null);\n    }\n\n    /** Represents a G2C_PlayerInfo. */\n    class G2C_PlayerInfo implements IG2C_PlayerInfo {\n\n        /**\n         * Constructs a new G2C_PlayerInfo.\n         * @param [p] Properties to set\n         */\n        constructor(p?: HotfixMessage.IG2C_PlayerInfo);\n\n        /** G2C_PlayerInfo RpcId. */\n        public RpcId: number;\n\n        /** G2C_PlayerInfo Error. */\n        public Error: number;\n\n        /** G2C_PlayerInfo Message. */\n        public Message: string;\n\n        /** G2C_PlayerInfo PlayerInfo. */\n        public PlayerInfo?: (HotfixMessage.IPlayerInfo | null);\n\n        /** G2C_PlayerInfo PlayerInfos. */\n        public PlayerInfos: HotfixMessage.IPlayerInfo[];\n\n        /** G2C_PlayerInfo TestRepeatedString. */\n        public TestRepeatedString: string[];\n\n        /** G2C_PlayerInfo TestRepeatedInt32. */\n        public TestRepeatedInt32: number[];\n\n        /**\n         * Creates a new G2C_PlayerInfo instance using the specified properties.\n         * @param [properties] Properties to set\n         * @returns G2C_PlayerInfo instance\n         */\n        public static create(properties?: HotfixMessage.IG2C_PlayerInfo): HotfixMessage.G2C_PlayerInfo;\n\n        /**\n         * Encodes the specified G2C_PlayerInfo message. Does not implicitly {@link HotfixMessage.G2C_PlayerInfo.verify|verify} messages.\n         * @param m G2C_PlayerInfo message or plain object to encode\n         * @param [w] Writer to encode to\n         * @returns Writer\n         */\n        public static encode(m: HotfixMessage.IG2C_PlayerInfo, w?: $protobuf.Writer): $protobuf.Writer;\n\n        /**\n         * Decodes a G2C_PlayerInfo message from the specified reader or buffer.\n         * @param r Reader or buffer to decode from\n         * @param [l] Message length if known beforehand\n         * @returns G2C_PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        public static decode(r: ($protobuf.Reader | Uint8Array), l?: number): HotfixMessage.G2C_PlayerInfo;\n    }\n}\n"
}