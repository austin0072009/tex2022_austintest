{"version":3,"sources":["assets\\Script\\Common\\PayTable.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import SoundMgr from \"../modules/@mogafa/utils/lib/SoundMgr\";\nimport { Utils } from \"../modules/@mogafa/utils/lib/Utils\";\nimport { Popup } from \"../modules/@slotsmaster/ui-common/lib/Popup\";\n\n\nexport default abstract class PayTable extends Popup {\n    private _view: fgui.GComponent;\n    private _json: [];\n    private _curBet: number = 0;\n    public set curBet(value: number) {\n        this._curBet = value;\n    }\n    protected get animNode(): cc.Node[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected get buttonOKName(): string {\n        return null;\n    }\n    protected get goldGrowName(): string[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected get normalNumName(): string[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected get payTableListName(): string {\n        return \"list\";\n    }\n    protected get backToGameButtonName(): string {\n        return \"backToGame\";\n    }\n    protected get openRightPageButtonName(): string {\n        return \"openRightPage\";\n    }\n    protected get openLeftPageButtonName(): string {\n        return \"openLeftPage\";\n    }\n    protected get showPayTableEvent(): string {\n        return \"showPayTable\";\n    }\n    public get closeTime(): number {\n        return -1;\n    }\n    protected payTableLista: fgui.GGroup;\n    protected payTableList: fgui.GList;\n    protected backToGameButton: fgui.GButton;\n    protected openRightPageButton: fgui.GButton;\n    protected openLeftPageButton: fgui.GButton;\n\n    private _curIndex: number;\n\n    protected createChildComponents() {\n        super.createChildComponents();\n        this._view = this.fguiComponent;\n        this.node.on(this.showPayTableEvent, this.show, this);\n        if (this.payTableListName) {\n            this.payTableList = this.getChild(this.payTableListName).asList;\n            this._curIndex = this.payTableList.getFirstChildInView();\n        }\n        if (this.backToGameButtonName) {\n            this.backToGameButton = this.getChild(this.backToGameButtonName).asButton;\n            this.backToGameButton.onClick(this.onBackToGameClick.bind(this));\n        }\n        if (this.openRightPageButtonName) {\n            this.openRightPageButton = this.getChild(this.openRightPageButtonName).asButton;\n            this.openRightPageButton.onClick(this.onOpenLeftPageClick.bind(this));\n        }\n        if (this.openLeftPageButtonName) {\n            this.openLeftPageButton = this.getChild(this.openLeftPageButtonName).asButton;\n            this.openLeftPageButton.onClick(this.onOpenRightPageClick.bind(this));\n        }\n    }\n\n    public onBackToGameClick(listener: Function, target?: any): void {\n        SoundMgr.getInstance().playEffect(\"button\");\n        this.payTableList.scrollToView(0);\n        this._curIndex = 0;\n        super.hide();\n    }\n    public onOpenRightPageClick(listener: Function, target?: any): void {\n        SoundMgr.getInstance().playEffect(\"button\");\n        this._curIndex = this.payTableList.scrollPane.currentPageX;\n        this._curIndex--;\n        if (this._curIndex >= 0) {\n            this.jumpPointItem();\n        }\n    }\n    public onOpenLeftPageClick(listener: Function, target?: any): void {\n        SoundMgr.getInstance().playEffect(\"button\");\n        this._curIndex = this.payTableList.scrollPane.currentPageX;\n        this._curIndex++;\n        if (this._curIndex <= this.payTableList.numChildren) {\n            this.jumpPointItem();\n        }\n    }\n    private jumpPointItem(): void {\n        this.payTableList.scrollToView(this._curIndex, true);\n        this.payTableList.itemIndexToChildIndex(this._curIndex);\n    }\n    public setData(json: any, curBets: number) {\n        if (!json) return;\n        this._json = json;\n        this._curBet = curBets;\n        let payTableTable = json.config;\n        for (let i = 0; i < this.payTableList.numItems; i++) {\n            const element = this.payTableList._children[i].asCom;\n            if (element.name == \"payTable\") {\n                let payTableTableData = payTableTable.payTable;\n                let labelGroup = element.getChild(\"payTableData\").asCom;\n                for (let j = 0; j < labelGroup.numChildren; j++) {\n                    //* 根据棋子的编码对应paytable返回数据的下标\n                    var index = parseInt(labelGroup._children[j].name);\n                    var revKey = Object.keys(payTableTableData[index]).reverse();\n                    let str = \"\";\n                    for (let k = 0; k < revKey.length; k++) {\n                        str =\n                            str +\n                            revKey[k] +\n                            \"=\" +\n                            Utils.numToCountingNnit(payTableTableData[index][revKey[k]] * curBets / payTableTable.linecount) +\n                            \"\\n\"; // cc.cdd.MgrUser.curBets\n                    }\n                    labelGroup._children[j].text = str;\n                }\n            }\n            if (element.name == \"scatterMap\") {\n                let scatterMap = payTableTable.scatterMap;\n                if (scatterMap) {\n                    let labelGroup1 = element.getChild(\"scatterMapData\").asCom;\n                    for (var a = 0; a < labelGroup1.numChildren; a++) {\n                        var index = parseInt(labelGroup1._children[a].name);\n                        let data2 = scatterMap[index];\n                        labelGroup1._children[a].text = data2;\n                    }\n                }\n            }\n            if (element.name == \"jpMultipleMap\") {\n                let jpMultipleMap = payTableTable.jpMultipleMap;\n                if (jpMultipleMap) {\n                    let labelGroup2 = element.getChild(\"jpMultipleMapData\").asCom;\n                    for (var a = 0; a < labelGroup2.numChildren; a++) {\n                        var index = parseInt(labelGroup2._children[a].name);\n                        let data2 = jpMultipleMap[index];\n                        labelGroup2._children[a].text = data2;\n                    }\n                }\n            }\n            if (element.name == \"zuesFeature\") {\n                let zuesFeature = payTableTable.zuesFeature;\n                if (zuesFeature) {\n                    let labelGroup2 = element.getChild(\"zuesFeatureData\").asCom;\n                    for (var a = 0; a < labelGroup2.numChildren; a++) {\n                        var index = parseInt(labelGroup2._children[a].name);\n                        let data2 = zuesFeature[index];\n                        labelGroup2._children[a].text = data2;\n                    }\n                }\n            }\n            if (element.name == \"jackpot\") {\n                let jackpotData = payTableTable.jackpotData;\n                if (jackpotData) {\n                    let labelGroup2 = element.getChild(\"jackpotData\").asCom;\n                    for (var a = 0; a < labelGroup2.numChildren; a++) {\n                        var index = parseInt(labelGroup2._children[a].name);\n                        let data2 = jackpotData[a];\n                        labelGroup2._children[a].text = data2;\n                    }\n                }\n            }\n        }\n    }\n    public setPayTable(): void { }\n    show() {\n        this.setData(this._json, this._curBet);\n        super.show();\n    }\n}\n"]}